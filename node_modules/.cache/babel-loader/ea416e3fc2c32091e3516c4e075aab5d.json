{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nlet timer; // for holding timer function for auto logout if session expire\n\nexport default {\n  async login(context, payload) {\n    return context.dispatch(\"auth\", { ...payload\n    });\n  },\n\n  async auth(context, payload) {\n    //const token = context.rootGetters.token; //User token !!\n    const baseUrl = localStorage.getItem(\"_rootRestUrl\");\n    const response = await fetch(baseUrl + \"/Authentication/Login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: payload.username,\n        password: payload.password\n      })\n    });\n    /* if (response.status==404) {  \r\n        \r\n         alert(\"Wrong username or password!\");\r\n        // parent.isLoading = false;\r\n     }*/\n\n    if (response.status != 200) {\n      const responseData2 = await response.text(); // console.log(responseData);\n\n      const error = new Error(responseData2);\n      throw error;\n    }\n\n    const responseData = await response.json(); //expecting in json recive 'exipresIn' in minutes! how long will session exists\n    //const expiresIn = responseData.validFor * 1000 * 60;\n\n    const expiresIn = 60 * 1000 * 60; //auto logout if token expires\n\n    timer = setTimeout(function () {\n      context.dispatch(\"autoLogout\");\n    }, expiresIn); //store login details in local storeage so that on refresh page app remember loged user!\n\n    localStorage.setItem(\"token\", responseData.jwtToken);\n    localStorage.setItem(\"userId\", responseData.userId);\n    localStorage.setItem(\"tokenExpiration\", responseData.validUntil);\n    localStorage.setItem(\"userFullname\", responseData.fullName); //data needed from login json:\n    //localStorage.setItem('userFullname',payload.username);\n\n    localStorage.setItem(\"expiresIn\", expiresIn);\n    context.commit(\"setUser\", {\n      token: responseData.key,\n      userId: responseData.userId,\n      userFullname: \"Full name\"\n    });\n  },\n\n  logout(context) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"userFullname\");\n    localStorage.removeItem(\"tokenExpiration\");\n    localStorage.removeItem(\"expiresIn\");\n    localStorage.removeItem(\"selectedProjectType\");\n    localStorage.removeItem(\"projectKey\");\n    localStorage.removeItem(\"selectedProjectContractor\");\n    localStorage.removeItem(\"selectedProjectImage\");\n    localStorage.removeItem(\"selectedProjectNumber\");\n    localStorage.removeItem(\"selectedProjectPublishDate\");\n    localStorage.removeItem(\"selectedProjectTitle\");\n    localStorage.removeItem(\"selectedProjectValidUntil\");\n    localStorage.removeItem(\"appType\");\n    clearTimeout(timer);\n    context.commit(\"setUser\", {\n      token: null,\n      userId: null,\n      userFullname: null,\n      tokenExpiration: null\n    });\n    this.$router.push('/');\n  },\n\n  //try to login if local storage containt login details\n  autoLogin(context) {\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"userId\");\n    const userFullname = localStorage.getItem(\"userFullname\");\n    const tokenExpiration = localStorage.getItem(\"tokenExpiration\");\n    const willExpire = +tokenExpiration - new Date().getTime();\n    const expiresIn = localStorage.getItem(\"expiresIn\");\n\n    if (willExpire < 0) {\n      //if token expires do nothing\n      return;\n    } // alert(\"token ok\")\n    //if is token ok then we must extend life of the token for the next expiration time\n\n\n    const expirationDate = new Date().getTime() + expiresIn;\n    localStorage.setItem(\"tokenExpiration\", expirationDate); //set new timer\n\n    timer = setTimeout(function () {\n      context.dispatch(\"autoLogout\");\n    }, expiresIn); //login \"again\" this user\n\n    if (token && userId && userFullname) {\n      context.commit(\"setUser\", {\n        token: token,\n        userId: userId,\n        userFullname: userFullname\n      });\n    }\n  },\n\n  autoLogout(context) {\n    context.dispatch(\"logout\");\n    context.commit(\"setAutoLogout\");\n    this.$router.push('/');\n  }\n\n};","map":{"version":3,"names":["timer","login","context","payload","dispatch","auth","baseUrl","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","username","password","status","responseData2","text","error","Error","responseData","json","expiresIn","setTimeout","setItem","jwtToken","userId","validUntil","fullName","commit","token","key","userFullname","logout","removeItem","clearTimeout","tokenExpiration","$router","push","autoLogin","willExpire","Date","getTime","expirationDate","autoLogout"],"sources":["Q:/Projects/DFM v2 vue/DFMLive2-vue/src/store/modules/auth/actions.js"],"sourcesContent":["let timer; // for holding timer function for auto logout if session expire\r\n\r\n\r\n\r\nexport default {\r\n  async login(context, payload) {\r\n    return context.dispatch(\"auth\", {\r\n      ...payload,\r\n    });\r\n  },\r\n\r\n  async auth(context, payload) {\r\n    //const token = context.rootGetters.token; //User token !!\r\n\r\n    const baseUrl = localStorage.getItem(\"_rootRestUrl\");\r\n    const response = await fetch(baseUrl+\"/Authentication/Login\", {\r\n      method: \"POST\",\r\n\r\n      headers: {\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username: payload.username,\r\n        password: payload.password,\r\n      }),\r\n    });\r\n\r\n   /* if (response.status==404) {  \r\n       \r\n        alert(\"Wrong username or password!\");\r\n       // parent.isLoading = false;\r\n    }*/\r\n    if (response.status!=200) {\r\n       const responseData2 = await response.text();\r\n\r\n        // console.log(responseData);\r\n        const error = new Error(\r\n            responseData2\r\n        );\r\n        throw error;\r\n      }\r\n\r\n\r\n\r\n    const responseData = await response.json();\r\n\r\n\r\n    //expecting in json recive 'exipresIn' in minutes! how long will session exists\r\n    //const expiresIn = responseData.validFor * 1000 * 60;\r\n    const expiresIn = 60 * 1000 * 60;\r\n\r\n    //auto logout if token expires\r\n    timer = setTimeout(function () {\r\n      context.dispatch(\"autoLogout\");\r\n    }, expiresIn);\r\n\r\n    //store login details in local storeage so that on refresh page app remember loged user!\r\n\r\n    localStorage.setItem(\"token\", responseData.jwtToken);\r\n    localStorage.setItem(\"userId\", responseData.userId);\r\n    localStorage.setItem(\"tokenExpiration\", responseData.validUntil);\r\n    localStorage.setItem(\"userFullname\",responseData.fullName);\r\n\r\n    //data needed from login json:\r\n\r\n    //localStorage.setItem('userFullname',payload.username);\r\n\r\n    localStorage.setItem(\"expiresIn\", expiresIn);\r\n\r\n    context.commit(\"setUser\", {\r\n      token: responseData.key,\r\n      userId: responseData.userId,\r\n      userFullname: \"Full name\",\r\n    });\r\n  },\r\n\r\n  logout(context) {\r\n  \r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"userFullname\");\r\n    localStorage.removeItem(\"tokenExpiration\");\r\n    localStorage.removeItem(\"expiresIn\");\r\n    localStorage.removeItem(\"selectedProjectType\");\r\n    localStorage.removeItem(\"projectKey\");\r\n    localStorage.removeItem(\"selectedProjectContractor\");\r\n    localStorage.removeItem(\"selectedProjectImage\");\r\n    localStorage.removeItem(\"selectedProjectNumber\");\r\n    localStorage.removeItem(\"selectedProjectPublishDate\");\r\n    localStorage.removeItem(\"selectedProjectTitle\");\r\n    localStorage.removeItem(\"selectedProjectValidUntil\");\r\n    localStorage.removeItem(\"appType\");\r\n    \r\n    clearTimeout(timer);\r\n\r\n    context.commit(\"setUser\", {\r\n      token: null,\r\n      userId: null,\r\n      userFullname: null,\r\n      tokenExpiration: null,\r\n    });\r\n\r\n    this.$router.push('/'); \r\n\r\n\r\n  },\r\n\r\n  //try to login if local storage containt login details\r\n  autoLogin(context) {\r\n\r\n   \r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const userFullname = localStorage.getItem(\"userFullname\");\r\n    const tokenExpiration = localStorage.getItem(\"tokenExpiration\");\r\n    const willExpire = +tokenExpiration - new Date().getTime();\r\n    const expiresIn = localStorage.getItem(\"expiresIn\");\r\n\r\n   \r\n\r\n    if (willExpire < 0) {\r\n      //if token expires do nothing\r\n      return;\r\n    }\r\n\r\n   // alert(\"token ok\")\r\n\r\n    //if is token ok then we must extend life of the token for the next expiration time\r\n\r\n    const expirationDate = new Date().getTime() + expiresIn;\r\n    localStorage.setItem(\"tokenExpiration\", expirationDate);\r\n\r\n    //set new timer\r\n    timer = setTimeout(function () {\r\n      context.dispatch(\"autoLogout\");\r\n    }, expiresIn);\r\n\r\n    //login \"again\" this user\r\n    if (token && userId && userFullname) {\r\n      context.commit(\"setUser\", {\r\n        token: token,\r\n        userId: userId,\r\n        userFullname: userFullname,\r\n      });\r\n    }\r\n  },\r\n  autoLogout(context) {\r\n    context.dispatch(\"logout\");\r\n    context.commit(\"setAutoLogout\");\r\n    this.$router.push('/');\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}