{"ast":null,"code":"/*\r\n//visual settings:\r\nvar onLoadSidebarWidth = 200;\r\nvar breakPointForSmallScreen = 750;\r\nvar minWSidebarWidth = 50;\r\n\r\nvar breakPointHideSidebarDescriptions = 150;\r\nvar maxPercentageSidebarWidth = 30;\r\nvar onLoadContentWidth = window.innerWidth - onLoadSidebarWidth;\r\n*/\nexport default {\n  data() {\n    return {\n      TopBackgroundStyle: 'red',\n      MainTitleText: \"sds\",\n      //this._rootAppTitle,\n      showMenu: true,\n      // for visual settings:\n      padding0: \"12px\",\n      menuMinSize: 50,\n      dividerPosition: 200,\n      //px default width of the left sidebar!\n      contentWidth: window.innerWidth - 200,\n      //px width of the main content\n      isActive: true,\n      //in start visible sidebar icon descriptions\n      isCentered: false,\n      //sidebar icons on left at page load\n      iconCloseOpen: \"&times;\"\n    };\n  },\n\n  methods: {\n    /// ------------------------------\n    /// resizable left sidebar!\n    handleDragging(e) {\n      const percentage = e.pageX / window.innerWidth * 100;\n\n      if (e.pageX + 1 > this.menuMinSize && percentage <= 30) {\n        //only resizable if width of the left sidebar is in this percentage range\n        this.dividerPosition = percentage / 100 * window.innerWidth;\n        this.contentWidth = window.innerWidth - this.dividerPosition;\n      } // on small screens hide sidebar menu descriptions\n\n\n      if (e.pageX < 150) {\n        this.isActive = false;\n        this.iconCloseOpen = \"&#9776;\";\n        this.isCentered = true;\n      } else {\n        this.isActive = true;\n        this.iconCloseOpen = \"&times;\";\n        this.isCentered = false;\n      } // -------------------\n\n    },\n\n    startDragging() {\n      document.addEventListener(\"mousemove\", this.handleDragging);\n    },\n\n    endDragging() {\n      document.removeEventListener(\"mousemove\", this.handleDragging);\n    },\n\n    displayMenuToggle() {\n      this.showMenu = true; //this.getDimensions() ;\n\n      this.padding0 = \"12px\";\n      this.dividerPosition = 200; //px default width of the left sidebar!\n\n      this.contentWidth = window.innerWidth - 200; //px width of the main content\n    },\n\n    setToFullScreenWidth() {\n      if (window.innerWidth > 750) {\n        this.contentWidth = window.innerWidth - this.dividerPosition;\n      } else {\n        this.contentWidth = window.innerWidth - this.menuMinSize;\n      } // login page has full screen width without sidebar\n      //  this.padding0 = \"0px\";\n\n    },\n\n    getDimensions() {\n      //on window resize\n      if (window.innerWidth > 750) {\n        this.dividerPosition = 200;\n        this.contentWidth = window.innerWidth - this.dividerPosition;\n        this.isActive = true;\n        this.iconCloseOpen = \"&times;\";\n        this.isCentered = false;\n      } else {\n        this.dividerPosition = this.menuMinSize;\n        this.isActive = false;\n        this.iconCloseOpen = \"&#9776;\";\n        this.isCentered = true;\n      }\n    },\n\n    sidebarColapse() {\n      if (this.dividerPosition > 150) {\n        this.dividerPosition = this.menuMinSize;\n        this.contentWidth = window.innerWidth - this.dividerPosition; // this.isActive = false;\n\n        this.iconCloseOpen = \"&#9776;\";\n      } else {\n        this.dividerPosition = this.menuMinSize;\n        this.contentWidth = window.innerWidth - this.dividerPosition; //  this.isActive = true;\n\n        this.iconCloseOpen = \"&times;\";\n      }\n\n      this.isActive = !this.isActive;\n      this.isCentered = !this.isActive;\n    },\n\n    manualLogout() {\n      this.$store.dispatch(\"logout\");\n      this.showMenu = false;\n      this.$router.replace(\"/\");\n    } // ----------- end resizable left menu -------\n\n\n  },\n\n  mounted() {\n    window.addEventListener(\"resize\", this.getDimensions);\n  },\n\n  unmounted() {\n    window.removeEventListener(\"resize\", this.getDimensions);\n  },\n\n  created() {\n    this.setToFullScreenWidth(); //if user is no loged in then redirect to login page:\n\n    if (!this.$store.getters.isAuthenticated) {\n      this.$router.replace(\"/\");\n    } //check if user is loggen in\n\n\n    this.$store.dispatch(\"autoLogin\"); //on create (on load)\n    // this.projects = projectsObject; // parsed json\n    //hidden sidebar on load if small screen\n\n    if (window.innerWidth < 750) {\n      this.dividerPosition = this.menuMinSize;\n    }\n\n    if (window.innerWidth < 750) {\n      this.isActive = false;\n      this.iconCloseOpen = \"&#9776;\";\n      this.isCentered = true;\n    } else {\n      this.isActive = true;\n      this.iconCloseOpen = \"&times;\";\n      this.isCentered = false;\n    }\n  }\n\n};","map":{"version":3,"mappings":"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","names":["data","TopBackgroundStyle","MainTitleText","showMenu","padding0","menuMinSize","dividerPosition","contentWidth","window","innerWidth","isActive","isCentered","iconCloseOpen","methods","handleDragging","e","percentage","pageX","startDragging","document","addEventListener","endDragging","removeEventListener","displayMenuToggle","setToFullScreenWidth","getDimensions","sidebarColapse","manualLogout","$store","dispatch","$router","replace","mounted","unmounted","created","getters","isAuthenticated"],"sourceRoot":"","sources":["Q:\\Projects\\DFM v2\\src\\components\\PagesHolder.vue"],"sourcesContent":["<template>\r\n      <top-bar background-style=\"rgb(255,255,255,0.6)\" title-color=\"black\" v-bind:title-text=\"MainTitleText\"></top-bar>\r\n\r\n  <div class=\"wrapper\" @mouseup=\"endDragging()\" style=\"position: relative\">\r\n    <div\r\n      id=\"sidebar\"\r\n      v-if=\"showMenu\"\r\n      class=\"sidebar table-dark position-relative\"\r\n      :style=\"{ width: `${dividerPosition}px` }\"\r\n    >\r\n      <div\r\n        class=\"text-end sidebarBtnHolder\"\r\n        v-bind:class=\"{ textcenter: isCentered }\"\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          class=\"sidebarCollapseBtn\"\r\n          v-on:click=\"sidebarColapse()\"\r\n          v-html=\"iconCloseOpen\"\r\n        ></button>\r\n      </div>\r\n\r\n      <div class=\"sidebarTopMenu\">\r\n        \r\n       \r\n            <div class=\"sidebarMenuRow\" title=\"Manage users\" v-bind:class=\"{ textcenter: isCentered }\"  >\r\n                 <router-link to=\"/pages/manageUsers\">\r\n                        <i class=\"fa-solid fa-users sideBarIcon\"></i>\r\n                        <span class=\"menuDesc\" v-bind:class=\"{ active: isActive}\">Manage users</span>\r\n                </router-link>\r\n            </div>\r\n        \r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      id=\"divider\"\r\n      v-if=\"showMenu\"\r\n      class=\"divider\"\r\n      :style=\"{ left: `${dividerPosition}px` }\"\r\n      @mousedown=\"startDragging()\"\r\n    ></div>\r\n\r\n    <div id=\"content\" class=\"content\" :style=\"{ width: `${contentWidth}px` }\">\r\n      <section>\r\n        <div class=\"container-fluid\" :style=\"{ padding: `${this.padding0}` }\">\r\n          \r\n            <router-view></router-view>\r\n\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\n/*\r\n//visual settings:\r\nvar onLoadSidebarWidth = 200;\r\nvar breakPointForSmallScreen = 750;\r\nvar minWSidebarWidth = 50;\r\n\r\nvar breakPointHideSidebarDescriptions = 150;\r\nvar maxPercentageSidebarWidth = 30;\r\nvar onLoadContentWidth = window.innerWidth - onLoadSidebarWidth;\r\n*/\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n       TopBackgroundStyle : 'red',\r\n       MainTitleText : \"sds\",//this._rootAppTitle,\r\n      showMenu: true,\r\n\r\n      // for visual settings:\r\n\r\n      padding0: \"12px\",\r\n      menuMinSize : 50,\r\n      dividerPosition: 200, //px default width of the left sidebar!\r\n      contentWidth: window.innerWidth - 200, //px width of the main content\r\n      isActive: true, //in start visible sidebar icon descriptions\r\n      isCentered: false, //sidebar icons on left at page load\r\n      iconCloseOpen: \"&times;\",\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    /// ------------------------------\r\n    /// resizable left sidebar!\r\n    handleDragging(e) {\r\n      const percentage = (e.pageX / window.innerWidth) * 100;\r\n\r\n      if (e.pageX + 1 > this.menuMinSize && percentage <= 30) {\r\n        //only resizable if width of the left sidebar is in this percentage range\r\n        this.dividerPosition = (percentage / 100) * window.innerWidth;\r\n        this.contentWidth = window.innerWidth - this.dividerPosition;\r\n      }\r\n\r\n      // on small screens hide sidebar menu descriptions\r\n      if (e.pageX < 150) {\r\n        this.isActive = false;\r\n        this.iconCloseOpen = \"&#9776;\";\r\n        this.isCentered = true;\r\n       \r\n      } else {\r\n        this.isActive = true;\r\n        this.iconCloseOpen = \"&times;\";\r\n        this.isCentered = false;\r\n       \r\n      }\r\n      // -------------------\r\n    },\r\n    startDragging() {\r\n      document.addEventListener(\"mousemove\", this.handleDragging);\r\n    },\r\n    endDragging() {\r\n      document.removeEventListener(\"mousemove\", this.handleDragging);\r\n    },\r\n\r\n    displayMenuToggle() {\r\n      this.showMenu = true;\r\n      //this.getDimensions() ;\r\n\r\n      this.padding0 = \"12px\";\r\n      this.dividerPosition = 200; //px default width of the left sidebar!\r\n      this.contentWidth = window.innerWidth - 200; //px width of the main content\r\n    },\r\n    setToFullScreenWidth() {\r\n      \r\n      if (window.innerWidth > 750) {\r\n         this.contentWidth = window.innerWidth - this.dividerPosition\r\n      }else{\r\n          this.contentWidth = window.innerWidth - this.menuMinSize\r\n      }\r\n     // login page has full screen width without sidebar\r\n    //  this.padding0 = \"0px\";\r\n    },\r\n\r\n    getDimensions() {\r\n      //on window resize\r\n\r\n      if (window.innerWidth > 750) {\r\n        this.dividerPosition = 200;\r\n        this.contentWidth = window.innerWidth - this.dividerPosition;\r\n        this.isActive = true;\r\n        this.iconCloseOpen = \"&times;\";\r\n        this.isCentered = false;\r\n      } else {\r\n        this.dividerPosition = this.menuMinSize;\r\n        this.isActive = false;\r\n        this.iconCloseOpen = \"&#9776;\";\r\n        this.isCentered = true;\r\n      }\r\n    },\r\n    sidebarColapse() {\r\n     \r\n\r\n      if (this.dividerPosition > 150) {\r\n        this.dividerPosition = this.menuMinSize;\r\n        this.contentWidth = window.innerWidth - this.dividerPosition;\r\n       // this.isActive = false;\r\n        this.iconCloseOpen = \"&#9776;\";\r\n      } else {\r\n        this.dividerPosition = this.menuMinSize;\r\n        this.contentWidth = window.innerWidth - this.dividerPosition;\r\n      //  this.isActive = true;\r\n        this.iconCloseOpen = \"&times;\";\r\n      }\r\n       this.isActive = !this.isActive;\r\n      this.isCentered = !this.isActive;\r\n    },\r\n\r\n    manualLogout() {\r\n      this.$store.dispatch(\"logout\");\r\n      this.showMenu = false;\r\n      this.$router.replace(\"/\");\r\n    },\r\n\r\n    // ----------- end resizable left menu -------\r\n  },\r\n\r\n  mounted() {\r\n   \r\n   \r\n    window.addEventListener(\"resize\", this.getDimensions);\r\n  },\r\n  unmounted() {\r\n    window.removeEventListener(\"resize\", this.getDimensions);\r\n  },\r\n  \r\n  created() {\r\n\r\n    this.setToFullScreenWidth();\r\n\r\n    //if user is no loged in then redirect to login page:\r\n    if(!this.$store.getters.isAuthenticated){\r\n        this.$router.replace(\"/\");\r\n    }\r\n    \r\n    //check if user is loggen in\r\n    this.$store.dispatch(\"autoLogin\");\r\n\r\n    //on create (on load)\r\n    // this.projects = projectsObject; // parsed json\r\n\r\n    //hidden sidebar on load if small screen\r\n    if (window.innerWidth < 750) {\r\n      this.dividerPosition = this.menuMinSize;\r\n    }\r\n\r\n    if (window.innerWidth < 750) {\r\n      this.isActive = false;\r\n      this.iconCloseOpen = \"&#9776;\";\r\n      this.isCentered = true;\r\n    } else {\r\n      this.isActive = true;\r\n      this.iconCloseOpen = \"&times;\";\r\n      this.isCentered = false;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}