{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"width\": \"100%\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"display\": \"none\"\n  },\n  class: \"flex justify-content-between\"\n};\nconst _hoisted_3 = {\n  class: \"p-input-icon-left\",\n  id: \"searchBox\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-search\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Loading data. Please wait... \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_spinner = _resolveComponent(\"base-spinner\");\n\n  const _component_base_dialog = _resolveComponent(\"base-dialog\");\n\n  const _component_InputText = _resolveComponent(\"InputText\");\n\n  const _component_Column = _resolveComponent(\"Column\");\n\n  const _component_DataTable = _resolveComponent(\"DataTable\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_base_dialog, {\n    show: _ctx.isLoading,\n    title: \"Authenticating...\",\n    fixed: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_base_spinner)]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"show\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_DataTable, {\n    id: _ctx.dataTable,\n    value: $data.allUsers,\n    paginator: true,\n    rows: 25,\n    dataKey: \"id\",\n    stripedRows: \"\",\n    filters: $data.filters,\n    \"onUpdate:filters\": _cache[1] || (_cache[1] = $event => $data.filters = $event),\n    filterDisplay: \"menu\",\n    key: \"key\",\n    paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n    paginatorStart: \"CurrentPageReport\",\n    rowsPerPageOptions: [25, 50, 100],\n    responsiveLayout: \"scroll\",\n    currentPageReportTemplate: \"Showing {first} to {last} of total {totalRecords} trips\",\n    globalFilterFields: ['userFullName', 'from', 'to', 'companyName', 'cargoName', 'comments'],\n    selectionMode: \"single\",\n    onRowSelect: _ctx.onRowSelect,\n    onRowClick: _ctx.onRowClick,\n    loading: _ctx.loading1,\n    scrollable: \"\",\n    scrollHeight: _ctx.tableHeight\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" <Button type=\\\"button\\\" icon=\\\"pi pi-filter-slash\\\" label=\\\"Clear\\\" class=\\\"p-button-outlined\\\" @click=\\\"clearFilter1()\\\"/>  \"), _createElementVNode(\"span\", _hoisted_3, [_hoisted_4, _createVNode(_component_InputText, {\n      modelValue: $data.filters['global'].value,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.filters['global'].value = $event),\n      placeholder: \"Keyword Search\"\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\"])])])]),\n    empty: _withCtx(() => []),\n    loading: _withCtx(() => [_hoisted_5]),\n    paginatorstart: _withCtx(() => []),\n    paginatorend: _withCtx(() => []),\n    default: _withCtx(() => [_createVNode(_component_Column, {\n      field: \"name\",\n      header: \"Name\",\n      sortable: true,\n      bodyStyle: \"text-align: left\"\n    }, {\n      filter: _withCtx(({\n        filterModel\n      }) => [_createVNode(_component_InputText, {\n        type: \"text\",\n        modelValue: filterModel.value,\n        \"onUpdate:modelValue\": $event => filterModel.value = $event,\n        class: \"p-column-filter\",\n        placeholder: `Name`\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"onUpdate:modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"id\", \"value\", \"filters\", \"onRowSelect\", \"onRowClick\", \"loading\", \"scrollHeight\"])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EAMOA,KAAmB,EAAnB;IAAA;EAAA;;;EAoBkBA,KAAoB,EAApB;IAAA;EAAA;EAAqBC,KAAK,EAAC;;;EAEtBA,KAAK,EAAC;EAAoBC,EAAE,EAAC;;;gCAC/BC,oBAA0B,GAA1B,EAA0B;EAAvBF,KAAK,EAAC;AAAiB,CAA1B,EAAuB,IAAvB,EAAuB;AAAA;AAAvB;;iDAcE;;;;;;;;;;;;;6DAzC5BG,aAEcC,sBAFd,EAEc;IAFAC,IAAI,EAAEC,cAEN;IAFkBC,KAAK,EAAC,mBAExB;IAF4CC,KAAK,EAAL;EAE5C,CAFd;sBACE,MAA6B,CAA7BL,aAA6BM,uBAA7B,CAA6B;;;;GAD/B;;EAAA,aAIAP,oBAmEI,KAnEJ,cAmEI,CAlEJC,aAiEUO,oBAjEV,EAiEU;IAjEET,EAAE,EAAEK,cAiEN;IAjEkBK,KAAK,EAAEC,cAiEzB;IAjEoCC,SAAS,EAAE,IAiE/C;IAjEsDC,IAAI,EAAE,EAiE5D;IAjEkEC,OAAO,EAAC,IAiE1E;IAjEgFC,WAAW,EAAX,EAiEhF;IAjEoGC,OAAO,EAAEL,aAiE7G;4DAjE6GA,gBAAOM,OAiEpH;IAjEsHC,aAAa,EAAC,MAiEpI;IAjE2IC,GAAG,EAAC,KAiE/I;IAhEAC,iBAAiB,EAAC,sGAgElB;IA/DAC,cAAc,EAAC,mBA+Df;IA9DCC,kBAAkB,EAAE,aA8DrB;IA9DkCC,gBAAgB,EAAC,QA8DnD;IA7DAC,yBAAyB,EAAC,yDA6D1B;IA5DCC,kBAAkB,EAAE,sEA4DrB;IA3DAC,aAAa,EAAC,QA2Dd;IA1DCC,WAAS,EAAEtB,gBA0DZ;IAzDCuB,UAAQ,EAAEvB,eAyDX;IAvDawB,OAAO,EAAExB,aAuDtB;IAtDAyB,UAAU,EAAV,EAsDA;IArDCC,YAAY,EAAE1B;EAqDf,CAjEV;IAiBuB2B,MAAM,WAEX,MAMM,CANN/B,oBAMM,KANN,cAMM,CALFgC,qJAKE,EAJFhC,oBAGO,MAHP,cAGO,CAFHiC,UAEG,EADHhC,aAA4EiC,oBAA5E,EAA4E;kBAAxDxB,cAAO,QAAP,EAAkBD,KAAsC;iEAAxDC,cAAO,QAAP,EAAkBD,QAAKO,OAAiC;MAA/BmB,WAAW,EAAC;IAAmB,CAA5E;;IAAA,iBACG,CAHP,CAIE,CANN,CAMM,CARK;IAgBTC,KAAK,WAAhB,MAEW,EAFK;IAGLR,OAAO,WAAC,MAEnB,YAFkB;IAkBdS,cAAc,WAAzB,MAEW,EAFc;IAGdC,YAAY,WAAvB,MAEW,EAFY;sBAhBvB,MAIS,CAJTrC,aAISsC,iBAJT,EAIS;MAJDC,KAAK,EAAC,MAIL;MAJYT,MAAM,EAAC,MAInB;MAJ2BU,QAAQ,EAAE,IAIrC;MAJ2CC,SAAS,EAAC;IAIrD,CAJT;MACeC,MAAM,WACb,CAAmG;QADnFC;MACmF,CAAnG,KAD2B,CAC3B3C,aAAmGiC,oBAAnG,EAAmG;QAAvFW,IAAI,EAAC,MAAkF;oBAAlED,WAAW,CAACnC,KAAsD;yCAAlEmC,WAAW,CAACnC,QAAKO,MAAiD;QAA/ClB,KAAK,EAAC,iBAAyC;QAAtBqC,WAAW,EAAE;MAAS,CAAnG;;MAAA,wCAD2B,CAAd;;;;KADrB,CAIS;;;;GA7CX;;EAAA,qFAkEI,CAnEJ","names":["style","class","id","_createElementVNode","_createVNode","_component_base_dialog","show","_ctx","title","fixed","_component_base_spinner","_component_DataTable","value","$data","paginator","rows","dataKey","stripedRows","filters","$event","filterDisplay","key","paginatorTemplate","paginatorStart","rowsPerPageOptions","responsiveLayout","currentPageReportTemplate","globalFilterFields","selectionMode","onRowSelect","onRowClick","loading","scrollable","scrollHeight","header","_createCommentVNode","_hoisted_4","_component_InputText","placeholder","empty","paginatorstart","paginatorend","_component_Column","field","sortable","bodyStyle","filter","filterModel","type"],"sourceRoot":"","sources":["Q:\\Projects\\Transport-web-\\src\\components\\pages\\transport\\ManageUsers.vue"],"sourcesContent":["<template>\r\n\r\n  <base-dialog :show=\"isLoading\"  title=\"Authenticating...\" fixed>\r\n    <base-spinner></base-spinner>\r\n  </base-dialog>\r\n\r\n  <div style=\"width:100%;\">\r\n  <DataTable :id=\"dataTable\" :value=\"allUsers\" :paginator=\"true\" :rows=\"25\"   dataKey=\"id\"  stripedRows v-model:filters=\"filters\" filterDisplay=\"menu\" key=\"key\" \r\n            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n            paginatorStart=\"CurrentPageReport\"\r\n            :rowsPerPageOptions=\"[25,50,100]\" responsiveLayout=\"scroll\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of total {totalRecords} trips\"\r\n            :globalFilterFields=\"['userFullName','from','to','companyName','cargoName','comments' ]\"\r\n            selectionMode=\"single\"\r\n            @rowSelect=\"onRowSelect\"\r\n            @rowClick=\"onRowClick\"\r\n            \r\n                        :loading=\"loading1\"\r\n            scrollable \r\n            :scrollHeight=\"tableHeight\"\r\n            >\r\n   \r\n\r\n\r\n              <template #header >\r\n                    \r\n                    <div style=\"display:none\" class=\"flex justify-content-between\">\r\n                        <!-- <Button type=\"button\" icon=\"pi pi-filter-slash\" label=\"Clear\" class=\"p-button-outlined\" @click=\"clearFilter1()\"/>  -->\r\n                        <span class=\"p-input-icon-left\" id=\"searchBox\">\r\n                            <i class=\"pi pi-search\" />\r\n                            <InputText v-model=\"filters['global'].value\" placeholder=\"Keyword Search\" />\r\n                        </span>\r\n                    </div>\r\n\r\n\r\n\r\n                   \r\n\r\n            </template>\r\n           \r\n           <template #empty>\r\n                    \r\n           </template>\r\n           <template #loading>\r\n                    Loading data. Please wait...\r\n           </template>\r\n\r\n\r\n    <Column field=\"name\" header=\"Name\" :sortable=\"true\" bodyStyle=\"text-align: left\">\r\n        <template #filter=\"{filterModel}\">\r\n            <InputText  type=\"text\" v-model=\"filterModel.value\" class=\"p-column-filter\" :placeholder=\"`Name`\"/>\r\n        </template>\r\n    </Column>\r\n\r\n\r\n    \r\n   \r\n    \r\n   \r\n\r\n\r\n    <template #paginatorstart>\r\n    \r\n    </template>         \r\n    <template #paginatorend>\r\n      \r\n    </template>  \r\n    \r\n\r\n   \r\n\r\n\r\n</DataTable>\r\n</div>\r\n\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n// Primevue datatable help: https://www.primefaces.org/primevue/datatable //\r\n\r\n//import DataTable from \"primevue/datatable\";\r\n//import Column from \"primevue/column\";\r\n//import InputText from 'primevue/inputtext';\r\n//import Button from 'primevue/button';\r\n//import Dialog from 'primevue/dialog';\r\n//import InlineMessage from 'primevue/inlinemessage';\r\n//import InputNumber from 'primevue/inputnumber';\r\n//import TabView from 'primevue/tabview';\r\n//import TabPanel from 'primevue/tabpanel';\r\n//import Dropdown from 'primevue/dropdown';\r\n\r\nimport axios from \"axios\";\r\n//import $ from \"jquery\";\r\n\r\nimport {FilterMatchMode,FilterOperator} from 'primevue/api';         // for filtering\r\n\r\n\r\n\r\nexport default {\r\n    props: [\"systemId\"],\r\n    components: {\r\n        //DataTable,\r\n        //Column,\r\n        //InputText,\r\n        //Button,\r\n        //Dialog,\r\n        //InlineMessage,\r\n        //InputNumber,\r\n        //TabView,\r\n        //TabPanel,\r\n        //Dropdown,\r\n    \r\n  },\r\n  \r\n  data() {\r\n        return {\r\n            allUsers:[],\r\n           \r\n            filters: {\r\n               'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n               'name':{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n               'surname': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n               'email': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n              \r\n            },\r\n            matchModes: [\r\n                    {label: 'Starts With', value: FilterMatchMode.STARTS_WITH},\r\n                    {label: 'Contains', value: FilterMatchMode.CONTAINS},\r\n             ],\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getAllUsers();\r\n\r\n    },\r\n    methods: {\r\n        getAllUsers(){\r\n            \r\n          const sessionId=localStorage.getItem(\"token\");\r\n          const baseUrl = localStorage.getItem(\"_rootRestUrl\");\r\n          \r\n          let formData = JSON.stringify({ sessionId: sessionId });\r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n\r\n          };\r\n\r\n           axios\r\n            .get(baseUrl + \"/api/v1/User/Users/?sessionId=\"+sessionId+\"\", formData, config)\r\n            .then((response) => {\r\n               this.allUsers = response.data;\r\n           \r\n            })           \r\n             .catch(function (error) {\r\n                // handle error\r\n                console.table(error);\r\n             });\r\n\r\n\r\n        }\r\n\r\n    },\r\n\r\n\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}