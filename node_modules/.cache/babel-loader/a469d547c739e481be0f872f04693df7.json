{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default {\n  async login(context, payload) {\n    return context.dispatch('auth', { ...payload\n    });\n  },\n\n  async auth(context, payload) {\n    const token = context.rootGetters.token; //User token !!\n\n    const response = await fetch('https://www.it-b.hr/computech.php?auth=' + token, {\n      method: 'POST',\n      body: JSON.stringify({\n        username: payload.username,\n        password: payload.password,\n        userFullname: payload.userFullname,\n        returnSecureToken: true\n      })\n    });\n    const responseData = await response.json();\n\n    if (!response.ok) {\n      // console.log(responseData);\n      const error = new Error(responseData.message || 'Failed to authenticate.');\n      throw error;\n    } //expecting in json recive 'exipresIn' in miliseconds how long will session exists\n\n\n    const expiresIn = +responseData.expiresIn * 1000;\n    const expirationDate = new Date().getTime() + expiresIn; //store login details in local storeage so that on refresh page app remember loged user!\n\n    localStorage.setItem('token', responseData[0].token);\n    localStorage.setItem('userId', responseData[0].userId);\n    localStorage.setItem('userFullname', responseData[0].userFullname);\n    context.commit('setUser', {\n      token: responseData[0].token,\n      userId: responseData[0].userId,\n      userFullname: responseData[0].userFullname,\n      tokenExpiration: expirationDate\n    });\n  },\n\n  logout(context) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId'), localStorage.removeItem('userFullname'), context.commit('setUset', {\n      token: null,\n      userId: null,\n      userFullname: null,\n      tokenExpiration: null\n    });\n  },\n\n  //try to login if local storage containt login details\n  autoLogin(context) {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    const userFullname = localStorage.getItem('userFullname');\n\n    if (token && userId && userFullname) {\n      context.commit('setUser', {\n        token: token,\n        userId: userId,\n        userFullname: userFullname,\n        tokenExpiration: null\n      });\n    }\n  }\n\n};","map":{"version":3,"names":["login","context","payload","dispatch","auth","token","rootGetters","response","fetch","method","body","JSON","stringify","username","password","userFullname","returnSecureToken","responseData","json","ok","error","Error","message","expiresIn","expirationDate","Date","getTime","localStorage","setItem","userId","commit","tokenExpiration","logout","removeItem","autoLogin","getItem"],"sources":["H:/www/vue/vue-cli-01-a-new-vue-project/src/store/modules/auth/actions.js"],"sourcesContent":["export default {\r\n    async login(context,payload) {\r\n          return  context.dispatch('auth',{\r\n                ...payload\r\n            });\r\n    }, \r\n    \r\n    async  auth(context,payload){\r\n\r\n        const token = context.rootGetters.token; //User token !!\r\n\r\n   \r\n        const response = await fetch('https://www.it-b.hr/computech.php?auth='+token,{\r\n               method: 'POST',\r\n               body: JSON.stringify({\r\n                   username: payload.username,\r\n                   password: payload.password,\r\n                   userFullname: payload.userFullname,\r\n                   returnSecureToken : true\r\n               })\r\n              \r\n   \r\n          });\r\n                 \r\n          const responseData = await response.json();\r\n   \r\n          if(!response.ok){\r\n              // console.log(responseData);\r\n               const error = new Error(responseData.message || 'Failed to authenticate.');\r\n               throw error;\r\n          }\r\n\r\n          //expecting in json recive 'exipresIn' in miliseconds how long will session exists\r\n          const expiresIn = +responseData.expiresIn * 1000;\r\n          const expirationDate = new Date().getTime() +  expiresIn;\r\n   \r\n          //store login details in local storeage so that on refresh page app remember loged user!\r\n          localStorage.setItem('token',responseData[0].token);\r\n          localStorage.setItem('userId',responseData[0].userId);\r\n          localStorage.setItem('userFullname',responseData[0].userFullname);\r\n         \r\n\r\n          context.commit('setUser',{\r\n                  token: responseData[0].token,\r\n                  userId : responseData[0].userId,\r\n                  userFullname: responseData[0].userFullname,\r\n                  tokenExpiration :expirationDate\r\n   \r\n           });\r\n   \r\n    },\r\n    \r\n    logout(context){\r\n\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userId'),\r\n        localStorage.removeItem('userFullname'),\r\n\r\n\r\n        context.commit('setUset', {\r\n            token : null,\r\n            userId : null,\r\n            userFullname : null,\r\n            tokenExpiration : null\r\n        })\r\n\r\n    },\r\n\r\n    //try to login if local storage containt login details\r\n    autoLogin(context){\r\n        const token = localStorage.getItem('token');\r\n        const userId = localStorage.getItem('userId');\r\n        const userFullname = localStorage.getItem('userFullname');\r\n\r\n        if (token && userId && userFullname){\r\n            context.commit('setUser',{\r\n                  token: token,\r\n                  userId : userId,\r\n                  userFullname: userFullname,\r\n                  tokenExpiration: null\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}