{"ast":null,"code":"export default {\n  data() {\n    return {\n      //login:\n      username: '',\n      password: '',\n      showUsernameAlert: false,\n      showPasswordAlert: false,\n      formIsValid: true,\n      isLoading: false,\n      error: null,\n      //testing;\n      token: ''\n    };\n  },\n\n  methods: {\n    usernameKeyDown() {\n      this.showUsernameAlert = false;\n\n      if (this.username.length == 0) {\n        this.showUsernameAlert = true;\n        this.formIsValid = false;\n        this.usernameMessage = \"Please enter username\";\n      }\n    },\n\n    passwordKeyDown() {\n      this.showPasswordAlert = false;\n    },\n\n    closeModal(id) {\n      document.getElementById(id).click();\n    },\n\n    async submitForm() {\n      this.showUsernameAlert = false;\n      this.showPasswordAlert = false;\n      this.formIsValid = true;\n      this.usernameMessage = '';\n      this.passwordMessage = '';\n\n      if (this.username === '') {\n        this.showUsernameAlert = true;\n        this.formIsValid = false;\n        this.usernameMessage = \"Please enter username\";\n      }\n\n      if (this.password.length < 4) {\n        this.showPasswordAlert = true;\n        this.formIsValid = false;\n        this.passwordMessage = \"Password is too short\";\n      }\n\n      if (this.password === '') {\n        this.showPasswordAlert = true;\n        this.formIsValid = false;\n        this.passwordMessage = \"Please enter password\";\n      }\n\n      if (!this.formIsValid) {\n        return;\n      }\n\n      this.isLoading = true;\n      this.closeModal('closeLoginModal'); //close login modal after submit;\n\n      try {\n        await this.$store.dispatch('login', {\n          username: this.username,\n          password: this.password\n        });\n        this.$router.replace('/projectList');\n      } catch (e) {\n        this.error = e.message || 'Failed to authenticate.';\n      }\n\n      this.isLoading = false;\n    }\n\n  },\n  emits: ['set-fullscreenwidth'],\n\n  mounted() {\n    this.$emit('set-fullscreenwidth');\n  }\n\n};","map":{"version":3,"mappings":"AAyFA,eAAc;EACZA,IAAI,GAAE;IACJ,OAAO;MAGH;MACAC,QAAO,EAAI,EAJR;MAKHC,QAAO,EAAG,EALP;MAMHC,iBAAgB,EAAI,KANjB;MAOHC,iBAAgB,EAAI,KAPjB;MAQHC,WAAU,EAAI,IARX;MASHC,SAAQ,EAAI,KATT;MAUHC,KAAK,EAAE,IAVJ;MAYH;MACAC,KAAI,EAAI;IAbL,CAAP;EAgBD,CAlBW;;EAoBZC,OAAO,EAAC;IAENC,eAAe,GAAE;MACf,KAAKP,iBAAL,GAAyB,KAAzB;;MACA,IAAI,KAAKF,QAAL,CAAcU,MAAd,IAAsB,CAA1B,EAA6B;QACrB,KAAKR,iBAAL,GAAyB,IAAzB;QACA,KAAKE,WAAL,GAAmB,KAAnB;QACA,KAAKO,eAAL,GAAuB,uBAAvB;MAEJ;IACH,CAVG;;IAYNC,eAAc,GAAI;MACd,KAAKT,iBAAL,GAAyB,KAAzB;IACH,CAdK;;IAgBNU,UAAU,CAACC,EAAD,EAAK;MACbC,QAAQ,CAACC,cAAT,CAAwBF,EAAxB,EAA4BG,KAA5B;IACD,CAlBK;;IAoBP,MAAMC,UAAN,GAAkB;MAEb,KAAKhB,iBAAL,GAAyB,KAAzB;MACA,KAAKC,iBAAL,GAAyB,KAAzB;MACA,KAAKC,WAAL,GAAkB,IAAlB;MACA,KAAKO,eAAL,GAAuB,EAAvB;MACA,KAAKQ,eAAL,GAAuB,EAAvB;;MAEF,IAAI,KAAKnB,QAAL,KAAkB,EAAtB,EAAyB;QACvB,KAAKE,iBAAL,GAAyB,IAAzB;QACA,KAAKE,WAAL,GAAmB,KAAnB;QACA,KAAKO,eAAL,GAAuB,uBAAvB;MAEF;;MAEA,IAAG,KAAKV,QAAL,CAAcS,MAAd,GAAuB,CAA1B,EAA4B;QAEzB,KAAKP,iBAAL,GAAyB,IAAzB;QACA,KAAKC,WAAL,GAAmB,KAAnB;QACA,KAAKe,eAAL,GAAuB,uBAAvB;MACF;;MAED,IAAI,KAAKlB,QAAL,KAAkB,EAAtB,EAAyB;QACvB,KAAKE,iBAAL,GAAyB,IAAzB;QACA,KAAKC,WAAL,GAAmB,KAAnB;QACA,KAAKe,eAAL,GAAuB,uBAAvB;MAEF;;MAGA,IAAG,CAAC,KAAKf,WAAT,EAAqB;QACnB;MACF;;MAEA,KAAKC,SAAL,GAAiB,IAAjB;MACA,KAAKQ,UAAL,CAAgB,iBAAhB,EAnCe,CAmCqB;;MAIpC,IAAG;QACG,MAAM,KAAKO,MAAL,CAAYC,QAAZ,CAAqB,OAArB,EAA6B;UACnCrB,QAAQ,EAAE,KAAKA,QADoB;UAEnCC,QAAQ,EAAE,KAAKA;QAFoB,CAA7B,CAAN;QAMH,KAAKqB,OAAL,CAAaC,OAAb,CAAqB,cAArB;MAEF,CATD,CASC,OAAMC,CAAN,EAAQ;QACP,KAAKlB,KAAL,GAAakB,CAAC,CAACC,OAAF,IAAa,yBAA1B;MAEF;;MAEA,KAAKpB,SAAL,GAAiB,KAAjB;IAGD;;EA5EK,CApBI;EAuGVqB,KAAK,EAAC,CAAC,qBAAD,CAvGI;;EAyGXC,OAAO,GAAE;IAER,KAAKC,KAAL,CAAW,qBAAX;EAED;;AA7GW,CAAd","names":["data","username","password","showUsernameAlert","showPasswordAlert","formIsValid","isLoading","error","token","methods","usernameKeyDown","length","usernameMessage","passwordKeyDown","closeModal","id","document","getElementById","click","submitForm","passwordMessage","$store","dispatch","$router","replace","e","message","emits","mounted","$emit"],"sourceRoot":"","sources":["H:\\www\\vue\\vue-cli-01-a-new-vue-project\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n\r\n  <base-dialog :show=\"!!error\" title=\"Error\"></base-dialog>\r\n  <base-dialog :show=\"isLoading\" title=\"Authenticating...\" fixed>\r\n    <base-spinner></base-spinner>\r\n  </base-dialog>\r\n\r\n\r\n  \r\n\r\n  <div\r\n    class=\"containerfluid loginPageBackground\"\r\n    :style=\"{ backgroundImage: `url(${LoginBackground})` }\"\r\n  >\r\n    <top-bar></top-bar>\r\n\r\n  </div>\r\n\r\n  <!-- Login Modal -->\r\n  <div\r\n    class=\"modal fade\"\r\n    id=\"loginModal\"\r\n    data-bs-backdrop=\"static\"\r\n    data-bs-keyboard=\"false\"\r\n    tabindex=\"-1\"\r\n    aria-labelledby=\"loginModalLabel\"\r\n    aria-hidden=\"true\"\r\n  >\r\n\r\n\r\n\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"loginModalLabel\">User login</h5>\r\n          <button\r\n            type=\"button\"\r\n            id=\"closeLoginModal\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form @submit.prevent=\"submitForm\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"Inputusername\" class=\"form-label\">Username</label>\r\n              <input\r\n                type=\"username\"\r\n                v-model.trim=\"username\"\r\n                @keyup=\"usernameKeyDown\"\r\n                class=\"form-control\"\r\n                id=\"Inputusername\"\r\n                aria-describedby=\"usernameHelp\"\r\n              />\r\n              <div v-if=\"showUsernameAlert\" class=\"alert alert-danger alert-sm\">\r\n                {{ usernameMessage }}\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"InputPassword\" class=\"form-label\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                v-model.trim=\"password\"\r\n                @keyup=\"passwordKeyDown\"\r\n                class=\"form-control\"\r\n                id=\"InputPassword\"\r\n              />\r\n              <div v-if=\"showPasswordAlert\" class=\"alert alert-danger alert-sm\">\r\n                {{ passwordMessage }}\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3 form-check\">\r\n              <input type=\"checkbox\" class=\"form-check-input\" id=\"Check1\" />\r\n              <label class=\"form-check-label\" for=\"Check1\">Remember me</label>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Login {{ ah }}</button>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <a href=\"javascript:;\">Forgot password?</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default{\r\n  data(){\r\n    return {\r\n        \r\n     \r\n        //login:\r\n        username : '',\r\n        password :'',\r\n        showUsernameAlert : false,\r\n        showPasswordAlert : false,\r\n        formIsValid : true,\r\n        isLoading : false,\r\n        error: null,\r\n\r\n        //testing;\r\n        token : ''\r\n\r\n    }\r\n  },\r\n\r\n  methods:{\r\n\r\n    usernameKeyDown(){\r\n      this.showUsernameAlert = false;\r\n      if (this.username.length==0 ){\r\n              this.showUsernameAlert = true;\r\n              this.formIsValid = false;\r\n              this.usernameMessage = \"Please enter username\";\r\n            \r\n          }\r\n      },\r\n\r\n    passwordKeyDown (){\r\n        this.showPasswordAlert = false;\r\n    },\r\n\r\n    closeModal(id) {\r\n      document.getElementById(id).click();\r\n    },\r\n       \r\n   async submitForm(){\r\n       \r\n        this.showUsernameAlert = false;      \r\n        this.showPasswordAlert = false;\r\n        this.formIsValid =true;\r\n        this.usernameMessage = '';\r\n        this.passwordMessage = '';\r\n\r\n      if (this.username === ''){\r\n        this.showUsernameAlert = true;\r\n        this.formIsValid = false;\r\n        this.usernameMessage = \"Please enter username\";\r\n        \r\n      }\r\n\r\n      if(this.password.length < 4){\r\n       \r\n         this.showPasswordAlert = true;\r\n         this.formIsValid = false;\r\n         this.passwordMessage = \"Password is too short\";\r\n       }\r\n\r\n      if (this.password === ''){\r\n        this.showPasswordAlert = true;\r\n        this.formIsValid = false;\r\n        this.passwordMessage = \"Please enter password\";\r\n      \r\n      }\r\n      \r\n\r\n      if(!this.formIsValid){\r\n        return;\r\n      }\r\n\r\n      this.isLoading = true;\r\n      this.closeModal('closeLoginModal'); //close login modal after submit;\r\n      \r\n      \r\n\r\n      try{\r\n            await this.$store.dispatch('login',{\r\n            username: this.username,\r\n            password: this.password\r\n         \r\n         });\r\n\r\n         this.$router.replace('/projectList')\r\n\r\n      }catch(e){\r\n        this.error = e.message || 'Failed to authenticate.';\r\n\r\n      }\r\n      \r\n      this.isLoading = false;\r\n     \r\n\r\n    },\r\n\r\n\r\n  },\r\n\r\n    \r\n\r\n    emits:['set-fullscreenwidth'],\r\n\r\n   mounted(){\r\n     \r\n    this.$emit('set-fullscreenwidth'); \r\n\r\n  },\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n/* LOGIN PAGE */\r\n.loginPageBackground {\r\n  height: 100vh;\r\n  background-size:cover ;\r\n}\r\n.topLoginBar {\r\n  background-color: rgb(255, 255, 255, 0.8);\r\n  min-height: 55px;\r\n}\r\n#mainAppTitle {\r\n  font-size: 1.23rem;\r\n  font-weight: 700;\r\n}\r\n.signInHref {\r\n  color: #787878;\r\n}\r\n\r\n/* -------------------------*/\r\n</style>"]},"metadata":{},"sourceType":"module"}