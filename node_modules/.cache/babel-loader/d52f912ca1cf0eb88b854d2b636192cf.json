{"ast":null,"code":"// Primevue datatable help: https://www.primefaces.org/primevue/datatable //\nimport DataTable from \"primevue/datatable\";\nimport Column from \"primevue/column\";\nimport InputText from 'primevue/inputtext';\nimport Button from 'primevue/button';\nimport Calendar from 'primevue/calendar';\nimport Dialog from 'primevue/dialog';\nimport InlineMessage from 'primevue/inlinemessage'; //import InputNumber from 'primevue/inputnumber';\n\nimport TabView from 'primevue/tabview';\nimport TabPanel from 'primevue/tabpanel';\nimport Dropdown from 'primevue/dropdown';\nimport FileUpload from 'primevue/fileupload'; //import Checkbox from 'primevue/checkbox';\n\nimport Timeline from 'primevue/timeline';\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport { FilterMatchMode, FilterOperator } from 'primevue/api'; // for filtering\n\nimport moment from \"moment\";\nexport default {\n  props: [\"systemId\"],\n  components: {\n    InputText,\n    Button,\n    DataTable,\n    Column,\n    Calendar,\n    Dialog,\n    TabView,\n    TabPanel,\n    InlineMessage,\n    Timeline,\n    //InputNumber,\n    Dropdown,\n    FileUpload //Checkbox\n\n  },\n  emits: ['extend-session', 'showSearchbar'],\n\n  data() {\n    return {\n      ProjectRef: '61196AD9FF1A440A9267D3044E8B595E',\n      showTable: true,\n      first: 0,\n      snagsPage: 1,\n      // default page to load\n      pageSize: 100,\n      // default page size\n      totalRecords: 0,\n      // total records, get this from snags json\n      //   rowsPerPageOptions: [{\"label\":\"25\",\"value\":\"25\"},{\"label\":\"50\",\"value\":\"50\"},{\"label\":\"100\",\"value\":\"100\"},{\"label\":\"250\",\"value\":\"250\"},{\"label\":\"500\",\"value\":\"500\"}],\n      rowsPerPageOptions: [25, 50, 100, 250, 500],\n      searchQuery: '',\n      captionFilter: '',\n      codeFilter: '',\n      statusFilter: '',\n      worksPackageFilter: '',\n      areaFilter: '',\n      createdByFilter: '',\n      actionByFilter: '',\n      closedByFilter: '',\n      captionFilterMode: '',\n      codeFilterMode: '',\n      statusFilterMode: '',\n      worksPackageFilterMode: '',\n      areaFilterMode: '',\n      createdByFilterMode: '',\n      actionByFilterMode: '',\n      closedByFilterMode: '',\n      filterCleared: 0,\n      snagDetails: [],\n      // all snag details includin images\n      snagDetailsData: [],\n      //only details, without images\n      events: [{\n        \"status\": \"created\",\n        \"date\": \"2024-02-01\",\n        \"createdBy\": \"Ryan Bradley\",\n        \"icon\": \"pi pi-cog\",\n        \"color\": \"blue\",\n        \"notes\": \"\"\n      }, {\n        \"status\": \"Uploaded image\",\n        \"date\": \"2024-02-02\",\n        \"createdBy\": \"Ryan Bradley\",\n        \"icon\": \"pi pi-image\",\n        \"color\": \"lightblue\",\n        \"notes\": \"\"\n      }, {\n        \"status\": \"Edited\",\n        \"date\": \"2024-02-02\",\n        \"createdBy\": \"Noel Mullen\",\n        \"icon\": \"pi pi-pencil\",\n        \"color\": \"lightblue\",\n        \"notes\": \"Changed title\"\n      }, {\n        \"status\": \"Accepted\",\n        \"date\": \"2024-02-02\",\n        \"createdBy\": \"Noel Mullen\",\n        \"icon\": \"pi pi-check\",\n        \"color\": \"green\",\n        \"notes\": \"All looks ok\"\n      }, {\n        \"status\": \"Closed\",\n        \"date\": \"2024-02-02\",\n        \"createdBy\": \"Noel Mullen\",\n        \"icon\": \"pi pi-star\",\n        \"color\": \"lightgreen\",\n        \"notes\": \"\"\n      }, {\n        \"status\": \"Reopened\",\n        \"date\": \"2024-02-02\",\n        \"createdBy\": \"Ryan Bradley\",\n        \"icon\": \"pi pi-refresh\",\n        \"color\": \"blue\",\n        \"notes\": \"It needs to be reopened\"\n      }, {\n        \"status\": \"Accepted\",\n        \"date\": \"2024-02-02\",\n        \"createdBy\": \"Noel Mullen\",\n        \"icon\": \"pi pi-check\",\n        \"color\": \"green\",\n        \"notes\": \"All looks ok\"\n      }, {\n        \"status\": \"Closed\",\n        \"date\": \"2024-02-02\",\n        \"createdBy\": \"Evan Blake\",\n        \"icon\": \"pi pi-star\",\n        \"color\": \"lightgreen\"\n      }],\n      howManyTrips: '',\n      AllPageMarked: false,\n      AllMarked: false,\n      sendMultipleInvoiceDialog: false,\n      showInvoiceSelectedButton: false,\n      selectedIDsForInvoicing: [],\n      checkedIDs: [],\n      invoiceDate: '',\n      invoiceDateOK: true,\n      sendInvoiceDialog: false,\n      displayUnInvoiceConfirm: false,\n      dataTable: 'dataTable',\n      downloadedReport: '',\n      binaryfile: '',\n      photoIdForDelete: '',\n      displayDeletePhotoConfirm: false,\n      uploadFIlename: '',\n      displayUploadModal: false,\n      allStatuses: [],\n      ClickedRowId: '',\n      tableHeight: 'calc( 100vh - 215px)',\n      displayDeleteConfirm: false,\n      deletingTripName: '',\n      snagNotes: '',\n      newSnagDialog: false,\n      editSnagDialog: false,\n      isLoading: true,\n      userType: '',\n      userLocale: '',\n      loading1: true,\n      loading2: true,\n      filters1: null,\n      visibleImagesModal: false,\n      snagImages: [],\n      picturesTabShow: false,\n      activeTab: 0,\n      SnagDate: '',\n      tripUserEmail: '',\n      tripFrom: '',\n      tripTo: '',\n      tripFixedCosts: '',\n      tripCargoName: '',\n      tripDistance: '',\n      tripDistanceCosts: '',\n      tripVatPercentage: '',\n      tripSum: '',\n      tripSumVAT: '',\n      tripCompanyName: '',\n      tripComments: '',\n      tripCreated: '',\n      tripUserFullName: '',\n      openedcargoname: '',\n      displayInfoDialog: false,\n      InfoModalHeader: '',\n      InfoModalMessage: '',\n      newSnagDate: '',\n      newSnagFrom: '',\n      newSnagTo: '',\n      newSnagTitle: '',\n      newSnagCode: '',\n      newSnagStatus: '0',\n      newSnagStatusCosts: '0',\n      newSnagCompanyName: '',\n      newSnagComments: '',\n      newSnagDateOK: true,\n      newSnagFromOK: true,\n      newSnagToOK: true,\n      newSnagTitleOK: true,\n      newSnagCodeOK: true,\n      newSnagStatusOK: true,\n      newSnagStatusCostsOK: true,\n      newSnagCompanyNameOK: true,\n      newSnagCommentsOK: true,\n      editSnagDate: '',\n      editSnagTitle: '',\n      editSnagCode: '',\n      editSnagCargoName: '',\n      editSnagFixedCosts: '0',\n      editSnagDistance: '0',\n      editSnagDistanceCosts: '0',\n      editSnagStatus: '',\n      editSnagComments: '',\n      editSnagDateOK: true,\n      editSnagTitleOK: true,\n      editSnagCodeOK: true,\n      editSnagCargoNameOK: true,\n      editSnagFixedCostsOK: true,\n      editSnagDistanceOK: true,\n      editSnagDistanceCostsOK: true,\n      editSnagStatusOK: true,\n      editSnagCommentsOK: true,\n      editSnagInvoiced: '',\n      panelClass: 'closedPanel',\n\n      /*   filters: {\r\n              'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n              'code': {value: null, matchMode: FilterMatchMode.EQUALS},\r\n             \r\n             //if multiple filters is posible\r\n              'code':{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n              'caption': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n              'status':{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n              'createdBy': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n              'area':{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n              'worksPackage': {{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n              'closedBy':{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n              'assignedTo': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n              \r\n             \r\n           },*/\n      filters: {\n        'global': {\n          value: null,\n          matchMode: FilterMatchMode.CONTAINS\n        },\n        'code': {\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'caption': {\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'status': {\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'createdBy': {\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'area': {\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'worksPackage': {\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'closedBy': {\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'assignedTo': {\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        }\n      },\n      matchModes: [{\n        label: 'Starts With',\n        value: FilterMatchMode.STARTS_WITH\n      }, {\n        label: 'Contains',\n        value: FilterMatchMode.CONTAINS\n      }],\n      allSnags: [],\n      fromDate: '',\n      toDate: ''\n    };\n  },\n\n  methods: {\n    async downloadSnagPDF() {\n      const snagKey = this.snagDetails['snag']['key'];\n      const snagCode = this.snagDetails['snag']['code'];\n      const snagTitle = this.snagDetails['snag']['caption'];\n      const aFileName = snagCode + \" - \" + snagTitle + \".pdf\"; //const sessionId=this.$store.getters.token;\n\n      const baseUrl = this._rootRestUrl;\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', baseUrl + \"/api/PDF/DownloadSnagPDF/?snagKey=\" + snagKey, true);\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n      xhr.responseType = 'blob';\n\n      xhr.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          if (window.navigator.msSaveOrOpenBlob) {\n            window.navigator.msSaveBlob(this.response, aFileName);\n          } else {\n            const downloadLink = window.document.createElement('a');\n            const contentTypeHeader = xhr.getResponseHeader(\"Content-Type\");\n            downloadLink.href = window.URL.createObjectURL(new Blob([this.response], {\n              type: contentTypeHeader\n            }));\n            downloadLink.download = aFileName;\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n          }\n        }\n      };\n\n      xhr.send(null);\n      /*    let formData = JSON.stringify({});\r\n              let config = {\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                };\r\n              try{  \r\n             await  axios\r\n                .get(baseUrl + \"/api/PDF/DownloadSnagPDF/?snagKey=\"+snagKey, formData, config)\r\n                .then((response) => {\r\n                   this.downloadedSnagPDF = response.data;\r\n                   \r\n                    // var fileName = 'Report '+this.format_date(DateFrom, 'YYYY-MM-DD')+\" - \"+this.format_date(DateTo, 'YYYY-MM-DD');\r\n                   this.downloadPDF(this.downloadedSnagPDF, snagCode + \" - \"+ snagTitle +\".pdf\");\r\n                  \r\n                })           \r\n               \r\n                } catch (error) {\r\n              \r\n                    if(error.response.status == 401){\r\n                      alert(\"Your session is expired! Please login\");\r\n                      localStorage.clear();\r\n                        // document.location = '/';\r\n                    }\r\n                  this.displayUnInvoiceConfirm=false;\r\n                    this.displayInfoDialog=true;\r\n                  this.InfoModalHeader='Error '+error.response.status;\r\n                  this.InfoModalMessage=error.response.data.Message;\r\n                  this.isLoading = false; \r\n             }   \r\n                // after every request \r\n              // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n                this.extendTime(); // extend timeout to show expire session dialog\r\n                // ---------------------\r\n      */\n    },\n\n    selectingForInvoice(clickedID) {\n      if (!this.checkedIDs[clickedID]) {\n        this.selectedIDsForInvoicing.push(clickedID);\n      } else {\n        const index = this.selectedIDsForInvoicing.indexOf(clickedID);\n        this.selectedIDsForInvoicing.splice(index, 1);\n      }\n\n      if (this.selectedIDsForInvoicing.length > 0) {\n        this.showInvoiceSelectedButton = true;\n      } else {\n        this.showInvoiceSelectedButton = false;\n        this.AllPageMarked = false;\n      }\n    },\n\n    invoiceSelected() {\n      this.invoiceDate = moment().format('DD/MM/YYYY HH:mm');\n      /*var addText = '';\r\n       if (this.selectedIDsForInvoicing.length == 1){\r\n         addText = 'Mark selected trip as Invoiced';\r\n       }else{\r\n         addText = ''+this.selectedIDsForInvoicing.length+'</strong> trips as Invoiced';\r\n       }\r\n       this.howManyTrips = addText;*/\n\n      this.sendMultipleInvoiceDialog = true;\n    },\n\n    reorganizePagination() {\n      $(\".p-paginator-current\").detach().appendTo('.p-paginator-left-content');\n      $(\".p-paginator-rpp-options\").detach().appendTo('.p-paginator-right-content');\n    },\n\n    moveSearchBoxToTop() {\n      //default search box is inside header of the datatable, must move to the top of the page\n      $('#hereMoveSearch').empty();\n      $(\"#searchBox\").detach().appendTo('#hereMoveSearch');\n    },\n\n    newSnag() {\n      this.resetInputFields();\n      this.newSnagDate = this.format_date(moment(), 'DD/MM/YYYY'); //show dialog for insert\n\n      this.newSnagDialog = true;\n    },\n\n    editSnag() {\n      var AllOk = true;\n\n      if (this.editSnagDate == '') {\n        this.editSnagDateOK = false;\n        AllOk = false;\n      } else {\n        this.editSnagDateOK = true;\n      }\n\n      if (this.editSnagTitle == '') {\n        this.editSnagTitleOK = false;\n        AllOk = false;\n      } else {\n        this.editSnagTitleOK = true;\n      }\n\n      if (this.editSnagCode == '') {\n        this.editSnagCodeOK = false;\n        AllOk = false;\n      } else {\n        this.editSnagCodeOK = true;\n      }\n\n      if (this.editSnagStatus.name) {\n        this.editSnagStatus = this.editSnagStatus.value;\n      }\n\n      if (this.editSnagStatus == '') {\n        this.editSnagStatusOK = false;\n        AllOk = false;\n      } else {\n        this.editSnagStatusOK = true;\n      }\n      /*  if(this.newSnagComments == ''){\r\n          this.newSnagCommentsOK = false;\r\n          AllOk = false;\r\n        }else{this.newSnagCommentsOK = true;}*/\n\n\n      if (AllOk == true) {\n        this.editSnagInDatabase();\n      }\n    },\n\n    async editSnagInDatabase() {\n      this.panelClass = 'closedPanel';\n      this.isLoading = true;\n      var SnagDate = this.format_date(moment(this.editSnagDate, 'DD/MM/YYYY HH:mm'), 'YYYY-MM-DD HH:mm:ss');\n      const sessionId = this.$store.getters.token;\n      const baseUrl = this._rootRestUrl;\n      let formData = JSON.stringify({\n        key: this.ClickedRowId,\n        sessionId: sessionId,\n        caption: this.editSnagTitle,\n        code: this.editSnagCode,\n        status: this.editSnagStatus,\n        userEmail: '',\n        date: SnagDate\n      });\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      try {\n        await axios.put(baseUrl + \"/api/Snags/EditSnag\", formData, config).then(() => {\n          this.getSnags();\n          this.getCompanies();\n          this.editSnagDialog = false;\n          this.displayInfoDialog = true;\n          this.InfoModalHeader = 'Info';\n          this.InfoModalMessage = 'Changes are saved';\n          this.isLoading = false;\n        });\n      } catch (error) {\n        this.editSnagDialog = false;\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Error ' + error.response.status;\n        this.InfoModalMessage = error.response.data.Message;\n        this.isLoading = false;\n      } // after every request \n      //  // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n    },\n\n    saveSnag() {\n      var AllOk = true;\n\n      if (this.newSnagDate == '') {\n        this.newSnagDateOK = false;\n        AllOk = false;\n      } else {\n        this.newSnagDateOK = true;\n      }\n\n      if (this.newSnagTitle == '') {\n        this.newSnagTitleOK = false;\n        AllOk = false;\n      } else {\n        this.newSnagTitleOK = true;\n      }\n\n      if (this.newSnagCode == null) {\n        this.newSnagCodeOK = false;\n        AllOk = false;\n      } else {\n        this.newSnagCodeOK = true;\n      }\n\n      if (this.newSnagStatus == undefined || this.newSnagStatus == '') {\n        this.newSnagStatus = '';\n        AllOk = false;\n        this.newSnagStatusOK = false;\n      } else {\n        this.newSnagStatus = this.newSnagStatus.value;\n\n        if (this.newSnagStatus == '') {\n          this.newSnagStatusOK = false;\n          AllOk = false;\n        } else {\n          this.newSnagStatusOK = true;\n        }\n      }\n\n      if (this.newSnagStatus == undefined) {\n        this.newSnagStatus = '';\n        AllOk = false;\n        this.newSnagStatusOK = false;\n      }\n      /*  if(this.newSnagComments == ''){\r\n          this.newSnagCommentsOK = false;\r\n          AllOk = false;\r\n        }else{this.newSnagCommentsOK = true;}*/\n\n\n      if (AllOk == true) {\n        this.InsertSnagToDatabase();\n      }\n    },\n\n    async InsertSnagToDatabase() {\n      this.panelClass = 'closedPanel';\n      this.isLoading = true; // const sessionId=this.$store.getters.token;\n      //date and time from NOW()\n\n      var SnagDate = this.format_date(moment(this.newSnagDate, 'DD/MM/YYYY HH:mm'), 'YYYY-MM-DD HH:mm:ss');\n      const baseUrl = this._rootRestUrl;\n      let formData = JSON.stringify({\n        ProjectRef: this.ProjectRef,\n        type: 'Snag',\n        key: '',\n        code: this.newSnagCode,\n        caption: this.newSnagTitle,\n        status: this.newSnagStatus,\n        date: SnagDate\n      });\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      try {\n        await axios.post(baseUrl + \"/api/Snags/InsertSnag\", formData, config).then(() => {\n          this.getSnags();\n          this.getCompanies();\n          this.newSnagDialog = false;\n          this.displayInfoDialog = true;\n          this.InfoModalHeader = 'Info';\n          this.InfoModalMessage = 'Snag is inserted';\n          this.isLoading = false;\n        });\n      } catch (error) {\n        if (error.response.status == 401) {\n          alert(\"Your session is expired! Please login\");\n          localStorage.clear(); // document.location = '/';\n        }\n\n        this.newSnagDialog = false;\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Error ' + error.response.status;\n        this.InfoModalMessage = error.response.data.Message;\n        this.isLoading = false;\n      } // after every request \n      // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n    },\n\n    closeInfo() {\n      this.displayInfoDialog = false;\n    },\n\n    handleClose(shouldShow) {\n      // shouldShow will always be `false`, so this is a bit redundant\n      if (!shouldShow) {// this.resetInputFields();\n      } else {// still open \n      }\n    },\n\n    closeInsertDialog() {\n      this.newSnagDialog = false;\n      this.resetInputFields();\n    },\n\n    closeEditDialog() {\n      this.editSnagDialog = false; //this.resetInputFields();\n    },\n\n    resetInputFields() {\n      //reset input and edit fields ;)\n      this.newSnagDate = '';\n      this.newSnagFrom = '';\n      this.newSnagTo = '';\n      this.newSnagTitle = '';\n      this.newSnagCode = '';\n      this.newSnagStatus = '';\n      this.newSnagStatusCosts = '';\n      this.newSnagCompanyName = '';\n      this.newSnagComments = '';\n      this.newSnagDateOK = true;\n      this.newSnagFromOK = true;\n      this.newSnagToOK = true;\n      this.newSnagTitleOK = true;\n      this.newSnagCodeOK = true;\n      this.newSnagStatusOK = true;\n      this.newSnagStatusCostsOK = true;\n      this.newSnagCompanyNameOK = true;\n      this.newSnagCommentsOK = true;\n      this.editSnagDate = '';\n      this.editSnagTitle = '';\n      this.editSnagCode = '';\n      this.editSnagCargoName = '';\n      this.editSnagFixedCosts = '0';\n      this.editSnagDistance = '0';\n      this.editSnagDistanceCosts = '0';\n      this.editSnagStatus = '';\n      this.editSnagComments = '';\n      this.editSnagDateOK = true;\n      this.editSnagTitleOK = true;\n      this.editSnagCodeOK = true;\n      this.editSnagCargoNameOK = true;\n      this.editSnagFixedCostsOK = true;\n      this.editSnagDistanceOK = true;\n      this.editSnagDistanceCostsOK = true;\n      this.editSnagStatusOK = true;\n      this.editSnagCommentsOK = true;\n    },\n\n    editClick() {\n      //show dialog for insert\n      this.editSnagDialog = true;\n    },\n\n    deleteClick() {\n      // show confirmation dialog\n      this.displayDeleteConfirm = true;\n    },\n\n    deletePhotoId(photoId) {\n      // show confirmation dialog\n      this.displayDeletePhotoConfirm = true;\n      this.photoIdForDelete = photoId;\n    },\n\n    deletePhotoModal(photoId) {\n      // show confirmation dialog\n      this.photoIdForDelete = photoId;\n      this.deletePhoto();\n    },\n\n    async deletePhoto() {\n      //user already confirmed\n      this.panelClass = 'closedPanel';\n      this.isLoading = true;\n      const sessionId = this.$store.getters.token;\n      const baseUrl = this._rootRestUrl;\n      let formData = JSON.stringify({\n        sessionId: sessionId,\n        key: this.photoIdForDelete\n      });\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      try {\n        await axios.post(baseUrl + \"/api/v1/Trip/DeleteTripFile\", formData, config).then(() => {\n          this.getSnags();\n          this.getCompanies();\n          this.displayDeletePhotoConfirm = false;\n          this.visibleImagesModal = false;\n          this.displayInfoDialog = true;\n          this.InfoModalHeader = 'Info';\n          this.InfoModalMessage = 'Photo is deleted';\n          this.isLoading = false;\n        });\n      } catch (error) {\n        if (error.response.status == 401) {\n          alert(\"Your session is expired! Please login\");\n          localStorage.clear(); // document.location = '/';\n        }\n\n        this.displayDeletePhotoConfirm = false;\n        this.visibleImagesModal = false;\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Error ' + error.response.status;\n        this.InfoModalMessage = error.response.data.Message;\n        this.isLoading = false;\n      } // after every request \n      // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n    },\n\n    async deleteTrip() {\n      //user already confirmed\n      this.panelClass = 'closedPanel';\n      this.isLoading = true;\n      const sessionId = this.$store.getters.token;\n      const baseUrl = this._rootRestUrl;\n      let formData = JSON.stringify({\n        sessionId: sessionId,\n        key: this.ClickedRowId\n      });\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      try {\n        await axios.post(baseUrl + \"/api/v1/Trip/DeleteTrip\", formData, config).then(() => {\n          this.getSnags();\n          this.getCompanies();\n          this.displayDeleteConfirm = false;\n          this.displayInfoDialog = true;\n          this.InfoModalHeader = 'Info';\n          this.InfoModalMessage = 'Trip is deleted';\n          this.isLoading = false;\n        });\n      } catch (error) {\n        if (error.response.status == 401) {\n          alert(\"Your session is expired! Please login\");\n          localStorage.clear(); // document.location = '/';\n        }\n\n        this.displayDeleteConfirm = false;\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Error ' + error.response.status;\n        this.InfoModalMessage = error.response.data.Message;\n        this.isLoading = false;\n      } // after every request \n      // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n    },\n\n    downloadClick() {// alert(\"Download clicked\")\n    },\n\n    refreshData() {\n      //get selected dates\n      if (this.fromDate.length != 10) {\n        this.fromDate = this.format_date(this.fromDate, 'DD/MM/YYYY');\n      }\n\n      if (this.toDate.length != 10) {\n        this.toDate = this.format_date(this.toDate, 'DD/MM/YYYY');\n      } // and go for trips\n\n\n      this.getSnags();\n      this.getCompanies();\n    },\n\n    onSwiper() {},\n\n    format_date_to_full(aDate, aTime) {\n      //excpected input: 14/04/2023\n      var year = aDate.substring(6, 10);\n      var month = aDate.substring(3, 5);\n      var day = aDate.substring(0, 2);\n      return year + '-' + month + '-' + day + \" \" + aTime;\n    },\n\n    format_date_to_full_time(aDate) {\n      //excpected input: 14/04/2023 14:33\n      var year = aDate.substring(6, 10);\n      var month = aDate.substring(3, 5);\n      var day = aDate.substring(0, 2);\n      var hour = aDate.substring(11, 13);\n      var min = aDate.substring(14, 16);\n      var sec = '00';\n      return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':' + sec;\n    },\n\n    format_date_to_dateTime(aDate) {\n      //expected input: 2023-10-24 14:30:43\n      var year = aDate.substring(0, 4);\n      var month = aDate.substring(5, 7);\n      var day = aDate.substring(8, 10);\n      var hour = aDate.substring(11, 13);\n      var min = aDate.substring(14, 16); //return year + '-' + month + '-' +day + \" \"+hour+\":\"+min;\n\n      return day + '/' + month + '/' + year + \" \" + hour + \":\" + min;\n    },\n\n    async getCompanies() {\n      /*\r\n                const sessionId=this.$store.getters.token;\r\n                const baseUrl = this._rootRestUrl;\r\n                \r\n                let formData = JSON.stringify({ sessionId: sessionId });\r\n                let config = {\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n      \r\n                };\r\n      \r\n               await  axios\r\n                  .get(baseUrl + \"/api/v1/Company/GetCompanies/?sessionId=\"+sessionId+\"\", formData, config)\r\n                  .then((response) => {\r\n                     this.allStatuses = response.data;\r\n                     \r\n                     //sorting function:\r\n                      const sortArrayOfObjects = (arr, propertyName, order = 'ascending') => {\r\n                            const sortedArr = arr.sort((a, b) => {\r\n                              if (a[propertyName] < b[propertyName]) {\r\n                                return -1;\r\n                              }\r\n                              if (a[propertyName] > b[propertyName]) {\r\n                                return 1;\r\n                              }\r\n                              return 0;\r\n                            });\r\n      \r\n                            if (order === 'descending') {\r\n                              return sortedArr.reverse();\r\n                            }\r\n      \r\n                            return sortedArr;\r\n                          };\r\n                     //-- end of sorting function\r\n      \r\n                     \r\n                     \r\n                     this.allStatuses = sortArrayOfObjects( this.allStatuses, \"name\");\r\n                  \r\n                   // console.table(this.allStatuses)\r\n                              \r\n                  })           \r\n                   .catch(function (error) {\r\n                      // handle error\r\n                      if(error.response.status=='401') { //not authorized, token expires\r\n                       localStorage.clear();\r\n                       // document.location = '/';\r\n                    }\r\n                      console.table(error);\r\n                   });\r\n                  \r\n                 // after every request \r\n                  // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n                  this.extendTime(); // extend timeout to show expire session dialog\r\n                  // ---------------------\r\n          \r\n                  */\n    },\n\n    extendTime() {\n      this.$emit('extend-session'); // extend time when session timeout popup will be shown\n    },\n\n    async getSnags(all) {\n      //get selected dates\n      if (this.fromDate.length != 10) {\n        this.fromDate = this.format_date(this.fromDate, 'DD/MM/YYYY');\n      }\n\n      if (this.toDate.length != 10) {\n        this.toDate = this.format_date(this.toDate, 'DD/MM/YYYY');\n      } //save dates to local storage so it remebeer when swithing tabs:\n\n\n      localStorage.setItem('fromDate', this.fromDate);\n      localStorage.setItem('toDate', this.toDate);\n      this.panelClass = 'closedPanel';\n      this.isLoading = true;\n      /*   const fromDateFull = this.format_date_to_full(this.fromDate, '00:00:00');\r\n           const toDateFull = this.format_date_to_full(this.toDate,'23:59:59');\r\n         */\n\n      /*  \r\n        const sessionId=this.$store.getters.token;\r\n        const DateFrom=fromDateFull;\r\n        const DateTo= toDateFull;\r\n        const UserId= localStorage.getItem(\"userId\");\r\n        const UserType= this.userType;\r\n       */\n\n      const baseUrl = this._rootRestUrl;\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      /*  captionFilter:'',\r\n          codeFilter:'', \r\n      */\n\n      var addOnFilter = [];\n      var isthisLike = false;\n\n      if (this.captionFilter != '' && this.captionFilter != null) {\n        if (this.captionFilterMode == 'contains') {\n          isthisLike = true;\n        } else {\n          isthisLike = false;\n        }\n\n        addOnFilter.push({\n          name: 'caption',\n          value: this.captionFilter,\n          isLike: isthisLike\n        });\n      }\n\n      if (this.codeFilter != '' & this.codeFilter != null) {\n        if (this.codeFilterMode == 'contains') {\n          isthisLike = true;\n        } else {\n          isthisLike = false;\n        }\n\n        addOnFilter.push({\n          name: 'code',\n          value: this.codeFilter,\n          isLike: isthisLike\n        });\n      }\n\n      if (this.statusFilter != '' & this.statusFilter != null) {\n        if (this.statusFilterMode == 'contains') {\n          isthisLike = true;\n        } else {\n          isthisLike = false;\n        }\n\n        addOnFilter.push({\n          name: 'status',\n          value: this.statusFilter,\n          isLike: isthisLike\n        });\n      }\n\n      if (this.worksPackageFilter != '' & this.worksPackageFilter != null) {\n        if (this.worksPackageFilterMode == 'contains') {\n          isthisLike = true;\n        } else {\n          isthisLike = false;\n        }\n\n        addOnFilter.push({\n          name: 'worksPackage',\n          value: this.worksPackageFilter,\n          isLike: isthisLike\n        });\n      }\n\n      if (this.areaFilter != '' & this.areaFilter != null) {\n        if (this.areaFilterMode == 'contains') {\n          isthisLike = true;\n        } else {\n          isthisLike = false;\n        }\n\n        addOnFilter.push({\n          name: 'area',\n          value: this.areaFilter,\n          isthisLike: true\n        });\n      }\n\n      if (this.closedByFilter != '' & this.closedByFilter != null) {\n        if (this.closedByFilterMode == 'contains') {\n          isthisLike = true;\n        } else {\n          isthisLike = false;\n        }\n\n        addOnFilter.push({\n          name: 'closedBy',\n          value: this.closedByFilter,\n          isLike: isthisLike\n        });\n      }\n\n      if (this.actionByFilter != '' & this.actionByFilter != null) {\n        if (this.actionByFilterMode == 'contains') {\n          isthisLike = true;\n        } else {\n          isthisLike = false;\n        }\n\n        addOnFilter.push({\n          name: 'assignedTo',\n          value: this.actionByFilter,\n          isLike: isthisLike\n        });\n      }\n\n      if (this.createdByFilter != '' & this.createdByFilter != null) {\n        if (this.createdByFilterMode == 'contains') {\n          isthisLike = true;\n        } else {\n          isthisLike = false;\n        }\n\n        addOnFilter.push({\n          name: 'createdBy',\n          value: this.createdByFilter,\n          isLike: isthisLike\n        });\n      } //    addOnFilter += ']';  \n\n\n      if (this.searchQuery != '') {\n        addOnFilter += '&searchQuery=' + this.searchQuery;\n      }\n      /*     this.createdByFilter = event.filters.createdBy.matchMode;\r\n          this.actionByFilter = event.filters.assignedTo.matchMode;\r\n          this.closedByFilter = event.filters.closedBy.matchMode;*/\n\n\n      var pageA = '';\n\n      if (all == 'all') {\n        pageA = 0;\n        this.pageSize = this.totalRecords;\n        this.pageSize = 100;\n      } else {\n        pageA = +this.snagsPage;\n        this.pageSize = 100;\n      }\n\n      let formData = {\n        pageSize: this.pageSize,\n        pageNumber: pageA,\n        searchQuery: this.searchQuery,\n        filters: addOnFilter\n      };\n      formData = JSON.stringify(formData);\n\n      try {\n        await axios.post(baseUrl + \"/api/Snags/GetAllSnags/\", formData, config).then(response => {\n          this.allSnags = response.data.snags;\n          this.totalRecords = response.data.totalRecords;\n\n          if (this.totalRecords == 0) {\n            this.showTable = false;\n          } else {\n            this.showTable = true;\n          }\n\n          this.isLoading = false;\n          this.reorganizePagination(); // if we don't have loookups for statuses then get it :)\n\n          if (this.allStatuses.length == 0) {\n            this.getStatuses();\n          }\n        });\n        $('#sidebar').click();\n      } catch (error) {\n        if (error.response.status == 401) {\n          alert(\"Your session is expired! Please login\");\n          localStorage.clear(); // document.location = '/';\n        }\n\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Error ' + error.response.status;\n        this.InfoModalMessage = error.response.data.Message;\n        this.isLoading = false;\n      } // after every request \n      // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n    },\n\n    async getStatuses() {\n      const baseUrl = this._rootRestUrl;\n      let formData = JSON.stringify({\n        category: 'SNSTAT'\n      });\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      try {\n        await axios.get(baseUrl + \"/api/LookUps/GetStatusLookUps?category=\" + 'SNSTAT', formData, config).then(response => {\n          this.allStatuses = response.data;\n          var jsonString = JSON.stringify(response.data);\n          jsonString = jsonString.replaceAll('\"shortCode\"', '\"value\"');\n          jsonString = jsonString.replaceAll('\"description\"', '\"name\"');\n          this.allStatuses = $.parseJSON(jsonString);\n        });\n      } catch (error) {\n        if (error.response.status == 401) {\n          alert(\"Your session is expired! Please login\");\n          localStorage.clear(); // document.location = '/';\n        }\n\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Error ' + error.response.status;\n        this.InfoModalMessage = error.response.data.Message;\n        this.isLoading = false;\n      } // after every request \n      // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n    },\n\n    onRowClick(event) {\n      this.ClickedRowId = event.data.key; // key for update\n\n      this.editSnagDate = this.format_date(event.data.date, 'DD/MM/YYYY');\n      this.editSnagTitle = event.data.caption;\n      this.editSnagStatus = event.data.status;\n      this.editSnagCode = event.data.code; // alert( event.data.id);\n\n      $('.hiddenFields').each(function () {\n        $(this).closest('tr').removeClass('highlight');\n      });\n      $('.hiddenFields').each(function () {\n        if ($(this).attr('data') == event.data.key) {\n          $(this).closest('tr').addClass('highlight');\n        }\n      });\n    },\n\n    onRowSelect(event) {\n      if (event.originalEvent.target.tagName != 'I' && event.originalEvent.target.tagName != 'SPAN') {\n        //if not clicked on I element (icon ) then open panel\n        $('.hiddenFields').each(function () {\n          $(this).closest('tr').removeClass('highlight');\n        });\n        $('.hiddenFields').each(function () {\n          if ($(this).attr('data') == event.data.key) {\n            $(this).closest('tr').addClass('highlight');\n          }\n        }); //open panel      \n\n        this.getDocumentDetails();\n\n        if (this.snagImages.length > 0) {\n          this.picturesTabShow = false;\n          this.activeTab = 0;\n        } else {\n          this.picturesTabShow = true;\n        }\n      }\n    },\n\n    openDialogAddPhoto() {\n      this.displayUploadModal = true;\n    },\n\n    customUploader(event) {\n      var timestamp = Date.now();\n      var selectedFile = event.files[0]; // for now only one file\n      //  this.convertToBinary(selectedFile, selectedFile.name);   \n\n      this.uploadImage(selectedFile, timestamp + '_' + selectedFile.name);\n    },\n\n    /*     async convertToBinary(file, filename) {\r\n           \r\n              const reader = new FileReader();\r\n              reader.readAsBinaryString(file);\r\n              await new Promise(resolve => reader.onload = () => resolve());\r\n              \r\n              var binary = reader.result\r\n             \r\n              this.uploadImage(binary,filename);\r\n            \r\n              \r\n         },*/\n    async uploadImage(binary, filename) {\n      //FINNALY !! it works :)\n      //  alert(binary )\n      //   alert(filename);\n      this.isLoading = true;\n      const sessionId = this.$store.getters.token;\n      const baseUrl = this._rootRestUrl;\n      const tripId = this.ClickedRowId; //   let formData = JSON.stringify({ Key: '', 'TripId':tripId, FileName:filename, SessionId: sessionId,File: binary });\n\n      let config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      var formData = new FormData();\n      formData.append(\"Key\", \"\");\n      formData.append(\"Caption\", filename);\n      formData.append(\"SnagRef\", tripId);\n      formData.append(\"ProjectRef\", this.ProjectRef);\n      formData.append(\"SessionId\", sessionId);\n      formData.append(\"File\", binary);\n\n      try {\n        await axios.post(baseUrl + \"/api/Attachments/InsertPhoto\", formData, config).then(() => {\n          this.displayInfoDialog = true;\n          this.InfoModalHeader = 'Info';\n          this.InfoModalMessage = 'Photo is added';\n          this.isLoading = false;\n          this.displayUploadModal = false; // console.table(response);\n\n          this.getSnags();\n        });\n      } catch (error) {\n        // alert(error)\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Alert!';\n        this.InfoModalMessage = 'Error occured while uploading photo. Photo is not added!';\n        this.isLoading = false;\n        this.displayUploadModal = false;\n        this.getSnags();\n      } // after every request \n      // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n    },\n\n    setInvoiceDateToday() {\n      this.invoiceDate = moment().format('DD/MM/YYYY HH:mm');\n      this.sendInvoiceDialog = true;\n    },\n\n    invoiceThisTrip() {\n      var AllOk = true;\n\n      if (this.invoiceDate == '') {\n        this.invoiceDateOK = false;\n        AllOk = false;\n      } else {\n        this.invoiceDateOK = true;\n      }\n\n      if (AllOk == true) {\n        this.markAsInvoicedInDatabase();\n      }\n    },\n\n    invoiceMultipleTrips() {\n      var AllOk = true;\n\n      if (this.invoiceDate == '') {\n        this.invoiceDateOK = false;\n        AllOk = false;\n      } else {\n        this.invoiceDateOK = true;\n      }\n\n      if (AllOk == true) {\n        this.markAsInvoicedMultipleInDatabase();\n      }\n    },\n\n    async markAsInvoicedInDatabase() {\n      // this.panelClass = 'closedPanel';   \n      this.isLoading = true;\n      var Date = this.format_date(moment(this.invoiceDate, 'DD/MM/YYYY HH:mm'), 'YYYY-MM-DD HH:mm:ss');\n      const sessionId = this.$store.getters.token;\n      const baseUrl = this._rootRestUrl;\n      let formData = JSON.stringify({\n        tripKey: this.ClickedRowId,\n        sessionId: sessionId,\n        date: Date,\n        isInvoiceSent: true\n      });\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      try {\n        await axios.post(baseUrl + \"/api/v1/Trip/MarkInvoiceAsSent\", formData, config).then(() => {\n          this.getSnags();\n          this.getCompanies();\n          this.displayInfoDialog = true;\n          this.sendInvoiceDialog = false;\n          this.InfoModalHeader = 'Info';\n          this.InfoModalMessage = 'Trip is marked as invoiced';\n          this.isLoading = false;\n          this.checkedIDs = [];\n          this.AllPageMarked = false;\n        });\n      } catch (error) {\n        if (error.response.status == 401) {\n          alert(\"Your session is expired! Please login\");\n          localStorage.clear(); // document.location = '/';\n        }\n\n        this.sendInvoiceDialog = false;\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Error ' + error.response.status;\n        this.InfoModalMessage = error.response.data.Message;\n        this.isLoading = false;\n      } // after every request \n      // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n    },\n\n    async markAsInvoicedMultipleInDatabase() {\n      // this.panelClass = 'closedPanel';   \n      this.isLoading = true;\n      var Date = this.format_date(moment(this.invoiceDate, 'DD/MM/YYYY HH:mm'), 'YYYY-MM-DD HH:mm:ss');\n      const sessionId = this.$store.getters.token;\n      const baseUrl = this._rootRestUrl;\n      var jsonString = '{\"sessionId\": \"' + sessionId + '\",';\n      jsonString += '     \"invoices\": [ ';\n      var a = 0;\n      var collectIDsToRemoveChecked = [];\n      this.selectedIDsForInvoicing.forEach(aID => {\n        collectIDsToRemoveChecked.push(aID);\n        a++;\n        jsonString += '{';\n        jsonString += '\"tripKey\": \"' + aID + '\",';\n        jsonString += '\"isInvoiceSent\": true,';\n        jsonString += '\"invoiceDate\": \"' + Date + '\"';\n        jsonString += '}';\n\n        if (a < this.selectedIDsForInvoicing.length) {\n          jsonString += ',';\n        }\n      });\n      jsonString += '  ]';\n      jsonString += '  }';\n      let formData = jsonString;\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      try {\n        await axios.post(baseUrl + \"/api/v1/Trip/MarkInvoicesAsSent\", formData, config).then(() => {\n          this.getSnags();\n          this.getCompanies();\n          this.displayInfoDialog = true;\n          this.sendMultipleInvoiceDialog = false;\n          this.showInvoiceSelectedButton = false;\n          this.InfoModalHeader = 'Info';\n          this.InfoModalMessage = 'Trips are marked as invoiced';\n          this.isLoading = false; //remove checkbox\n\n          collectIDsToRemoveChecked.forEach(aID => {\n            this.checkedIDs[aID] = false; //remove ID from array\n\n            const index = this.selectedIDsForInvoicing.indexOf(aID);\n            this.selectedIDsForInvoicing.splice(index, 1);\n          });\n        });\n      } catch (error) {\n        if (error.response.status == 401) {\n          alert(\"Your session is expired! Please login\");\n          localStorage.clear(); // document.location = '/';\n        }\n\n        this.sendInvoiceDialog = false;\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Error ' + error.response.status;\n        this.InfoModalMessage = error.response.data.Message;\n        this.isLoading = false;\n      }\n\n      this.AllPageMarked = false;\n      this.AllMarked = false; // after every request \n      // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n    },\n\n    async unInvoiceThisTrip() {\n      //this.panelClass = 'closedPanel';   \n      this.isLoading = true;\n      const sessionId = this.$store.getters.token;\n      const baseUrl = this._rootRestUrl;\n      let formData = JSON.stringify({\n        tripKey: this.ClickedRowId,\n        sessionId: sessionId,\n        date: '',\n        isInvoiceSent: false\n      });\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      try {\n        await axios.post(baseUrl + \"/api/v1/Trip/MarkInvoiceAsSent\", formData, config).then(() => {\n          this.getSnags();\n          this.getCompanies();\n          this.editSnagDialog = false;\n          this.displayInfoDialog = true;\n          this.displayUnInvoiceConfirm = false;\n          this.InfoModalHeader = 'Info';\n          this.InfoModalMessage = 'Trip is marked as invoiced';\n          this.isLoading = false;\n        });\n      } catch (error) {\n        if (error.response.status == 401) {\n          alert(\"Your session is expired! Please login\");\n          localStorage.clear(); // document.location = '/';\n        }\n\n        this.displayUnInvoiceConfirm = false;\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Error ' + error.response.status;\n        this.InfoModalMessage = error.response.data.Message;\n        this.isLoading = false;\n      } // after every request \n      // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n    },\n\n    async getDocumentDetails() {\n      const baseUrl = this._rootRestUrl;\n      let formData = JSON.stringify({\n        key: this.ClickedRowId\n      });\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      this.isLoading = true;\n\n      try {\n        await axios.get(baseUrl + \"/api/Snags/GetSnagDetails/?snagKey=\" + this.ClickedRowId, formData, config).then(response => {\n          this.snagDetails = response.data;\n          this.isLoading = false;\n          this.fillPanelData();\n        });\n      } catch (error) {\n        if (error.response.status == 401) {\n          alert(\"Your session is expired! Please login\");\n          localStorage.clear(); // document.location = '/';\n        }\n\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Error ' + error.response.status;\n        this.InfoModalMessage = error.response.data.Message;\n        this.isLoading = false;\n      } // after every request \n      // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n\n      this.isLoading = false;\n    },\n\n    fillPanelData() {\n      this.snagDetailsData = this.snagDetails['snag']; //picturesTabShow\n\n      var snagPictures = this.snagDetails['snagAttachments'];\n\n      if (snagPictures.length > 0) {\n        this.snagNotes = this.snagDetailsData['notes'];\n        this.snagImages = snagPictures;\n        this.picturesTabShow = true;\n      } else {\n        this.picturesTabShow = false;\n        this.snagImages = [];\n      }\n\n      this.openPanel();\n    },\n\n    openPanel() {\n      this.panelClass = 'openedPanel';\n    },\n\n    closePanel() {\n      this.panelClass = 'closedPanel';\n    },\n\n    initFilters1() {\n      this.filters1 = {\n        'global': {\n          value: null,\n          matchMode: FilterMatchMode.CONTAINS\n        },\n        'userFullName': {\n          operator: FilterOperator.AND,\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'from': {\n          operator: FilterOperator.AND,\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'to': {\n          operator: FilterOperator.AND,\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'companyName': {\n          operator: FilterOperator.AND,\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'cargoName': {\n          operator: FilterOperator.AND,\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'distance': {\n          operator: FilterOperator.AND,\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'sumVAT': {\n          operator: FilterOperator.AND,\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'comments': {\n          operator: FilterOperator.AND,\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        }\n      };\n    },\n\n    clearFilter1() {\n      this.initFilters1();\n    },\n\n    getFiles() {\n      /*  $(\"#datatable\").DataTable({\r\n              lengthMenu: [\r\n                [25, 50, 100, -1],\r\n                [25, 50, 100, \"All\"],\r\n              ],\r\n              pageLength: 25,\r\n            });*/\n    },\n\n    format_date(value, pattern) {\n      if (value) {\n        return moment(String(value)).format(pattern);\n      }\n    },\n\n    showloader(event) {\n      this.isLoading = event;\n    },\n\n    async downloadReport() {\n      this.getSnags();\n      this.isLoading = true; //get selected dates\n\n      if (this.fromDate.length != 10) {\n        this.fromDate = this.format_date(this.fromDate, 'DD/MM/YYYY');\n      }\n\n      if (this.toDate.length != 10) {\n        this.toDate = this.format_date(this.toDate, 'DD/MM/YYYY');\n      }\n\n      const fromDateFull = this.format_date_to_full(this.fromDate, '00:00:00');\n      const toDateFull = this.format_date_to_full(this.toDate, '23:59:59');\n      const sessionId = this.$store.getters.token;\n      const DateFrom = fromDateFull;\n      const DateTo = toDateFull;\n      const baseUrl = this._rootRestUrl; // const locale = this.userLocale;\n\n      const locale = 'EN'; //for now, locale set to EN so that CSV is comma separated\n\n      let formData = JSON.stringify({\n        sessionId: sessionId,\n        DateFrom: DateFrom,\n        DateTo: DateTo,\n        locale: locale\n      });\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n\n      try {\n        await axios.get(baseUrl + \"/api/v1/Trip/CSV/Trips/?sessionId=\" + sessionId + \"&DateFrom=\" + DateFrom + \"&DateTo=\" + DateTo + \"&locale=\" + locale, formData, config).then(response => {\n          this.downloadedReport = response.data;\n          var fileName = 'Report ' + this.format_date(DateFrom, 'YYYY-MM-DD') + \" - \" + this.format_date(DateTo, 'YYYY-MM-DD');\n          this.downloadCSV(this.downloadedReport, fileName);\n        });\n      } catch (error) {\n        if (error.response.status == 401) {\n          alert(\"Your session is expired! Please login\");\n          localStorage.clear(); // document.location = '/';\n        }\n\n        this.displayUnInvoiceConfirm = false;\n        this.displayInfoDialog = true;\n        this.InfoModalHeader = 'Error ' + error.response.status;\n        this.InfoModalMessage = error.response.data.Message;\n        this.isLoading = false;\n      } // after every request \n      // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\n\n\n      this.extendTime(); // extend timeout to show expire session dialog\n      // ---------------------\n    },\n\n    correctData() {\n      this.allSnags.forEach((value, index) => {\n        const entries = Object.entries(value);\n        entries.forEach(value2 => {\n          if (value2[0] == 'invSent') {\n            var newType = '';\n\n            if (value2[1] == true) {\n              newType = \"Yes\";\n            } else {\n              newType = \"No\";\n            }\n\n            this.allSnags[index]['invSent'] = newType;\n          }\n        });\n      });\n    },\n\n    downloadCSV(csvString, filename) {\n      const element = document.createElement(\"a\");\n      element.setAttribute(\"href\", `data:text/csv;charset=utf-8,${csvString}`);\n      element.setAttribute(\"download\", filename);\n      element.style.display = \"none\";\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      this.isLoading = false;\n    },\n\n    downloadPDF() {\n      $('#downloadPDFlink').remove();\n      /*\tconst element = document.createElement(\"a\");\r\n          element.setAttribute(\"href\", `data:application/pdf;base64,${base64PDF}`);\r\n        element.setAttribute(\"download\", filename);\r\n        element.style.display = \"none\";\r\n          document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n        this.isLoading = false; */\n\n      /*  const aHref =  `data:application/pdf;base64,${base64PDF}`;\r\n              $('body').append('<a id=\"downloadPDFlink\" download=\"'+filename+'\" href=\"'+aHref+'\">LINK</a>');\r\n          $('#downloadPDFlink').click();*/\n    },\n\n    formatMoney(number, decPlaces, decSep, thouSep, symbol) {\n      decPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces, decSep = typeof decSep === \"undefined\" ? \".\" : decSep;\n      thouSep = typeof thouSep === \"undefined\" ? \",\" : thouSep;\n      var sign = number < 0 ? \"-\" : \"\";\n      var i = String(parseInt(number = Math.abs(Number(number) || 0).toFixed(decPlaces)));\n      var j = (j = i.length) > 3 ? j % 3 : 0;\n      return symbol + \" \" + sign + (j ? i.substr(0, j) + thouSep : \"\") + i.substr(j).replace(/(\\decSep{3})(?=\\decSep)/g, \"$1\" + thouSep) + (decPlaces ? decSep + Math.abs(number - i).toFixed(decPlaces).slice(2) : \"\");\n    },\n\n    showContextMenu: function (e) {\n      //show right click menu only for admin\n      if (this.userType.toUpperCase() == 'ADMIN') {\n        e.preventDefault();\n        var menu = document.getElementById(\"div-context-menu\");\n        menu.style.left = e.pageX + 'px';\n        menu.style.top = e.pageY - 50 + 'px';\n        menu.style.display = 'block';\n        menu.cid = e.target.id.replace(/title-/, \"\");\n      }\n    },\n    hideContextMenu: function () {\n      document.getElementById(\"div-context-menu\").style.display = \"none\";\n    },\n    onClick: function () {\n      this.hideContextMenu();\n    },\n\n    onPage(event) {\n      this.snagsPage = event['originalEvent']['page'] * 1 + 1;\n      this.getSnags();\n    },\n\n    onSearchInput() {\n      if (this.searchQuery.length == 0) {\n        this.first = 0;\n        this.snagsPage = 1;\n        this.getSnags();\n      }\n    },\n\n    onSearch() {\n      if (this.searchQuery.length > 2 || this.searchQuery.length == 0) {\n        this.first = 0;\n        this.snagsPage = 1;\n        this.getSnags();\n      }\n    },\n\n    onFilter(event) {\n      console.table(event.filters);\n      this.captionFilter = event.filters.caption.constraints[0].value;\n      this.codeFilter = event.filters.code.constraints[0].value;\n      this.statusFilter = event.filters.status.constraints[0].value;\n      this.worksPackageFilter = event.filters.worksPackage.constraints[0].value;\n      this.areaFilter = event.filters.area.constraints[0].value;\n      this.createdByFilter = event.filters.createdBy.constraints[0].value;\n      this.actionByFilter = event.filters.assignedTo.constraints[0].value;\n      this.closedByFilter = event.filters.closedBy.constraints[0].value;\n      alert(event.filters.createdBy.constraints[0].value); //if clear filter\n\n      this.filterCleared++;\n\n      if (this.filters.caption.value === null) {\n        this.filters.caption.constraints[0].value = null; //     event.filters.caption.constraints[0].value = null;\n\n        this.filters.caption.value = null;\n      }\n\n      if (this.filters.code.value === null) {\n        this.filters.code.constraints[0].value = null; //  event.filters.code.constraints[0].value = null;\n\n        this.filters.code.value = null;\n      }\n\n      if (this.filters.status.value === null) {\n        this.filters.status.constraints[0].value = null; //   event.filters.status.constraints[0].value = null;\n\n        this.filters.status.value = null;\n      }\n\n      if (this.filters.worksPackage.value === null) {\n        this.filters.worksPackage.constraints[0].value = null; //      event.filters.worksPackage.constraints[0].value = null;\n\n        this.filters.worksPackage.value = null;\n      }\n\n      if (this.filters.area.value === null) {\n        this.filters.area.constraints[0].value = null; //      event.filters.area.constraints[0].value = null;\n\n        this.filters.area.value = null;\n      }\n\n      if (this.filters.createdBy.value === null) {\n        this.filters.createdBy.constraints[0].value = null; //   event.filters.createdBy.constraints[0].value = null;\n\n        this.filters.createdBy.value = null;\n      }\n\n      if (this.filters.assignedTo.value === null) {\n        this.filters.assignedTo.constraints[0].value = null; //      event.filters.assignedTo.constraints[0].value = null;\n\n        this.filters.assignedTo.value = null;\n      }\n\n      if (this.filters.closedBy.value === null) {\n        this.filters.closedBy.constraints[0].value = null; //     event.filters.closedBy.constraints[0].value = null;\n\n        this.filters.closedBy.value = null;\n      }\n      /*   if (event.filters.code.value === null){this.codeFilter=null;}\r\n         if (event.filters.status.value === null){this.statusFilter=null;}\r\n         if (event.filters.worksPackage.value === null){this.worksPackageFilter=null;}\r\n         if (event.filters.area.value === null){this.areaFilter=null;}\r\n         if (event.filters.createdBy.value === null){this.createdByFilter=null;}\r\n         if (event.filters.assignedTo.value === null){this.actionByFilter=null;}\r\n         if (event.filters.closedBy.value === null){this.closedByFilter=null;}*/\n      //\"how\" we filter\n\n\n      this.captionFilterMode = event.filters.caption.constraints[0].matchMode;\n      this.codeFilterMode = event.filters.code.constraints[0].matchMode;\n      this.statusFilterMode = event.filters.status.constraints[0].matchMode;\n      this.worksPackageFilterMode = event.filters.worksPackage.constraints[0].matchMode;\n      this.areaFilterMode = event.filters.area.constraints[0].matchMode;\n      this.createdByFilterMode = event.filters.createdBy.constraints[0].matchMode;\n      this.actionByFilterMode = event.filters.assignedTo.constraints[0].matchMode;\n      this.closedByFilterMode = event.filters.closedBy.constraints[0].matchMode; //if something filtered then filter icon should be yellow\n\n      if (this.captionFilter != null) {\n        $('.captionColumn .pi-filter-icon').addClass('yellowIcon');\n      } else {\n        $('.captionColumn .pi-filter-icon').removeClass('yellowIcon');\n      }\n\n      if (this.codeFilter != null) {\n        $('.codeColumn .pi-filter-icon').addClass('yellowIcon');\n      } else {\n        $('.codeColumn .pi-filter-icon').removeClass('yellowIcon');\n      }\n\n      if (this.statusFilter != null) {\n        $('.statusColumn .pi-filter-icon').addClass('yellowIcon');\n      } else {\n        $('.statusColumn .pi-filter-icon').removeClass('yellowIcon');\n      }\n\n      if (this.worksPackageFilter != null) {\n        $('.workspackageColumn .pi-filter-icon').addClass('yellowIcon');\n      } else {\n        $('.workspackageColumn .pi-filter-icon').removeClass('yellowIcon');\n      }\n\n      if (this.areaFilter != null) {\n        $('.areaColumn .pi-filter-icon').addClass('yellowIcon');\n      } else {\n        $('.areaColumn .pi-filter-icon').removeClass('yellowIcon');\n      }\n\n      if (this.createdByFilter != null) {\n        $('.openedColumn .pi-filter-icon').addClass('yellowIcon');\n      } else {\n        $('.openedColumn .pi-filter-icon').removeClass('yellowIcon');\n      }\n\n      if (this.actionByFilter != null) {\n        $('.assignedToColumn .pi-filter-icon').addClass('yellowIcon');\n      } else {\n        $('.assignedToColumn .pi-filter-icon').removeClass('yellowIcon');\n      }\n\n      if (this.closedByFilter != null) {\n        $('.closedByColumn .pi-filter-icon').addClass('yellowIcon');\n      } else {\n        $('.closedByColumn .pi-filter-icon').removeClass('yellowIcon');\n      } //   alert(this.captionFilter)\n\n\n      this.getSnags();\n    },\n\n    async SelectAllPage() {\n      var whatToDo = ''; /// collect all ID of all checkboxes:\n\n      var collectIDsToAdd = [];\n      this.selectedIDsForInvoicing = [];\n      $('.p-checkbox').each(function () {\n        var id = $(this).parent().attr('data');\n        collectIDsToAdd.push(id);\n      }); //--------------\n\n      if (this.AllPageMarked == false) {\n        whatToDo = 'mark';\n        this.showInvoiceSelectedButton = true;\n      } else {\n        whatToDo = 'unmark';\n        this.showInvoiceSelectedButton = false;\n      }\n\n      if (whatToDo == 'mark') {\n        collectIDsToAdd.forEach(aID => {\n          this.selectedIDsForInvoicing.push(aID);\n          this.checkedIDs[aID] = true;\n          this.AllPageMarked = true;\n        });\n      } else {\n        this.checkedIDs = [];\n        this.AllPageMarked = false;\n      }\n    },\n\n    SelectAll(whatToDo) {\n      if (whatToDo == 'select') {\n        if (this.AllMarked == false) {\n          this.showInvoiceSelectedButton = true;\n        } else {\n          this.showInvoiceSelectedButton = false;\n        }\n      } else {\n        //just unselect all\n        this.selectedIDsForInvoicing = [];\n        this.checkedIDs = [];\n        this.AllMarked = false;\n        this.AllPageMarked = false;\n        this.showInvoiceSelectedButton = false;\n      }\n\n      this.selectedIDsForInvoicing = [];\n\n      if (whatToDo == 'select') {\n        this.AllMarked = true;\n        this.allSnags.forEach(value => {\n          const entries = Object.entries(value);\n          var rememberID = '';\n          entries.forEach(value2 => {\n            if (value2[0] == 'id') {\n              rememberID = value2[1];\n            }\n\n            if (value2[0] == 'invSent') {\n              // var newType = '';\n              if (value2[1] == 'No') {\n                //\n                this.selectedIDsForInvoicing.push(rememberID);\n                this.checkedIDs[rememberID] = true;\n              }\n            }\n          });\n        });\n      }\n\n      if (this.selectedIDsForInvoicing.lenght > 0) {\n        this.showInvoiceSelectedButton = true;\n      }\n    }\n\n  },\n\n  mounted() {\n    //on load I must clear all filters !!\n\n    /* this.filters.caption.value = null;\r\n     this.filters.code.value = null;\r\n     this.filters.status.value = null;\r\n     this.filters.worksPackage.value = null;\r\n     this.filters.area.value = null;\r\n     this.filters.createdBy.value = null;\r\n     this.filters.assignedTo.value = null;\r\n     this.filters.closedBy.value = null;*/\n    //on click anywhere close context menu \n    var el = document.getElementById('app');\n    el.addEventListener('click', this.onClick); // get dates from localstorage if exists so it remembers when changing tabs:\n    // if not exists then means user just enters the application so give me this week dates\n\n    if (localStorage.getItem('fromDate') != undefined) {\n      this.fromDate = localStorage.getItem('fromDate');\n    } else {\n      this.fromDate = moment().startOf('isoWeek').format('DD/MM/YYYY');\n    }\n\n    if (localStorage.getItem('toDate') != undefined) {\n      this.toDate = localStorage.getItem('toDate');\n    } else {\n      this.toDate = moment().endOf('isoWeek').format('DD/MM/YYYY');\n    } //  ------ end default dates  -------- / \n\n\n    this.$emit(\"showSearchbar\", true);\n    /* if (this.$store.getters.getUserType==null || this.$store.getters.getUserLocale == null){\r\n         //we don't have usertype so user is not properly login, logout him and try again\r\n         localStorage.clear();\r\n         // document.location = '/';\r\n     }*/\n\n    this.getSnags();\n    this.getCompanies();\n    this.moveSearchBoxToTop();\n    /*   if(this.$store.getters.getUserType != null){\r\n         this.userType = (this.$store.getters.getUserType).toUpperCase();\r\n       }else{\r\n         this.userType = 'USER';\r\n       }*/\n\n    /*    if(this.$store.getters.getUserLocale != null){\r\n          this.userLocale = (this.$store.getters.getUserLocale).toUpperCase();\r\n        }else{\r\n          this.userLocale = 'EN';\r\n        }*/\n\n    $(\"#editIconsPanel\").detach().appendTo('.p-tabview-nav-content');\n  },\n\n  created() {\n    this.aSystemDoc = localStorage.getItem(\"docType\");\n    this.initFilters1();\n    this.loading1 = false;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["DataTable","Column","InputText","Button","Calendar","Dialog","InlineMessage","TabView","TabPanel","Dropdown","FileUpload","Timeline","axios","$","FilterMatchMode","FilterOperator","moment","props","components","emits","data","ProjectRef","showTable","first","snagsPage","pageSize","totalRecords","rowsPerPageOptions","searchQuery","captionFilter","codeFilter","statusFilter","worksPackageFilter","areaFilter","createdByFilter","actionByFilter","closedByFilter","captionFilterMode","codeFilterMode","statusFilterMode","worksPackageFilterMode","areaFilterMode","createdByFilterMode","actionByFilterMode","closedByFilterMode","filterCleared","snagDetails","snagDetailsData","events","howManyTrips","AllPageMarked","AllMarked","sendMultipleInvoiceDialog","showInvoiceSelectedButton","selectedIDsForInvoicing","checkedIDs","invoiceDate","invoiceDateOK","sendInvoiceDialog","displayUnInvoiceConfirm","dataTable","downloadedReport","binaryfile","photoIdForDelete","displayDeletePhotoConfirm","uploadFIlename","displayUploadModal","allStatuses","ClickedRowId","tableHeight","displayDeleteConfirm","deletingTripName","snagNotes","newSnagDialog","editSnagDialog","isLoading","userType","userLocale","loading1","loading2","filters1","visibleImagesModal","snagImages","picturesTabShow","activeTab","SnagDate","tripUserEmail","tripFrom","tripTo","tripFixedCosts","tripCargoName","tripDistance","tripDistanceCosts","tripVatPercentage","tripSum","tripSumVAT","tripCompanyName","tripComments","tripCreated","tripUserFullName","openedcargoname","displayInfoDialog","InfoModalHeader","InfoModalMessage","newSnagDate","newSnagFrom","newSnagTo","newSnagTitle","newSnagCode","newSnagStatus","newSnagStatusCosts","newSnagCompanyName","newSnagComments","newSnagDateOK","newSnagFromOK","newSnagToOK","newSnagTitleOK","newSnagCodeOK","newSnagStatusOK","newSnagStatusCostsOK","newSnagCompanyNameOK","newSnagCommentsOK","editSnagDate","editSnagTitle","editSnagCode","editSnagCargoName","editSnagFixedCosts","editSnagDistance","editSnagDistanceCosts","editSnagStatus","editSnagComments","editSnagDateOK","editSnagTitleOK","editSnagCodeOK","editSnagCargoNameOK","editSnagFixedCostsOK","editSnagDistanceOK","editSnagDistanceCostsOK","editSnagStatusOK","editSnagCommentsOK","editSnagInvoiced","panelClass","filters","value","matchMode","CONTAINS","constraints","matchModes","label","STARTS_WITH","allSnags","fromDate","toDate","methods","downloadSnagPDF","snagKey","snagCode","snagTitle","aFileName","baseUrl","_rootRestUrl","xhr","XMLHttpRequest","open","setRequestHeader","responseType","onreadystatechange","readyState","status","window","navigator","msSaveOrOpenBlob","msSaveBlob","response","downloadLink","document","createElement","contentTypeHeader","getResponseHeader","href","URL","createObjectURL","Blob","type","download","body","appendChild","click","removeChild","send","selectingForInvoice","clickedID","push","index","indexOf","splice","length","invoiceSelected","format","reorganizePagination","detach","appendTo","moveSearchBoxToTop","empty","newSnag","resetInputFields","format_date","editSnag","AllOk","name","editSnagInDatabase","sessionId","$store","getters","token","formData","JSON","stringify","key","caption","code","userEmail","date","config","headers","put","then","getSnags","getCompanies","error","Message","extendTime","saveSnag","undefined","InsertSnagToDatabase","post","alert","localStorage","clear","closeInfo","handleClose","shouldShow","closeInsertDialog","closeEditDialog","editClick","deleteClick","deletePhotoId","photoId","deletePhotoModal","deletePhoto","deleteTrip","downloadClick","refreshData","onSwiper","format_date_to_full","aDate","aTime","year","substring","month","day","format_date_to_full_time","hour","min","sec","format_date_to_dateTime","$emit","all","setItem","addOnFilter","isthisLike","isLike","pageA","pageNumber","snags","getStatuses","category","get","jsonString","replaceAll","parseJSON","onRowClick","event","each","closest","removeClass","attr","addClass","onRowSelect","originalEvent","target","tagName","getDocumentDetails","openDialogAddPhoto","customUploader","timestamp","Date","now","selectedFile","files","uploadImage","binary","filename","tripId","FormData","append","setInvoiceDateToday","invoiceThisTrip","markAsInvoicedInDatabase","invoiceMultipleTrips","markAsInvoicedMultipleInDatabase","tripKey","isInvoiceSent","a","collectIDsToRemoveChecked","forEach","aID","unInvoiceThisTrip","fillPanelData","snagPictures","openPanel","closePanel","initFilters1","operator","AND","clearFilter1","getFiles","pattern","String","showloader","downloadReport","fromDateFull","toDateFull","DateFrom","DateTo","locale","fileName","downloadCSV","correctData","entries","Object","value2","newType","csvString","element","setAttribute","style","display","downloadPDF","remove","formatMoney","number","decPlaces","decSep","thouSep","symbol","isNaN","Math","abs","sign","i","parseInt","Number","toFixed","j","substr","replace","slice","showContextMenu","e","toUpperCase","preventDefault","menu","getElementById","left","pageX","top","pageY","cid","id","hideContextMenu","onClick","onPage","onSearchInput","onSearch","onFilter","console","table","worksPackage","area","createdBy","assignedTo","closedBy","SelectAllPage","whatToDo","collectIDsToAdd","parent","SelectAll","rememberID","lenght","mounted","el","addEventListener","getItem","startOf","endOf","created","aSystemDoc"],"sourceRoot":"","sources":["Q:\\Projects\\Snags-web-vue\\src\\components\\pages\\snags\\PageSnags.vue"],"sourcesContent":["<template>\r\n\r\n  <base-dialog :show=\"isLoading\"  title=\"Authenticating...\" fixed>\r\n    <base-spinner ></base-spinner>\r\n  </base-dialog>\r\n\r\n  <!-- if table is lazy load then global filter (search) in table not working so must be here ! PrimeVue bug!? -->\r\n    <span class=\"p-input-icon-right\" id=\"searchBox\">\r\n        <InputText v-model=\"searchQuery\" placeholder=\"Keyword Search\"  @change=\"onSearch\" @input=\"onSearchInput\"/>\r\n        <i class=\"pi pi-search\" @click=\"onSearch\"/>\r\n    </span>\r\n  <!-- -------------------  end    of search box      -->\r\n  \r\n<div class=\"dataTableHolder\"  style=\"width:100%;\" @contextmenu = \"showContextMenu($event)\">\r\n  <DataTable  \r\n            :totalRecords=\"totalRecords\" \r\n            :id=\"dataTable\" \r\n            :value=\"allSnags\" lazy \r\n            :paginator=\"true\" \r\n            :rows=\"pageSize\"  \r\n            :first=\"first\"\r\n            dataKey=\"id\"  stripedRows v-model:filters=\"filters\" filterDisplay=\"menu\" key=\"key\" \r\n           \r\n            @page=\"onPage($event)\"\r\n            @sort=\"onSort($event)\"\r\n            @filter=\"onFilter($event)\"\r\n           \r\n            \r\n            @rowSelect=\"onRowSelect\"\r\n            @rowClick=\"onRowClick\"\r\n            @rowsChange=\"onRows($event)\"\r\n            \r\n\r\n            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n            paginatorStart=\"CurrentPageReport\"\r\n            :rowsPerPageOptions=\"rowsPerPageOptions\"\r\n            responsiveLayout=\"scroll\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of total {totalRecords} snags\"\r\n            :globalFilterFields=\"['code','title' ]\"\r\n            selectionMode=\"single\"\r\n            \r\n\r\n            :loading=\"loading1\"\r\n            scrollable \r\n            :scrollHeight=\"tableHeight\"\r\n            >\r\n   \r\n\r\n\r\n              <template #header >\r\n                    \r\n                 <!-- if table is lazy load then global filter (search) in table not working so it can not be here, its on top of this page! PrimeVue bug!? -->\r\n                <!-- \r\n                <div style=\"display:none\" class=\"flex justify-content-between\">\r\n                      <span class=\"p-input-icon-left\" id=\"searchBox\">\r\n                            <i class=\"pi pi-search\" />\r\n                            <InputText v-model=\"filters['global'].value\" placeholder=\"Keyword Search\"/>\r\n                        </span>\r\n                    </div>\r\n                   -->\r\n\r\n\r\n                    <div class=\"row\">\r\n                      <div class=\"d-none d-xl-block col-md-4\">\r\n                        <Button style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'New Snag', showDelay: 1000, hideDelay: 300 }\" type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-text\" id=\"newSnagButton\" @click=\"newSnag\" label=\"New snag\"/>\r\n                        &nbsp;\r\n                        <Button style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Download report', showDelay: 1000, hideDelay: 300 }\" type=\"button\" icon=\"pi pi-download\" class=\"p-button-text\" id=\"downloadReport\" @click=\"downloadReport\" label=\"Download Report\"/>\r\n                        &nbsp;\r\n                        <Button v-if=\"showInvoiceSelectedButton && userType=='ADMIN'\" style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Invoice selected', showDelay: 1000, hideDelay: 300 }\" type=\"button\" icon=\"pi pi-check-circle\" class=\"p-button-text\" id=\"invoiceSelected\" @click=\"invoiceSelected\" label=\"Invoice selected\"/>\r\n                       \r\n                        <Button style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Load all snags', showDelay: 1000, hideDelay: 300 }\" type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-text\" id=\"newSnagButton\" @click=\"getSnags('all')\" label=\"Load all snags\"/>\r\n                        &nbsp;\r\n                     </div>\r\n\r\n                     <div class=\"d-block d-xl-none  d-col-md-4\">\r\n                        <Button v-tooltip.bottom=\"{ value: 'New Snag', showDelay: 1000, hideDelay: 300 }\" type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-text\" id=\"newSnagButton\" @click=\"newSnag\" label=\"\"/>\r\n                        &nbsp;\r\n                        <Button v-tooltip.bottom=\"{ value: 'Download report', showDelay: 1000, hideDelay: 300 }\" type=\"button\" icon=\"pi pi-download\" class=\"p-button-text\" id=\"downloadReport\" @click=\"downloadReport\" label=\"\"/>\r\n                        &nbsp;\r\n                        <Button v-if=\"showInvoiceSelectedButton && userType=='ADMIN'\" style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Invoice selected', showDelay: 1000, hideDelay: 300 }\" type=\"button\" icon=\"pi pi-check-circle\" class=\"p-button-text\" id=\"invoiceSelected\" @click=\"invoiceSelected\" label=\"Invoice selected\"/>\r\n                       \r\n                        <Button  v-tooltip.bottom=\"{ value: 'Load all snags', showDelay: 1000, hideDelay: 300 }\" type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-text\" id=\"newSnagButton\" @click=\"getSnags('all')\" label=\"\"/>\r\n                        &nbsp;\r\n                     </div>\r\n\r\n                     <div class=\"col-md-4 text-center\">\r\n                       <!--\r\n                        <div class=\"projectNameHeadline\">DORMITORY DEMO PROJECT</div>\r\n                        <div class=\"documentTypeHeadline\">Snags</div>\r\n                       -->\r\n                     </div>\r\n\r\n\r\n                      <div class=\"col-md-4 text-end\">\r\n                          <Calendar style=\"width:160px\" v-tooltip.bottom=\"{ value: 'Date from', showDelay: 1000, hideDelay: 300 }\" id=\"fromDateBox\" class=\"dateDisplayInput\" v-model=\"fromDate\" showIcon dateFormat=\"dd/mm/yy\" placeholder=\"dd/mm/yy\" mask=\"99/99/9999\" @change=\"changeDate('from')\"/>\r\n                          <Calendar style=\"width:160px\" v-tooltip.bottom=\"{ value: 'Date to', showDelay: 1000, hideDelay: 300 }\" id=\"toDateBox\" class=\"dateDisplayInput\" v-model=\"toDate\" showIcon dateFormat=\"dd/mm/yy\" placeholder=\"dd/mm/yy\" mask=\"99/99/9999\" @change=\"changeDate('to')\"/>\r\n                          <Button type=\"button\" icon=\"pi pi-refresh\" class=\"p-button-text\" id=\"refreshButton\" @click=\"refreshData\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                </template>\r\n           \r\n           <template #empty>\r\n                    \r\n           </template>\r\n           <template #loading>\r\n                    Loading data. Please wait...\r\n           </template>\r\n\r\n\r\n         \r\n\r\n    <Column class=\"openedColumn\"  field=\"date\" filterField=\"createdBy\" header=\"Opened\" style=\"display:grid; min-width: 10rem;min-height:43px;\">\r\n    \r\n      <template #body=\"{ data }\">\r\n          <span class=\"closedByName\">{{data.createdBy}}</span>\r\n          <span class=\"closedByDate\"> {{format_date(data.created   ,'DD/MM/YYYY') }}  </span>   \r\n        \r\n      </template>\r\n       <template #filter=\"{filterModel,filterCallback}\">\r\n            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Enter name\"/>\r\n            <Button type=\"button\"  class=\"p-button-text myClearButton\" @click=\"filterModel.value = null;filterCallback();\" label=\"my clear\"/>     \r\n\r\n       </template> \r\n    \r\n    </Column>\r\n\r\n\r\n\r\n    <Column class=\"codeColumn\" field=\"code\" header=\"Code\"  bodyStyle=\"text-align: left\"  style=\"min-height:43px;\">\r\n      <template #filter=\"{filterModel,filterCallback}\">\r\n            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search\"/>\r\n            <Button type=\"button\"  class=\"p-button-text myClearButton\" @click=\"filterModel.value = null;filterCallback()\" label=\"my clear\"/>     \r\n        </template>\r\n    </Column>\r\n    <Column class=\"captionColumn\" field=\"caption\" header=\"Item\"  bodyStyle=\"text-align: left\"  style=\"text-align: left;min-height:43px;min-width:320px\">\r\n       \r\n      <template #body=\"{ data }\">\r\n          <div style=\"display:inline-block;width:85%;padding-right:50px\">{{data.caption}}\r\n             \r\n          </div>\r\n          <div  style=\"display:inline-block;display:block;width:15%\" v-if=\"data.hasPhoto != ''\">\r\n            \r\n            <img v-if=\"data.caption=='Architrave'\" src=\"/images/pin.png\" style=\"height:18px\"> \r\n            <img v-if=\"data.caption!='Architrave'\" src=\"/images/pin.png\" style=\"height:18px;visibility:hidden\"> \r\n            <i class=\"fa fa-camera\"></i></div>\r\n\r\n        </template>\r\n      \r\n      \r\n      \r\n        <template #filter=\"{filterModel,filterCallback}\">\r\n            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search\"/>\r\n            <Button type=\"button\"  class=\"p-button-text myClearButton\" @click=\"filterModel.value = null;filterCallback()\" label=\"my clear\"/>     \r\n        </template>\r\n    \r\n    </Column>\r\n    <Column class=\"statusColumn\" field=\"status\" header=\"Status\" bodyStyle=\"text-align: left\"  style=\";min-height:43px;max-width:100px !important\">\r\n      \r\n      <template #body=\"{ data }\">\r\n          <div v-if=\"data.status=='Open'\" class=\"statusOpen statusBlock\">{{ data.status }}</div>\r\n          <div v-if=\"data.status=='Closed'\" class=\"statusClosed statusBlock\">{{ data.status }}</div>\r\n          <div v-if=\"data.status=='Actioned'\" class=\"statusActioned statusBlock\">{{ data.status }}</div>\r\n          <div v-if=\"data.status=='Returned'\" class=\"statusReturned statusBlock\">{{ data.status }}</div>\r\n\r\n          \r\n\r\n      </template>\r\n     \r\n      <template #filter=\"{filterModel}\">\r\n          <!--<InputText v-model=\"filterModel.value\" :options=\"allCompanies\" filter optionLabel=\"name\" placeholder=\"Select Company\"></InputText>-->\r\n          <Dropdown v-model=\"filterModel.value\" :options=\"allStatuses\" filter optionLabel=\"name\" optionValue=\"value\" placeholder=\"Select Status\"></Dropdown>\r\n          <Button type=\"button\"  class=\"p-button-text myClearButton\" @click=\"filterModel.value = null;filterCallback()\" label=\"my clear\"/>     \r\n        </template>\r\n\r\n        \r\n    </Column>\r\n\r\n    <Column class=\"assignedToColumn\" field=\"assignedTo\" filterField=\"assignedTo\" header=\"Action By\"  bodyStyle=\"text-align: left\"  style=\"display:grid;;min-height:43px;\">\r\n    \r\n      <template #body=\"{ data }\" >\r\n          <span class=\"closedByName\">{{data.assignedTo}}</span>\r\n          <span class=\"closedByDate\"> {{format_date(data.date   ,'DD/MM/YYYY') }}  </span>   \r\n        \r\n      </template>\r\n      <template #filter=\"{filterModel,filterCallback}\">\r\n            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Enter name\"/>\r\n            <Button type=\"button\"  class=\"p-button-text myClearButton\" @click=\"filterModel.value = null;filterCallback()\" label=\"my clear\"/>     \r\n        </template> \r\n    \r\n    </Column>\r\n\r\n    \r\n    <Column class=\"areaColumn\" field=\"area\" header=\"Location\"  bodyStyle=\"text-align: left\"  style=\";min-height:43px;\">\r\n        <template #filter=\"{filterModel,filterCallback}\">\r\n            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search\"/>\r\n            <Button type=\"button\"  class=\"p-button-text myClearButton\" @click=\"filterModel.value = null;filterCallback()\" label=\"my clear\"/>     \r\n        </template> \r\n    </Column>\r\n    \r\n    \r\n    <Column class=\"workspackageColumn\" field=\"worksPackage\" header=\"Works Package\"  bodyStyle=\"text-align: left\"  style=\"min-height:43px;\">\r\n      \r\n      <template #filter=\"{filterModel,filterCallback}\">\r\n            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search\"/>\r\n            <Button type=\"button\"  class=\"p-button-text myClearButton\" @click=\"filterModel.value = null;filterCallback()\" label=\"my clear\"/>     \r\n        </template> \r\n      </Column>\r\n    \r\n \r\n\r\n    \r\n    <Column class=\"closedByColumn\" field=\"closedBy\"  filterField=\"closedBy\"  header=\"Closed By\"  bodyStyle=\"text-align: left\"  style=\"display: grid;min-height:43px;\">\r\n      <template #body=\"{ data }\">\r\n          <span class=\"closedByName\">{{data.closedBy}}</span>\r\n          <span class=\"closedByDate\"> {{format_date(data.signOffDate   ,'DD/MM/YYYY') }}  </span>   \r\n        \r\n      </template>\r\n      <template #filter=\"{filterModel,filterCallback}\">\r\n            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Enter name\"/>\r\n            <Button type=\"button\"  class=\"p-button-text myClearButton\" @click=\"filterModel.value = null;filterCallback()\" label=\"my clear\"/>     \r\n        </template> \r\n    </Column>\r\n\r\n   \r\n    <Column field=\"\" header=\"\" bodyStyle=\"text-align: left\"  style=\"min-height:43px;\">\r\n      <template #header >\r\n          <div style=\"right: 20px;  position: absolute;\">\r\n            <div style=\"float:right\">Actions</div>\r\n          </div>\r\n        </template>\r\n        <template #body=\"\">\r\n          \r\n          <div class=\"actionButtonsHolderTable\">\r\n           \r\n            <div class=\"fa-stack fa-2x actionIcons\" style=\"font-size:15px\"  v-tooltip.bottom=\"{ value: 'Edit Snag', showDelay: 1000, hideDelay: 300 }\"  @click=\"editClick\">\r\n              <i class=\"fa-solid fa-square fa-stack-2x\"></i>\r\n              <i class=\"fa-stack-1x fa-solid fa-pen-to-square\" style=\"color: white\"></i>\r\n            </div>\r\n            \r\n           \r\n            <div  class=\"fa-stack fa-2x actionIcons\" style=\"font-size:15px;color:#aa0000\" v-tooltip.left=\"{ value: 'Delete Snag', showDelay: 1000, hideDelay: 300 }\" @click=\"deleteClick\">\r\n              <i class=\"fa-solid fa-square fa-stack-2x\"></i>\r\n              <i class=\"fa-stack-1x fa-solid fa-trash-can\" style=\"color: white\"></i>\r\n            </div>\r\n\r\n          </div>\r\n        \r\n        </template>\r\n\r\n\r\n\r\n    </Column>\r\n\r\n\r\n\r\n    <template #paginatorstart>\r\n    \r\n    </template>         \r\n    <template #paginatorend>\r\n    \r\n    </template>  \r\n    \r\n\r\n   \r\n\r\n\r\n</DataTable>\r\n</div>\r\n\r\n<div v-if=\"!showTable\" class=\"alert alert-danger text-center\">\r\n  Snags not found!\r\n</div>\r\n\r\n\r\n<div id=\"RightSidepanel\" class=\"RightSidepanel\" :class=\"panelClass\">\r\n\t\t\t\r\n\t\t\r\n\t\t\t\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 text-end\">\r\n            <i class=\"pi pi-times cursorHand closePanelButton\" @click=\"closePanel\"></i>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n        <div class=\"row\">\r\n          <div class=\"col text-center\">\r\n            <h5 class=\"detailsHeadlineCode\">{{ snagDetailsData.code }}</h5>\r\n            <h5 class=\"detailsHeadline\">{{ snagDetailsData.caption }}</h5>\r\n\r\n           \r\n\r\n\r\n          </div>\r\n        </div>\t\r\n        <div class=\"row\">\r\n          <div class=\"col text-center\">\r\n            <div :class=\"'statusBlock status'+snagDetailsData.status\">{{ snagDetailsData.status }}</div>\r\n           \r\n          </div>\r\n        </div>\r\n        \r\n\r\n        <div class=\"text-end\" id=\"editIconsPanel\"> \r\n\r\n          \r\n\r\n            <div class=\"actionButtonsHolder\">\r\n\r\n           \r\n            <div   class=\"fa-stack fa-2x actionIcons\" style=\"font-size:15px\" v-tooltip.bottom=\"{ value: 'Edit snag', showDelay: 1000, hideDelay: 300 }\" @click=\"editClick\">\r\n\r\n                <i class=\"fa-solid fa-square fa-stack-2x\"></i>\r\n                <i class=\"fa-stack-1x fa-solid fa-pen-to-square\" style=\"color: white\"></i>\r\n            \r\n            </div>\r\n\r\n\r\n            <div    class=\"fa-stack fa-2x actionIcons\" style=\"font-size:15px;color:#aa0000\" v-tooltip.left=\"{ value: 'Delete snag', showDelay: 1000, hideDelay: 300 }\"  @click=\"deleteClick\">\r\n              \r\n                <i class=\"fa-solid fa-square fa-stack-2x\"></i>\r\n                <i class=\"fa-stack-1x fa-solid fa-trash-can\" style=\"color: white\"></i>\r\n            \r\n            </div>\r\n\r\n            </div>\r\n\r\n\r\n            </div>\r\n\r\n                \r\n            \r\n        <div class=\"row\" style=\"\">\r\n          <div class=\"col text-center\" style=\"padding:19px\">\r\n           \r\n            <TabView v-model:activeIndex=\"activeTab\">    \r\n              \r\n              <TabPanel header=\"Details\">\r\n<div class=\"row\" style=\"margin-bottom:10px\">\r\n  <div class=\"col text-start\" style=\"padding:0\">\r\n      \r\n      <Button v-tooltip.bottom=\"{ value: 'Download PDF', showDelay: 1000, hideDelay: 300 }\" type=\"button\" icon=\"pi pi-file-pdf\" class=\"p-button-text donwloadPDFbutton\" @click=\"downloadSnagPDF\" label=\"Download PDF\"/>\r\n                     \r\n\r\n  </div>\r\n</div>\r\n          \r\n                \r\n            \r\n            <table class=\"table table-striped table-sm\" id=\"detailsTable\">\r\n             \r\n             <tbody>\r\n              <tr>\r\n                <td style=\"width:160px\">Date Opened:</td>\r\n                <td>{{ snagDetailsData.date }}</td>\r\n              </tr>\r\n              <tr>\r\n                <td style=\"width:160px\">Action by:</td>\r\n                <td>{{ snagDetailsData.assignedTo }}</td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>Location:</td>\r\n                <td>{{ snagDetailsData.area }}</td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>Works Package:</td>\r\n                <td>{{ snagDetailsData.worksPackage }}</td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>Owner:</td>\r\n                <td>{{ snagDetailsData.createdBy }}</td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>Closed by:</td>\r\n                <td>{{ snagDetailsData.closedBy }}</td>\r\n              </tr>\r\n           \r\n\r\n              <tr>\r\n                <td>Notes:</td>\r\n                <td><textarea rows=\"5\" v-text=\"snagDetailsData.notes\" style=\"width:100%\" readonly></textarea></td>\r\n              </tr>\r\n\r\n         \r\n            </tbody>\r\n            \r\n\r\n           </table>\r\n\r\n           <div class=\"row\">\r\n                <div class=\"col-md-6 text-left\" style=\"padding:0\">\r\n\r\n                  \r\n                  \r\n                </div>\r\n               \r\n                <div class=\"col-md-6 text-end\" style=\"padding:0\">\r\n                      <Button  @click=\"openDialogAddPhoto\" style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Add photo', showDelay: 1000, hideDelay: 300 }\"  type=\"button\" class=\"p-button-text addphotobutton\" label=\"Add photo\"/>\r\n                </div>\r\n            </div>\r\n          \r\n          </TabPanel>\r\n\r\n         \r\n          \r\n          <TabPanel :header=\"'Pictures (' +snagImages.length+')'\"  v-if=\"picturesTabShow\">\r\n              <SwiperCarousel :notes=\"snagNotes\" :tripImages=\"snagImages\" @showloader=\"showloader\" :openedcargoname=\"openedcargoname\" @swiper=\"onSwiper\" @deletePhoto=\"deletePhotoId\"  @deletePhotomodal=\"deletePhotoModal\" :userType=\"userType\"/>\r\n             \r\n             <div class=\"row\" style=\"margin-top:12px\">\r\n                <div class=\"col text-end\" style=\"padding:0\">\r\n                  <Button  @click=\"openDialogAddPhoto\" style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Add photo', showDelay: 1000, hideDelay: 300 }\"  type=\"button\" class=\"p-button-text addphotobutton\" label=\"Add photo\"/>\r\n                </div>\r\n             </div>\r\n              \r\n          </TabPanel>\r\n        \r\n          <TabPanel header=\"Drawing\">\r\n              \r\n              <img src=\"/images/pindrawing.jpg\">\r\n                 \r\n             </TabPanel>\r\n\r\n          \r\n\r\n        </TabView>\r\n\r\n\r\n          \r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n<div class=\"historyHolder\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n\r\n        <Timeline :value=\"events\" align=\"alternate\">\r\n          \r\n          <template #marker=\"slotProps\">\r\n            <span class=\"flex w-2rem h-2rem align-items-center justify-content-center text-white border-circle z-1 shadow-1\" :style=\"{ backgroundColor: slotProps.item.color }\">\r\n                <i :class=\"slotProps.item.icon\"></i>\r\n            </span>\r\n        </template>\r\n\r\n             <template #content=\"slotProps\">\r\n              <div class=\"mt-3\">\r\n                  <div class=\"historyStatus\">{{ slotProps.item.status }}</div>\r\n                  <div class=\"historyDate\">{{ slotProps.item.date }}</div>\r\n                  <div class=\"historyName\">{{ slotProps.item.createdBy }}</div>\r\n                  <div class=\"historyNotes\"><textarea class=\"textAreaComments\">Comments</textarea></div>\r\n              </div>\r\n                </template>\r\n          \r\n          </Timeline>\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n         <!-- zoomed image Dialog-->\r\n        <Dialog modal v-model:visible=\"visibleImagesModal\" :style=\"{ width: '50rem' }\" :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\">\r\n          <SwiperCarousel :snagImages=\"snagImages\"  @deletePhotomodal=\"deletePhotoModal\"/>\r\n        </Dialog>\r\n        \r\n       \r\n  \r\n       \r\n\t\t\t\t\r\n</div>\t\r\n\r\n\r\n <!-- insert new trip Dialog-->\r\n <Dialog @update:visible=\"handleClose\" v-model:visible=\"newSnagDialog\" modal  :style=\"{ width: '50rem' }\" :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\">\r\n         \r\n        <template #header>\r\n          Enter new snag\r\n        </template> \r\n        \r\n        <div class=\"container\" id=\"formContainer\">\r\n          \r\n          <div class=\"row insertFormRow align-items-center   even\">\r\n            <div class=\"col-md-3\"><label for=\"newSnagDate\">Required by Date *</label></div>\r\n            <div class=\"col-md-9\">\r\n              <Calendar   @change=\"changeDate('from')\" style=\"margin-left:0\" id=\"newSnagDate\" class=\"dateDisplayInput\" v-model=\"newSnagDate\" showIcon dateFormat=\"dd/mm/yy\" placeholder=\"dd/mm/yy\" mask=\"99/99/9999\"/>\r\n            \r\n              <InlineMessage v-if=\"!newSnagDateOK\">This field is required</InlineMessage>\r\n            </div>\r\n          </div>\r\n\r\n        \r\n\r\n         \r\n          <div class=\"row insertFormRow align-items-center   \">\r\n            <div class=\"col-md-3\"><label for=\"newSnagTitle\">Item *</label></div>\r\n            <div class=\"col-md-9\"><InputText  @input=\"newSnagTitleOK=true\" id=\"newSnagTitle\" v-model=\"newSnagTitle\" />\r\n            <InlineMessage v-if=\"!newSnagTitleOK\">This field is required</InlineMessage></div>\r\n          </div>\r\n\r\n          <div class=\"row insertFormRow align-items-center  even \">\r\n            <div class=\"col-md-3\"><label for=\"newSnagCode\">Code *</label></div>\r\n            <div class=\"col-md-9\"><InputText   @input=\"newSnagCodeOK=true\" id=\"newSnagCode\" v-model=\"newSnagCode\" />\r\n            <InlineMessage v-if=\"!newSnagCodeOK\">This field is required</InlineMessage></div>\r\n          </div>\r\n\r\n          <div class=\"row insertFormRow align-items-center   \">\r\n            <div class=\"col-md-3\"><label for=\"newSnagStatus\">Status * </label></div>\r\n            <div class=\"col-md-9\">\r\n              <Dropdown v-model=\"newSnagStatus\" :options=\"allStatuses\"  optionLabel=\"name\" placeholder=\"Select Status\"></Dropdown>\r\n             \r\n\r\n            <InlineMessage v-if=\"!newSnagStatusOK\">This field is required</InlineMessage></div>\r\n          </div>\r\n        \r\n                  \r\n         \r\n\r\n          <div class=\"row insertFormRow align-items-center   \">\r\n            <div class=\"col-md-6 text-left\">\r\n              <Button @click=\"closeInsertDialog\" style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Cancel', showDelay: 1000, hideDelay: 300 }\"  icon=\"pi pi-times-circle\" type=\"button\" class=\"p-button-text redButton\" label=\"Cancel\"/>\r\n           \r\n            </div>\r\n            <div class=\"col-md-6 text-end\">\r\n              <Button style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Save snag', showDelay: 1000, hideDelay: 300 }\"  type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-text\" @click=\"saveSnag\" label=\"Save snag\"/>\r\n             </div>\r\n          </div>\r\n        \r\n        </div>\r\n          \r\n\r\n\r\n      </Dialog> \r\n\r\n<!-- Edit Snag Dialog-->\r\n<Dialog @update:visible=\"handleClose\" v-model:visible=\"editSnagDialog\" modal  :style=\"{ width: '50rem' }\" :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\">\r\n         \r\n         <template #header>\r\n           Edit Snag\r\n         </template> \r\n         \r\n         <div class=\"container\" id=\"formContainer\">\r\n           \r\n           <div class=\"row insertFormRow align-items-center   even\">\r\n             <div class=\"col-md-3\"><label for=\"editSnagDate\">Required by Date *</label></div>\r\n             <div class=\"col-md-9\">\r\n              \r\n              <Calendar :value=\"editSnagDate\" v-model=\"editSnagDate\"  @change=\"changeDate('from')\" style=\"margin-left:0\" id=\"editSnagDate\" class=\"dateDisplayInput\"  showIcon dateFormat=\"dd/mm/yy\" placeholder=\"dd/mm/yy\" mask=\"99/99/9999\"/>\r\n             \r\n               <InlineMessage v-if=\"!editSnagDateOK\">This field is required</InlineMessage>\r\n             </div>\r\n           </div>\r\n\r\n           <div class=\"row insertFormRow align-items-center   \">\r\n             <div class=\"col-md-3\"><label for=\"editSnagTitle\">Item *</label></div>\r\n             <div class=\"col-md-9\"><InputText @input=\"editSnagTitleOK=true\" id=\"editSnagTitle\" v-model=\"editSnagTitle\"  />\r\n             <InlineMessage v-if=\"!editSnagTitleOK\">This field is required</InlineMessage></div>\r\n           </div>\r\n\r\n \r\n           <div class=\"row insertFormRow align-items-center   even\">\r\n             <div class=\"col-md-3\"><label for=\"editSnagStatus\">Status *</label></div>\r\n             <div class=\"col-md-9\">\r\n              <!--<InputText  @input=\"editSnagStatusOK=true\" id=\"editSnagStatus\" v-model=\"editSnagStatus\" />-->\r\n              <Dropdown v-model=\"editSnagStatus\" :options=\"allStatuses\"  optionLabel=\"name\" :placeholder=\"editSnagStatus\"></Dropdown>\r\n             <InlineMessage v-if=\"!editSnagStatusOK\">This field is required</InlineMessage></div>\r\n           </div>\r\n\r\n\r\n \r\n           <div class=\"row insertFormRow align-items-center   \">\r\n             <div class=\"col-md-3\"><label for=\"username\">Code *</label></div>\r\n             <div class=\"col-md-9\"><InputText @input=\"editSnagCodeOK=true\"  id=\"editSnagCode\" v-model=\"editSnagCode\"/>\r\n             <InlineMessage v-if=\"!editSnagCodeOK\">This field is required</InlineMessage></div>\r\n           </div>\r\n \r\n        \r\n           \r\n          \r\n \r\n \r\n           <div class=\"row insertFormRow align-items-center   \">\r\n             <div class=\"col-md-6 text-left\">\r\n               <Button @click=\"closeEditDialog\" style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Cancel', showDelay: 1000, hideDelay: 300 }\"   icon=\"pi pi-times-circle\" type=\"button\" class=\"p-button-text redButton\" label=\"Cancel\"/>\r\n            \r\n             </div>\r\n             <div class=\"col-md-6 text-end\">\r\n               <Button style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Save changes', showDelay: 1000, hideDelay: 300 }\"  type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-text\" @click=\"editSnag\" label=\"Save changes\"/>\r\n              </div>\r\n           </div>\r\n         \r\n         </div>\r\n           \r\n \r\n \r\n       </Dialog> \r\n\r\n\r\n <!-- dialog info --> \r\n <Dialog v-model:visible=\"displayInfoDialog\" modal  :style=\"{ width: '25rem' }\" :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\">\r\n    <template #header=\"\"> \r\n        <h4> {{ InfoModalHeader }}</h4>\r\n    </template>\r\n  \r\n            <span class=\"font-bold text-2xl block mb-2 mt-4\"></span>\r\n            <p class=\"mb-0\">{{InfoModalMessage }}</p>\r\n            <div class=\"flex text-end gap-2 mt-4\">\r\n                <Button label=\"Ok\" @click=\"closeInfo\"></Button>\r\n              \r\n            </div>          \r\n</Dialog>\r\n\r\n <!-- dialog confirm Delete --> \r\n <Dialog v-model:visible=\"displayDeleteConfirm\" modal  :style=\"{ width: '30rem' }\" :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\">\r\n    <template #header=\"\"> \r\n        <h4> Please confirm</h4>\r\n    </template>\r\n  \r\n            <span class=\"font-bold text-2xl block mb-2 mt-4\"></span>\r\n            <p class=\"mb-0\">Are you sure that you want to Delete Snag <strong>'{{ editSnagCargoName }}'</strong>?</p>\r\n          \r\n          <div class=\"row\" style=\"margin-top:30px\">\r\n              <div class=\"col-md-6 text-start\">\r\n                  <Button class=\"redButton\" label=\"Cancel\" @click=\"displayDeleteConfirm=false\"></Button>\r\n              </div>\r\n              <div class=\"col-md-6 text-end\">\r\n                  <Button label=\"Yes, delete\" @click=\"deleteTrip\"></Button>\r\n            </div>   \r\n          </div>\r\n          \r\n</Dialog>\r\n\r\n\r\n\r\n<!-- dialog confirm UNinvoice --> \r\n<Dialog v-model:visible=\"displayUnInvoiceConfirm\" modal  :style=\"{ width: '30rem' }\" :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\">\r\n    <template #header=\"\"> \r\n        <h4> Please confirm</h4>\r\n    </template>\r\n  \r\n            <span class=\"font-bold text-2xl block mb-2 mt-4\"></span>\r\n            <p class=\"mb-0\">Are you sure that you want to remove mark 'Invoiced'<br> for trip <strong>'{{ editSnagCargoName }}'</strong>?</p>\r\n          \r\n          <div class=\"row\" style=\"margin-top:30px\">\r\n              <div class=\"col-md-6 text-start\">\r\n                  <Button class=\"redButton\" label=\"Cancel\" @click=\"displayInvoiceConfirm=false\"></Button>\r\n              </div>\r\n              <div class=\"col-md-6 text-end\">\r\n                  <Button label=\"Yes, remove it\" @click=\"unInvoiceThisTrip\"></Button>\r\n            </div>   \r\n          </div>\r\n          \r\n</Dialog>\r\n\r\n\r\n<!-- Send Invoice Dialog-->\r\n<Dialog @update:visible=\"handleClose\" v-model:visible=\"sendInvoiceDialog\" modal  :style=\"{ width: '50rem' }\" :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\">\r\n         \r\n         <template #header>\r\n           Mark this trip as Invoiced\r\n         </template> \r\n         \r\n         <div class=\"container\" id=\"formContainer\">\r\n           \r\n           <div class=\"row insertFormRow align-items-center   even\">\r\n             <div class=\"col-md-3\"><label for=\"invoiceDate\">Invoice Date *</label></div>\r\n             <div class=\"col-md-9\"><Calendar  hourFormat=\"24\" showTime @change=\"changeDate('from')\" style=\"margin-left:0\" id=\"invoiceDate\" class=\"dateDisplayInput\" v-model=\"invoiceDate\" showIcon dateFormat=\"dd/mm/yy\" placeholder=\"dd/mm/yy\" mask=\"99/99/9999\"/>\r\n             \r\n               <InlineMessage v-if=\"!invoiceDateOK\">This field is required</InlineMessage>\r\n             </div>\r\n           </div>\r\n \r\n          \r\n \r\n \r\n \r\n           <div class=\"row insertFormRow align-items-center   \">\r\n             <div class=\"col-md-6 text-left\">\r\n               <Button @click=\"sendInvoiceDialog=false\" style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Cancel', showDelay: 1000, hideDelay: 300 }\"   icon=\"pi pi-times-circle\" type=\"button\" class=\"p-button-text redButton\" label=\"Cancel\"/>\r\n            \r\n             </div>\r\n             <div class=\"col-md-6 text-end\">\r\n               <Button style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Mark as Invoiced', showDelay: 1000, hideDelay: 300 }\"  type=\"button\" icon=\"pi pi-check-circle\" class=\"p-button-text\" @click=\"invoiceThisTrip\" label=\"Mark as Invoiced\"/>\r\n              </div>\r\n           </div>\r\n         \r\n         </div>\r\n           \r\n \r\n \r\n       </Dialog> \r\n\r\n<!-- Send Multiple Invoice Dialog-->\r\n<Dialog @update:visible=\"handleClose\" v-model:visible=\"sendMultipleInvoiceDialog\" modal header=\"header\" :style=\"{ width: '50rem' }\" :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\">\r\n         \r\n         <template #header>\r\n\r\n            <span v-if=\"selectedIDsForInvoicing.length == 1\">Mark selected trip as Invoiced</span>\r\n            <span v-if=\"selectedIDsForInvoicing.length > 1\">Mark selected <span style=\"font-weight:bold\">{{ selectedIDsForInvoicing.length }} trips </span> as Invoiced</span>\r\n          \r\n         </template> \r\n\r\n\r\n         \r\n         <div class=\"container\" id=\"formContainer\">\r\n           \r\n           <div class=\"row insertFormRow align-items-center   even\">\r\n             <div class=\"col-md-3\"><label for=\"invoiceDate\">Invoice Date *</label></div>\r\n             <div class=\"col-md-9\"><Calendar  hourFormat=\"24\" showTime @change=\"changeDate('from')\" style=\"margin-left:0\" id=\"invoiceMultipleDate\" class=\"dateDisplayInput\" v-model=\"invoiceDate\" showIcon dateFormat=\"dd/mm/yy\" placeholder=\"dd/mm/yy\" mask=\"99/99/9999\"/>\r\n             \r\n               <InlineMessage v-if=\"!invoiceDateOK\">This field is required</InlineMessage>\r\n             </div>\r\n           </div>\r\n \r\n          \r\n \r\n \r\n \r\n           <div class=\"row insertFormRow align-items-center   \">\r\n             <div class=\"col-md-6 text-left\">\r\n               <Button @click=\"sendMultipleInvoiceDialog=false\" style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Cancel', showDelay: 1000, hideDelay: 300 }\"   icon=\"pi pi-times-circle\" type=\"button\" class=\"p-button-text redButton\" label=\"Cancel\"/>\r\n            \r\n             </div>\r\n             <div class=\"col-md-6 text-end\">\r\n               <Button style=\"min-width:120px\" v-tooltip.bottom=\"{ value: 'Mark as Invoiced', showDelay: 1000, hideDelay: 300 }\"  type=\"button\" icon=\"pi pi-check-circle\" class=\"p-button-text\" @click=\"invoiceMultipleTrips\" label=\"Mark as Invoiced\"/>\r\n              </div>\r\n           </div>\r\n         \r\n         </div>\r\n           \r\n \r\n \r\n       </Dialog> \r\n\r\n\r\n\r\n <!-- dialog confirm Delete Photo --> \r\n <Dialog v-model:visible=\"displayDeletePhotoConfirm\" modal  :style=\"{ width: '30rem' }\" :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\">\r\n    <template #header=\"\"> \r\n        <h4> Please confirm</h4>\r\n    </template>\r\n  \r\n            <span class=\"font-bold text-2xl block mb-2 mt-4\"></span>\r\n            <p class=\"mb-0\">Are you sure that you want to delete this photo?</p>\r\n          \r\n          <div class=\"row\" style=\"margin-top:30px\">\r\n              <div class=\"col-md-6 text-start\">\r\n                  <Button class=\"redButton\" label=\"Cancel\" @click=\"displayDeletePhotoConfirm=false\"></Button>\r\n              </div>\r\n              <div class=\"col-md-6 text-end\">\r\n                  <Button label=\"Yes, delete\" @click=\"deletePhoto\"></Button>\r\n            </div>   \r\n          </div>\r\n           \r\n</Dialog>\r\n\r\n\r\n<!-- dialog upload photo --> \r\n<Dialog v-model:visible=\"displayUploadModal\" modal  :style=\"{ width: '60rem' }\" :breakpoints=\"{ '1199px': '75vw', '575px': '90vw' }\">\r\n    <template #header=\"\"> \r\n        <h4> Upload photo</h4>\r\n    </template>\r\n  \r\n         <div class=\"row\" style=\"margin-top:30px\">\r\n              <div class=\"col\">\r\n               \r\n                <FileUpload name=\"files[]\" :customUpload=\"true\" url=\"/api/upload\" @uploader=\"customUploader($event)\" :multiple=\"false\" accept=\"image/*\" :maxFileSize=\"10000000\">\r\n                  <template #empty>\r\n                      <p>Drag and drop files to here to upload.</p>\r\n                  </template>\r\n                </FileUpload>\r\n\r\n              </div>\r\n              \r\n        </div>   \r\n         \r\n          \r\n      \r\n           \r\n</Dialog>\r\n\r\n<div id=\"div-context-menu\"  class=\"cls-context-menu\" style=\"left: 11px; top: 13px; display: none\">\r\n       <ul>\r\n        \r\n          <ul>\r\n            <li v-if=\"!AllPageMarked && !AllMarked\"><a @click=\"SelectAllPage('select')\">Select all records on current page</a></li>\r\n            <li v-if=\"!AllPageMarked && !AllMarked\"><a @click=\"SelectAll('select')\" >Select all on all pages</a></li>\r\n           \r\n            <li v-if=\"AllMarked || AllPageMarked\"><a @click=\"SelectAll('deselect')\" >Deselect All </a></li>\r\n\r\n          </ul>\r\n       \r\n       </ul>\r\n     </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n// Primevue datatable help: https://www.primefaces.org/primevue/datatable //\r\n\r\nimport DataTable from \"primevue/datatable\";\r\nimport Column from \"primevue/column\";\r\nimport InputText from 'primevue/inputtext';\r\nimport Button from 'primevue/button';\r\nimport Calendar from 'primevue/calendar';\r\nimport Dialog from 'primevue/dialog';\r\nimport InlineMessage from 'primevue/inlinemessage';\r\n//import InputNumber from 'primevue/inputnumber';\r\nimport TabView from 'primevue/tabview';\r\nimport TabPanel from 'primevue/tabpanel';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport FileUpload from 'primevue/fileupload';\r\n//import Checkbox from 'primevue/checkbox';\r\nimport Timeline from 'primevue/timeline';\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\n\r\nimport {FilterMatchMode,FilterOperator} from 'primevue/api';         // for filtering\r\n\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n\r\nexport default {\r\n  props: [\"systemId\"],\r\n  components: {\r\n    InputText,Button,\r\n    DataTable,\r\n    Column,\r\n    Calendar,\r\n    Dialog,\r\n    TabView,\r\n    TabPanel,\r\n    InlineMessage,\r\n    Timeline,\r\n    //InputNumber,\r\n    Dropdown,\r\n    FileUpload,\r\n    //Checkbox\r\n  },\r\n emits:['extend-session','showSearchbar'],\r\n\r\n  data() {\r\n    return {\r\n      ProjectRef:'61196AD9FF1A440A9267D3044E8B595E',\r\n      showTable: true,\r\n\r\n      first:0,\r\n      snagsPage:1,       // default page to load\r\n      pageSize:100,      // default page size\r\n      totalRecords:0, // total records, get this from snags json\r\n   //   rowsPerPageOptions: [{\"label\":\"25\",\"value\":\"25\"},{\"label\":\"50\",\"value\":\"50\"},{\"label\":\"100\",\"value\":\"100\"},{\"label\":\"250\",\"value\":\"250\"},{\"label\":\"500\",\"value\":\"500\"}],\r\n      rowsPerPageOptions:[25,50,100,250,500],\r\n\r\n      searchQuery:'',\r\n      captionFilter:'',\r\n      codeFilter:'',\r\n      statusFilter:'',\r\n      worksPackageFilter:'',\r\n      areaFilter:'',\r\n      createdByFilter:'',\r\n      actionByFilter:'',\r\n      closedByFilter:'',\r\n\r\n      captionFilterMode:'',\r\n      codeFilterMode:'',\r\n      statusFilterMode:'',\r\n      worksPackageFilterMode:'',\r\n      areaFilterMode:'',\r\n      createdByFilterMode:'',\r\n      actionByFilterMode:'',\r\n      closedByFilterMode:'',\r\n\r\n      filterCleared :0,\r\n\r\n      snagDetails:[],      // all snag details includin images\r\n      snagDetailsData:[],  //only details, without images\r\n\r\n      \r\n      events:[\r\n              {\r\n                  \"status\": \"created\",\r\n                  \"date\": \"2024-02-01\",\r\n                  \"createdBy\": \"Ryan Bradley\",\r\n                  \"icon\":\"pi pi-cog\",\r\n                  \"color\":\"blue\",\r\n                  \"notes\":\"\",\r\n              },\r\n              {\r\n                  \"status\": \"Uploaded image\",\r\n                  \"date\": \"2024-02-02\",\r\n                  \"createdBy\": \"Ryan Bradley\",\r\n                  \"icon\":\"pi pi-image\",\r\n                  \"color\":\"lightblue\",\r\n                  \"notes\":\"\",\r\n              },\r\n              {\r\n                  \"status\": \"Edited\",\r\n                  \"date\": \"2024-02-02\",\r\n                  \"createdBy\": \"Noel Mullen\",\r\n                  \"icon\":\"pi pi-pencil\",\r\n                  \"color\":\"lightblue\",\r\n                  \"notes\":\"Changed title\",\r\n              },\r\n              {\r\n                  \"status\": \"Accepted\",\r\n                  \"date\": \"2024-02-02\",\r\n                  \"createdBy\": \"Noel Mullen\",\r\n                  \"icon\":\"pi pi-check\",\r\n                  \"color\":\"green\",\r\n                  \"notes\":\"All looks ok\"\r\n              },\r\n              {\r\n                  \"status\": \"Closed\",\r\n                  \"date\": \"2024-02-02\",\r\n                  \"createdBy\": \"Noel Mullen\",\r\n                  \"icon\":\"pi pi-star\",\r\n                  \"color\":\"lightgreen\",\r\n                  \"notes\":\"\"\r\n                  \r\n              },\r\n              {\r\n                  \"status\": \"Reopened\",\r\n                  \"date\": \"2024-02-02\",\r\n                  \"createdBy\": \"Ryan Bradley\",\r\n                  \"icon\":\"pi pi-refresh\",\r\n                  \"color\":\"blue\",\r\n                  \"notes\":\"It needs to be reopened\"\r\n              },\r\n              {\r\n                  \"status\": \"Accepted\",\r\n                  \"date\": \"2024-02-02\",\r\n                  \"createdBy\": \"Noel Mullen\",\r\n                  \"icon\":\"pi pi-check\",\r\n                  \"color\":\"green\",\r\n                  \"notes\":\"All looks ok\"\r\n              },\r\n              {\r\n                  \"status\": \"Closed\",\r\n                  \"date\": \"2024-02-02\",\r\n                  \"createdBy\": \"Evan Blake\",\r\n                  \"icon\":\"pi pi-star\",\r\n                  \"color\":\"lightgreen\"\r\n              }\r\n          ],  \r\n\r\n\r\n      howManyTrips:'',\r\n      AllPageMarked:false,\r\n      AllMarked:false,\r\n      sendMultipleInvoiceDialog:false,\r\n      showInvoiceSelectedButton:false,\r\n      selectedIDsForInvoicing:[],\r\n      checkedIDs:[],\r\n      invoiceDate:'',\r\n      invoiceDateOK:true,\r\n      sendInvoiceDialog:false,\r\n      displayUnInvoiceConfirm:false,\r\n      dataTable:'dataTable',\r\n      downloadedReport:'',\r\n      binaryfile:'',\r\n      photoIdForDelete:'',\r\n      displayDeletePhotoConfirm:false,\r\n      uploadFIlename:'',\r\n      displayUploadModal:false,\r\n      allStatuses:[],\r\n      ClickedRowId:'',\r\n      tableHeight:'calc( 100vh - 215px)',\r\n      displayDeleteConfirm:false,\r\n      deletingTripName:'',\r\n      snagNotes:'',\r\n         newSnagDialog:false,\r\n         editSnagDialog:false,\r\n          isLoading: true,\r\n          userType : '',\r\n          userLocale:'',\r\n          loading1: true,\r\n          loading2: true,\r\n          filters1: null,\r\n          visibleImagesModal:false,\r\n          snagImages: [],\r\n          picturesTabShow:false,\r\n          activeTab:0,\r\n          SnagDate: '',\r\n          tripUserEmail: '',\r\n          tripFrom: '',\r\n          tripTo: '',\r\n          tripFixedCosts: '',\r\n          tripCargoName: '',\r\n          tripDistance: '',\r\n          tripDistanceCosts: '',\r\n          tripVatPercentage: '',\r\n          tripSum: '',\r\n          tripSumVAT: '',\r\n          tripCompanyName: '',\r\n          tripComments: '',\r\n          tripCreated: '',\r\n          tripUserFullName: '',\r\n          openedcargoname :'',\r\n\r\n          displayInfoDialog:false,\r\n          InfoModalHeader:'',\r\n          InfoModalMessage:'',\r\n\r\n          newSnagDate:'',\r\n          newSnagFrom:'',\r\n          newSnagTo:'',\r\n          newSnagTitle:'',\r\n          newSnagCode:'',\r\n          newSnagStatus:'0',\r\n          newSnagStatusCosts:'0',\r\n          newSnagCompanyName:'',\r\n          newSnagComments:'',\r\n\r\n          newSnagDateOK:true,\r\n          newSnagFromOK:true,\r\n          newSnagToOK:true,\r\n          newSnagTitleOK:true,\r\n          newSnagCodeOK:true,\r\n          newSnagStatusOK:true,\r\n          newSnagStatusCostsOK:true,\r\n          newSnagCompanyNameOK:true,\r\n          newSnagCommentsOK:true,\r\n\r\n          editSnagDate:'',\r\n          editSnagTitle:'',\r\n          editSnagCode:'',\r\n          editSnagCargoName:'',\r\n          editSnagFixedCosts:'0',\r\n          editSnagDistance:'0',\r\n          editSnagDistanceCosts:'0',\r\n          editSnagStatus:'',\r\n          editSnagComments:'',\r\n\r\n          editSnagDateOK:true,\r\n          editSnagTitleOK:true,\r\n          editSnagCodeOK:true,\r\n          editSnagCargoNameOK:true,\r\n          editSnagFixedCostsOK:true,\r\n          editSnagDistanceOK:true,\r\n          editSnagDistanceCostsOK:true,\r\n          editSnagStatusOK:true,\r\n          editSnagCommentsOK:true,\r\n                    editSnagInvoiced:'',\r\n\r\n          panelClass:'closedPanel',\r\n       /*   filters: {\r\n               'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n               'code': {value: null, matchMode: FilterMatchMode.EQUALS},\r\n              \r\n              //if multiple filters is posible\r\n               'code':{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n               'caption': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'status':{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'createdBy': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'area':{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'worksPackage': {{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'closedBy':{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'assignedTo': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               \r\n              \r\n            },*/\r\n\r\n            filters: {\r\n               'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n\r\n               'code':{ constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n               'caption': {constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'status':{ constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'createdBy': { constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'area':{constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'worksPackage': {constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'closedBy':{constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'assignedTo': {constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n            },\r\n            \r\n    matchModes: [\r\n        {label: 'Starts With', value: FilterMatchMode.STARTS_WITH},\r\n        {label: 'Contains', value: FilterMatchMode.CONTAINS},\r\n    ],\r\n      allSnags: [],\r\n\r\n      fromDate:'',\r\n      toDate:''\r\n    };\r\n  },\r\n  methods: {\r\n\r\n   async downloadSnagPDF(){\r\n      const snagKey = this.snagDetails['snag']['key'];\r\n      const snagCode = this.snagDetails['snag']['code'];\r\n      const snagTitle = this.snagDetails['snag']['caption'];\r\n      const aFileName = snagCode + \" - \" + snagTitle +\".pdf\";\r\n\r\n      //const sessionId=this.$store.getters.token;\r\n      const baseUrl = this._rootRestUrl;\r\n\r\n\r\n      const xhr = new XMLHttpRequest();\r\n        xhr.open('GET', baseUrl + \"/api/PDF/DownloadSnagPDF/?snagKey=\"+snagKey, true);\r\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\r\n        xhr.responseType = 'blob';\r\n        xhr.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n              if (window.navigator.msSaveOrOpenBlob) {\r\n                  window.navigator.msSaveBlob(this.response, aFileName);\r\n                } else {\r\n                  const downloadLink = window.document.createElement('a');\r\n                  const contentTypeHeader = xhr.getResponseHeader(\"Content-Type\");\r\n                  downloadLink.href = window.URL.createObjectURL(new Blob([this.response], { type: contentTypeHeader }));\r\n                  downloadLink.download = aFileName;\r\n                  document.body.appendChild(downloadLink);\r\n                  downloadLink.click();\r\n                  document.body.removeChild(downloadLink);\r\n                }\r\n            }\r\n        };\r\n        xhr.send(null);\r\n\r\n\r\n\r\n  /*    let formData = JSON.stringify({});\r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n\r\n          };\r\n\r\n        try{  \r\n         await  axios\r\n            .get(baseUrl + \"/api/PDF/DownloadSnagPDF/?snagKey=\"+snagKey, formData, config)\r\n            .then((response) => {\r\n               this.downloadedSnagPDF = response.data;\r\n               \r\n\r\n              // var fileName = 'Report '+this.format_date(DateFrom, 'YYYY-MM-DD')+\" - \"+this.format_date(DateTo, 'YYYY-MM-DD');\r\n               this.downloadPDF(this.downloadedSnagPDF, snagCode + \" - \"+ snagTitle +\".pdf\");\r\n              \r\n            })           \r\n           \r\n\r\n          } catch (error) {\r\n          \r\n                if(error.response.status == 401){\r\n                  alert(\"Your session is expired! Please login\");\r\n                  localStorage.clear();\r\n                    // document.location = '/';\r\n                }\r\n              this.displayUnInvoiceConfirm=false;\r\n\r\n              this.displayInfoDialog=true;\r\n              this.InfoModalHeader='Error '+error.response.status;\r\n              this.InfoModalMessage=error.response.data.Message;\r\n              this.isLoading = false; \r\n\r\n       }   \r\n\r\n          // after every request \r\n          // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n\r\n*/\r\n\r\n    },\r\n\r\n\r\n    selectingForInvoice(clickedID){\r\n     \r\n           \r\n        if(!this.checkedIDs[clickedID]){\r\n                this.selectedIDsForInvoicing.push(clickedID);\r\n        }else{\r\n          \r\n          const index = this.selectedIDsForInvoicing.indexOf(clickedID);\r\n          this.selectedIDsForInvoicing.splice(index, 1);     \r\n        \r\n        }\r\n\r\n      \r\n        if( this.selectedIDsForInvoicing.length > 0){\r\n            this.showInvoiceSelectedButton=true;\r\n        }else{\r\n            this.showInvoiceSelectedButton=false;\r\n            this.AllPageMarked = false;\r\n        }\r\n\r\n      \r\n                 \r\n                  \r\n              \r\n\r\n    },\r\n\r\n     invoiceSelected(){\r\n      this.invoiceDate =  moment().format('DD/MM/YYYY HH:mm');\r\n\r\n     /*var addText = '';\r\n      if (this.selectedIDsForInvoicing.length == 1){\r\n        addText = 'Mark selected trip as Invoiced';\r\n      }else{\r\n        addText = ''+this.selectedIDsForInvoicing.length+'</strong> trips as Invoiced';\r\n      }\r\n      this.howManyTrips = addText;*/\r\n\r\n       this.sendMultipleInvoiceDialog = true;\r\n     },\r\n      \r\n   \r\n\r\n    reorganizePagination(){\r\n      $(\".p-paginator-current\").detach().appendTo('.p-paginator-left-content');\r\n      $(\".p-paginator-rpp-options\").detach().appendTo('.p-paginator-right-content');\r\n    },\r\n    \r\n    moveSearchBoxToTop(){\r\n     \r\n        //default search box is inside header of the datatable, must move to the top of the page\r\n        $('#hereMoveSearch').empty();\r\n        $(\"#searchBox\").detach().appendTo('#hereMoveSearch');\r\n    },\r\n\r\n    newSnag(){\r\n      this.resetInputFields();\r\n      this.newSnagDate = this.format_date(moment(),'DD/MM/YYYY');\r\n      \r\n     \r\n      //show dialog for insert\r\n      this.newSnagDialog = true\r\n      \r\n    },\r\n    editSnag(){\r\n\r\n      \r\n       var AllOk = true;\r\n\r\n     \r\n      if(this.editSnagDate == ''){\r\n        this.editSnagDateOK = false;\r\n        AllOk = false;\r\n      }else{this.editSnagDateOK = true;}\r\n\r\n      if(this.editSnagTitle == ''){\r\n        this.editSnagTitleOK = false;\r\n        AllOk = false;\r\n      }else{this.editSnagTitleOK = true;}\r\n\r\n      if(this.editSnagCode == ''){\r\n        this.editSnagCodeOK = false;\r\n        AllOk = false;\r\n      }else{this.editSnagCodeOK = true;}\r\n\r\n    \r\n      \r\n      if(this.editSnagStatus.name){\r\n          this.editSnagStatus = this.editSnagStatus.value;\r\n      }\r\n     \r\n      if(this.editSnagStatus == ''){\r\n        this.editSnagStatusOK = false;\r\n        AllOk = false;\r\n      }else{this.editSnagStatusOK = true;}\r\n\r\n    /*  if(this.newSnagComments == ''){\r\n        this.newSnagCommentsOK = false;\r\n        AllOk = false;\r\n      }else{this.newSnagCommentsOK = true;}*/\r\n\r\n\r\n      if(AllOk == true){\r\n             this.editSnagInDatabase();\r\n      }\r\n\r\n    },\r\n    async editSnagInDatabase(){\r\n     \r\n         this.panelClass = 'closedPanel';   \r\n         this.isLoading = true;  \r\n         \r\n        \r\n          var SnagDate = this.format_date(moment(this.editSnagDate,'DD/MM/YYYY HH:mm'),'YYYY-MM-DD HH:mm:ss');\r\n\r\n        \r\n         \r\n          const sessionId=this.$store.getters.token;\r\n          const baseUrl = this._rootRestUrl;\r\n                  \r\n          let formData = JSON.stringify({key:this.ClickedRowId,sessionId:sessionId,caption:this.editSnagTitle,code:this.editSnagCode,status:this.editSnagStatus,userEmail:'',date:SnagDate});\r\n     \r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            }};\r\n         \r\n        try {\r\n          await axios\r\n            .put(baseUrl + \"/api/Snags/EditSnag\",formData, config )\r\n            .then(() => {\r\n                                \r\n               this.getSnags();\r\n               this.getCompanies();\r\n               this.editSnagDialog=false;\r\n\r\n               this.displayInfoDialog= true;\r\n               this.InfoModalHeader='Info';\r\n               this.InfoModalMessage='Changes are saved';\r\n               this.isLoading = false; \r\n           })\r\n            \r\n                    \r\n            } catch (error) {\r\n\r\n           \r\n                this.editSnagDialog=false;\r\n                this.displayInfoDialog=true;\r\n                this.InfoModalHeader='Error '+error.response.status;\r\n                this.InfoModalMessage=error.response.data.Message;\r\n                this.isLoading = false; \r\n \r\n           }\r\n \r\n\r\n          // after every request \r\n        //  // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n\r\n    },\r\n\r\n\r\n    saveSnag(){\r\n      \r\n       var AllOk = true;\r\n\r\n      if(this.newSnagDate == ''){\r\n        this.newSnagDateOK = false;\r\n        AllOk = false;\r\n      }else{this.newSnagDateOK = true;}\r\n\r\n            if(this.newSnagTitle == ''){\r\n        this.newSnagTitleOK = false;\r\n        AllOk = false;\r\n      }else{this.newSnagTitleOK = true;}\r\n\r\n      if(this.newSnagCode== null){\r\n        this.newSnagCodeOK = false;\r\n        AllOk = false;\r\n      }else{this.newSnagCodeOK = true;}\r\n\r\n\r\n    if(this.newSnagStatus == undefined || this.newSnagStatus==''){\r\n       \r\n        this.newSnagStatus = '';\r\n        AllOk = false;\r\n        this.newSnagStatusOK = false;\r\n    }else{\r\n        this.newSnagStatus= this.newSnagStatus.value;\r\n        if(this.newSnagStatus == ''){\r\n          this.newSnagStatusOK = false;\r\n          AllOk = false;\r\n        }else{this.newSnagStatusOK = true;}\r\n    }\r\n\r\n    if(this.newSnagStatus == undefined){\r\n      this.newSnagStatus = '';\r\n        AllOk = false;\r\n        this.newSnagStatusOK = false;\r\n    }\r\n\r\n    /*  if(this.newSnagComments == ''){\r\n        this.newSnagCommentsOK = false;\r\n        AllOk = false;\r\n      }else{this.newSnagCommentsOK = true;}*/\r\n\r\n  \r\n      if(AllOk == true){\r\n          this.InsertSnagToDatabase();\r\n      }\r\n\r\n    },\r\n\r\n    async  InsertSnagToDatabase(){\r\n      \r\n        this.panelClass = 'closedPanel';   \r\n        this.isLoading = true;  \r\n         \r\n       // const sessionId=this.$store.getters.token;\r\n       \r\n        //date and time from NOW()\r\n        var SnagDate = this.format_date(moment(this.newSnagDate,'DD/MM/YYYY HH:mm'),'YYYY-MM-DD HH:mm:ss');\r\n        \r\n        const baseUrl = this._rootRestUrl;\r\n              \r\n      let formData = JSON.stringify({ProjectRef:this.ProjectRef,type:'Snag',key:'',code:this.newSnagCode,caption:this.newSnagTitle,status:this.newSnagStatus,date:SnagDate});\r\n\r\n        let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n        }};\r\n    \r\n       try{\r\n          \r\n      await   axios\r\n            .post(baseUrl + \"/api/Snags/InsertSnag\",formData, config )\r\n            .then(() => {\r\n                                \r\n               this.getSnags();\r\n               this.getCompanies();\r\n               this.newSnagDialog=false;\r\n               this.displayInfoDialog= true;\r\n               this.InfoModalHeader='Info';\r\n               this.InfoModalMessage='Snag is inserted';\r\n               this.isLoading = false; \r\n           })\r\n            \r\n            \r\n            } catch (error) {\r\n           \r\n              if(error.response.status == 401){\r\n                alert(\"Your session is expired! Please login\");\r\n                localStorage.clear();\r\n                 // document.location = '/';\r\n              }\r\n                this.newSnagDialog=false;\r\n                \r\n                this.displayInfoDialog=true;\r\n                this.InfoModalHeader='Error '+error.response.status;\r\n                this.InfoModalMessage=error.response.data.Message;\r\n                this.isLoading = false; \r\n\r\n            }\r\n\r\n\r\n\r\n            // after every request \r\n            // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n\r\n   },\r\n\r\n    closeInfo(){\r\n      this.displayInfoDialog=false;\r\n    },\r\n\r\n\r\n    handleClose(shouldShow) {\r\n      \r\n      // shouldShow will always be `false`, so this is a bit redundant\r\n      if(!shouldShow){\r\n       // this.resetInputFields();\r\n      }\r\n      else {\r\n        // still open \r\n      }\r\n    },\r\n\r\n    closeInsertDialog(){\r\n      this.newSnagDialog=false;\r\n      this.resetInputFields();\r\n    },\r\n\r\n    closeEditDialog(){\r\n      this.editSnagDialog=false;\r\n      //this.resetInputFields();\r\n    },\r\n\r\n    resetInputFields(){\r\n         //reset input and edit fields ;)\r\n          this.newSnagDate='';\r\n          this.newSnagFrom='';\r\n          this.newSnagTo='';\r\n          this.newSnagTitle='';\r\n          this.newSnagCode='';\r\n          this.newSnagStatus='';\r\n          this.newSnagStatusCosts='';\r\n          this.newSnagCompanyName='';\r\n          this.newSnagComments='';\r\n\r\n          this.newSnagDateOK=true;\r\n          this.newSnagFromOK=true;\r\n          this.newSnagToOK=true;\r\n          this.newSnagTitleOK=true;\r\n          this.newSnagCodeOK=true;\r\n          this.newSnagStatusOK=true;\r\n          this.newSnagStatusCostsOK=true;\r\n          this.newSnagCompanyNameOK=true;\r\n          this.newSnagCommentsOK=true;\r\n\r\n          this.editSnagDate='';\r\n          this.editSnagTitle='';\r\n          this.editSnagCode='';\r\n          this.editSnagCargoName='';\r\n          this.editSnagFixedCosts='0';\r\n          this.editSnagDistance='0';\r\n          this.editSnagDistanceCosts='0';\r\n          this.editSnagStatus='';\r\n          this.editSnagComments='';\r\n\r\n          this.editSnagDateOK=true;\r\n          this.editSnagTitleOK=true;\r\n          this.editSnagCodeOK=true;\r\n          this.editSnagCargoNameOK=true;\r\n          this.editSnagFixedCostsOK=true;\r\n          this.editSnagDistanceOK=true;\r\n          this.editSnagDistanceCostsOK=true;\r\n          this.editSnagStatusOK=true;\r\n          this.editSnagCommentsOK=true;\r\n\r\n },\r\n   \r\n    editClick(){\r\n      \r\n      //show dialog for insert\r\n      this.editSnagDialog = true;\r\n\r\n    },\r\n\r\n    deleteClick(){\r\n       // show confirmation dialog\r\n        this.displayDeleteConfirm=true;\r\n\r\n    },\r\n\r\n    deletePhotoId(photoId){\r\n         // show confirmation dialog\r\n        this.displayDeletePhotoConfirm=true;\r\n        this.photoIdForDelete = photoId;\r\n    },\r\n\r\n    deletePhotoModal(photoId){\r\n         // show confirmation dialog\r\n  \r\n        this.photoIdForDelete = photoId;\r\n        this.deletePhoto();\r\n    },\r\n\r\n  async  deletePhoto(){\r\n        //user already confirmed\r\n         this.panelClass = 'closedPanel';   \r\n         this.isLoading = true;  \r\n           \r\n         const sessionId=this.$store.getters.token;\r\n         const baseUrl =this._rootRestUrl;\r\n      \r\n         let formData = JSON.stringify({sessionId:sessionId,key:this.photoIdForDelete});\r\n     \r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n          }};\r\n\r\n        try{  \r\n          await  axios\r\n            .post(baseUrl + \"/api/v1/Trip/DeleteTripFile\",formData, config )\r\n            .then(() => {\r\n                                \r\n               this.getSnags();\r\n               this.getCompanies();\r\n               this.displayDeletePhotoConfirm = false;\r\n               this.visibleImagesModal = false;\r\n               this.displayInfoDialog= true;\r\n               this.InfoModalHeader='Info';\r\n               this.InfoModalMessage='Photo is deleted';\r\n               this.isLoading = false; \r\n           })\r\n            \r\n            \r\n\r\n        } catch (error) {\r\n           \r\n           if(error.response.status == 401){\r\n             alert(\"Your session is expired! Please login\");\r\n             localStorage.clear();\r\n              // document.location = '/';\r\n           }\r\n             this.displayDeletePhotoConfirm=false;\r\n             this.visibleImagesModal = false;\r\n\r\n             this.displayInfoDialog=true;\r\n             this.InfoModalHeader='Error '+error.response.status;\r\n             this.InfoModalMessage=error.response.data.Message;\r\n             this.isLoading = false; \r\n\r\n         }\r\n\r\n\r\n            \r\n            // after every request \r\n            // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n    },\r\n\r\n  async  deleteTrip(){\r\n      //user already confirmed\r\n         this.panelClass = 'closedPanel';   \r\n         this.isLoading = true;  \r\n           \r\n         const sessionId=this.$store.getters.token;\r\n         const baseUrl = this._rootRestUrl;\r\n      \r\n         let formData = JSON.stringify({sessionId:sessionId,key:this.ClickedRowId});\r\n     \r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n          }};\r\n\r\n       try{   \r\n        await   axios\r\n            .post(baseUrl + \"/api/v1/Trip/DeleteTrip\",formData, config )\r\n            .then(() => {\r\n                                \r\n               this.getSnags();\r\n               this.getCompanies();\r\n               this.displayDeleteConfirm = false;\r\n               this.displayInfoDialog= true;\r\n               this.InfoModalHeader='Info';\r\n               this.InfoModalMessage='Trip is deleted';\r\n               this.isLoading = false; \r\n           })\r\n            \r\n\r\n       } catch (error) {\r\n           \r\n           if(error.response.status == 401){\r\n             alert(\"Your session is expired! Please login\");\r\n             localStorage.clear();\r\n              // document.location = '/';\r\n           }\r\n             this.displayDeleteConfirm=false;\r\n         \r\n             \r\n             this.displayInfoDialog=true;\r\n             this.InfoModalHeader='Error '+error.response.status;\r\n             this.InfoModalMessage=error.response.data.Message;\r\n             this.isLoading = false; \r\n\r\n         }\r\n\r\n\r\n            // after every request \r\n            // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n    \r\n    },\r\n\r\n\r\n    downloadClick(){\r\n     // alert(\"Download clicked\")\r\n    } ,\r\n\r\n     refreshData(){\r\n      \r\n        //get selected dates\r\n        if (this.fromDate.length!=10){\r\n            this.fromDate = this.format_date(this.fromDate,'DD/MM/YYYY');\r\n        }\r\n\r\n        if (this.toDate.length!=10){\r\n            this.toDate = this.format_date(this.toDate,'DD/MM/YYYY');\r\n        }\r\n     \r\n      // and go for trips\r\n      this.getSnags();\r\n      this.getCompanies();\r\n    },\r\n    onSwiper(){},\r\n   \r\n          \r\n    format_date_to_full(aDate,aTime){\r\n   \r\n        //excpected input: 14/04/2023\r\n       var year = aDate.substring(6, 10);\r\n       var month = aDate.substring(3, 5);\r\n       var day = aDate.substring(0, 2);\r\n\r\n        return year + '-' + month + '-' +day + \" \"+aTime;\r\n      \r\n\r\n    },\r\n\r\n    format_date_to_full_time(aDate){\r\n   \r\n   //excpected input: 14/04/2023 14:33\r\n  var year = aDate.substring(6, 10);\r\n  var month = aDate.substring(3, 5);\r\n  var day = aDate.substring(0, 2);\r\n  var hour = aDate.substring(11, 13);\r\n  var min = aDate.substring(14, 16);\r\n  var sec = '00';\r\n\r\n   return year + '-' + month + '-' +day + ' '+hour+':'+min+':'+sec;\r\n \r\n\r\n},\r\n\r\n    format_date_to_dateTime(aDate){\r\n   \r\n    //expected input: 2023-10-24 14:30:43\r\n    var year = aDate.substring(0, 4);\r\n    var month = aDate.substring(5, 7);\r\n    var day = aDate.substring(8, 10);\r\n    var hour = aDate.substring(11, 13);\r\n    var min = aDate.substring(14, 16);\r\n\r\n    //return year + '-' + month + '-' +day + \" \"+hour+\":\"+min;\r\n    return day + '/' + month + '/' +year + \" \"+hour+\":\"+min;\r\n\r\n},\r\n\r\n\r\n  async  getCompanies(){\r\n/*\r\n          const sessionId=this.$store.getters.token;\r\n          const baseUrl = this._rootRestUrl;\r\n          \r\n          let formData = JSON.stringify({ sessionId: sessionId });\r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n\r\n          };\r\n\r\n         await  axios\r\n            .get(baseUrl + \"/api/v1/Company/GetCompanies/?sessionId=\"+sessionId+\"\", formData, config)\r\n            .then((response) => {\r\n               this.allStatuses = response.data;\r\n               \r\n               //sorting function:\r\n                const sortArrayOfObjects = (arr, propertyName, order = 'ascending') => {\r\n                      const sortedArr = arr.sort((a, b) => {\r\n                        if (a[propertyName] < b[propertyName]) {\r\n                          return -1;\r\n                        }\r\n                        if (a[propertyName] > b[propertyName]) {\r\n                          return 1;\r\n                        }\r\n                        return 0;\r\n                      });\r\n\r\n                      if (order === 'descending') {\r\n                        return sortedArr.reverse();\r\n                      }\r\n\r\n                      return sortedArr;\r\n                    };\r\n               //-- end of sorting function\r\n\r\n               \r\n               \r\n               this.allStatuses = sortArrayOfObjects( this.allStatuses, \"name\");\r\n            \r\n             // console.table(this.allStatuses)\r\n                        \r\n            })           \r\n             .catch(function (error) {\r\n                // handle error\r\n                if(error.response.status=='401') { //not authorized, token expires\r\n                 localStorage.clear();\r\n                 // document.location = '/';\r\n              }\r\n                console.table(error);\r\n             });\r\n            \r\n           // after every request \r\n            // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n    \r\n            */\r\n\r\n\r\n    },\r\n\r\n    extendTime(){\r\n      this.$emit('extend-session'); // extend time when session timeout popup will be shown\r\n    },\r\n\r\n    async getSnags(all){\r\n     \r\n //get selected dates\r\n\r\n        if (this.fromDate.length!=10){\r\n            this.fromDate = this.format_date(this.fromDate,'DD/MM/YYYY');\r\n        }\r\n\r\n        if (this.toDate.length!=10){\r\n            this.toDate = this.format_date(this.toDate,'DD/MM/YYYY');\r\n        }\r\n\r\n\r\n          //save dates to local storage so it remebeer when swithing tabs:\r\n          localStorage.setItem('fromDate',this.fromDate);\r\n          localStorage.setItem('toDate',this.toDate);\r\n\r\n          this.panelClass = 'closedPanel';   \r\n          this.isLoading = true;  \r\n         \r\n       /*   const fromDateFull = this.format_date_to_full(this.fromDate, '00:00:00');\r\n            const toDateFull = this.format_date_to_full(this.toDate,'23:59:59');\r\n          */\r\n\r\n        /*  \r\n          const sessionId=this.$store.getters.token;\r\n          const DateFrom=fromDateFull;\r\n          const DateTo= toDateFull;\r\n          const UserId= localStorage.getItem(\"userId\");\r\n          const UserType= this.userType;\r\n         */\r\n        \r\n          const baseUrl = this._rootRestUrl;\r\n          \r\n       \r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n\r\n          };\r\n\r\n\r\n          /*  captionFilter:'',\r\n              codeFilter:'', \r\n          */\r\n          var addOnFilter = [] \r\n          var isthisLike = false;\r\n\r\n          \r\n          if(this.captionFilter != '' && this.captionFilter != null){\r\n         \r\n              if(this.captionFilterMode=='contains'){\r\n                isthisLike = true;\r\n              }else{\r\n                isthisLike = false;\r\n              }\r\n              addOnFilter.push({name:'caption', value:this.captionFilter,isLike:isthisLike});\r\n           }\r\n\r\n\r\n\r\n            if(this.codeFilter != '' & this.codeFilter != null){\r\n              if(this.codeFilterMode=='contains'){\r\n                isthisLike = true;\r\n              }else{\r\n                isthisLike = false;\r\n              }\r\n           addOnFilter.push( {name:'code', value:this.codeFilter,isLike:isthisLike});\r\n            }\r\n\r\n            if(this.statusFilter != '' & this.statusFilter != null){\r\n              if(this.statusFilterMode=='contains'){\r\n                isthisLike = true;\r\n              }else{\r\n                isthisLike = false;\r\n                  }\r\n          addOnFilter.push( {name:'status', value:this.statusFilter,isLike:isthisLike});\r\n            }\r\n\r\n            if(this.worksPackageFilter != '' & this.worksPackageFilter != null){\r\n           \r\n              if(this.worksPackageFilterMode=='contains'){\r\n                isthisLike = true;\r\n              }else{\r\n                isthisLike = false;\r\n              }\r\n\r\n          addOnFilter.push({name:'worksPackage', value:this.worksPackageFilter,isLike:isthisLike});\r\n\r\n           }\r\n\r\n           if(this.areaFilter != '' & this.areaFilter != null){\r\n            if(this.areaFilterMode=='contains'){\r\n                isthisLike = true;\r\n              }else{\r\n                isthisLike = false;\r\n              }\r\n             addOnFilter.push({name:'area', value:this.areaFilter,isthisLike:true});\r\n            }\r\n\r\n           if(this.closedByFilter != '' & this.closedByFilter != null){\r\n            if(this.closedByFilterMode=='contains'){\r\n                isthisLike = true;\r\n              }else{\r\n                isthisLike = false;\r\n              }\r\n            addOnFilter.push({name:'closedBy', value:this.closedByFilter,isLike:isthisLike});\r\n            }\r\n\r\n            \r\n           if(this.actionByFilter != '' & this.actionByFilter != null){\r\n            if(this.actionByFilterMode=='contains'){\r\n                isthisLike = true;\r\n              }else{\r\n                isthisLike = false;\r\n              }\r\n            addOnFilter.push({name:'assignedTo', value:this.actionByFilter,isLike:isthisLike});\r\n            }\r\n\r\n        \r\n            if(this.createdByFilter != '' & this.createdByFilter != null){\r\n              if(this.createdByFilterMode=='contains'){\r\n                isthisLike = true;\r\n              }else{\r\n                isthisLike = false;\r\n              }\r\n           addOnFilter.push({name:'createdBy', value:this.createdByFilter,isLike:isthisLike});\r\n           \r\n         }\r\n\r\n\r\n\r\n         \r\n         //    addOnFilter += ']';  \r\n\r\n            if(this.searchQuery!=''){\r\n              addOnFilter += '&searchQuery='+this.searchQuery;\r\n            }\r\n\r\n      /*     this.createdByFilter = event.filters.createdBy.matchMode;\r\n          this.actionByFilter = event.filters.assignedTo.matchMode;\r\n          this.closedByFilter = event.filters.closedBy.matchMode;*/\r\n          \r\n           \r\n            var pageA='';\r\n              if(all=='all'){\r\n                pageA=0;\r\n                this.pageSize=this.totalRecords\r\n                this.pageSize=100;\r\n              }else{\r\n                 pageA=+this.snagsPage;\r\n                 this.pageSize=100;\r\n              }\r\n         \r\n\r\n              let formData = { pageSize:this.pageSize,pageNumber:pageA,searchQuery:this.searchQuery,filters:addOnFilter}; \r\n\r\n        \r\n              formData=JSON.stringify(formData);\r\n   \r\n              try{\r\n\r\n           await axios\r\n            .post(baseUrl + \"/api/Snags/GetAllSnags/\" , formData, config)\r\n            .then((response) => {\r\n              \r\n                        \r\n         \r\n              this.allSnags = response.data.snags;\r\n              this.totalRecords = response.data.totalRecords;\r\n           \r\n\r\n\r\n              if(this.totalRecords == 0){\r\n                this.showTable = false;\r\n              }else{\r\n                this.showTable = true;\r\n              }\r\n             \r\n              this.isLoading = false;  \r\n              this.reorganizePagination();\r\n              \r\n              // if we don't have loookups for statuses then get it :)\r\n              if(this.allStatuses.length==0){\r\n                this.getStatuses();\r\n              }\r\n           })\r\n           \r\n           $('#sidebar').click();\r\n\r\n          } catch (error) {\r\n           \r\n           if(error.response.status == 401){\r\n             alert(\"Your session is expired! Please login\");\r\n             localStorage.clear();\r\n              // document.location = '/';\r\n           }\r\n             \r\n             this.displayInfoDialog=true;\r\n             this.InfoModalHeader='Error '+error.response.status;\r\n             this.InfoModalMessage=error.response.data.Message;\r\n             this.isLoading = false; \r\n\r\n         }\r\n\r\n            \r\n            // after every request \r\n            // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n\r\n      },\r\n\r\n    async  getStatuses(){\r\n         const baseUrl = this._rootRestUrl;\r\n          \r\n          let formData = JSON.stringify({ category: 'SNSTAT' });\r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n\r\n          };\r\n\r\n          try{\r\n           await axios\r\n            .get(baseUrl + \"/api/LookUps/GetStatusLookUps?category=\"+'SNSTAT'  , formData, config)\r\n            .then((response) => {\r\n             \r\n              this.allStatuses = response.data;\r\n            \r\n\r\n                var jsonString = JSON.stringify(response.data)\r\n                jsonString = jsonString.replaceAll('\"shortCode\"', '\"value\"');\r\n                jsonString = jsonString.replaceAll('\"description\"', '\"name\"');\r\n\r\n                this.allStatuses =  $.parseJSON(jsonString)\r\n\r\n                   ;    \r\n           })\r\n            \r\n          } catch (error) {\r\n           \r\n           if(error.response.status == 401){\r\n             alert(\"Your session is expired! Please login\");\r\n             localStorage.clear();\r\n              // document.location = '/';\r\n           }\r\n             \r\n             this.displayInfoDialog=true;\r\n             this.InfoModalHeader='Error '+error.response.status;\r\n             this.InfoModalMessage=error.response.data.Message;\r\n             this.isLoading = false; \r\n\r\n         }\r\n\r\n            \r\n            // after every request \r\n            // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n\r\n          \r\n        \r\n      },\r\n\r\n\r\n     \r\n\r\n      onRowClick(event) {\r\n      \r\n       \r\n                \r\n          this.ClickedRowId = event.data.key; // key for update\r\n          this.editSnagDate = this.format_date(event.data.date,'DD/MM/YYYY');\r\n          this.editSnagTitle = event.data.caption;\r\n          this.editSnagStatus = event.data.status;\r\n          this.editSnagCode = event.data.code;\r\n         \r\n\r\n\r\n      // alert( event.data.id);\r\n      \r\n        \r\n        \r\n          $('.hiddenFields').each(function() {\r\n            \r\n            $(this).closest('tr').removeClass('highlight');\r\n           });\r\n          \r\n          $('.hiddenFields').each(function() {\r\n           \r\n            if($(this).attr('data')==event.data.key){\r\n              $(this).closest('tr').addClass('highlight');\r\n             }\r\n          \r\n          });\r\n\r\n      },\r\n   \r\n      onRowSelect(event) {\r\n      \r\n\r\n        if(event.originalEvent.target.tagName != 'I' && event.originalEvent.target.tagName !='SPAN'){\r\n          //if not clicked on I element (icon ) then open panel\r\n         \r\n        \r\n          $('.hiddenFields').each(function() {\r\n            \r\n            $(this).closest('tr').removeClass('highlight');\r\n           });\r\n          \r\n          $('.hiddenFields').each(function() {\r\n           \r\n            if($(this).attr('data')==event.data.key){\r\n              $(this).closest('tr').addClass('highlight');\r\n             }\r\n          \r\n          });\r\n\r\n         \r\n     \r\n\r\n        //open panel      \r\n        this.getDocumentDetails();\r\n\r\n               \r\n        if(this.snagImages.length > 0){\r\n            this.picturesTabShow= false;  \r\n            this.activeTab=0;  \r\n         } else{\r\n           this.picturesTabShow= true;    \r\n        }\r\n\r\n\r\n        }\r\n      },\r\n      openDialogAddPhoto(){\r\n        this.displayUploadModal = true;\r\n      },\r\n\r\n      customUploader(event){\r\n          var timestamp = Date.now();\r\n          var selectedFile = event.files[0]  ; // for now only one file\r\n        //  this.convertToBinary(selectedFile, selectedFile.name);   \r\n         this.uploadImage(selectedFile,timestamp+'_'+selectedFile.name);  \r\n          \r\n      },\r\n\r\n  /*     async convertToBinary(file, filename) {\r\n         \r\n            const reader = new FileReader();\r\n            reader.readAsBinaryString(file);\r\n            await new Promise(resolve => reader.onload = () => resolve());\r\n            \r\n            var binary = reader.result\r\n           \r\n            this.uploadImage(binary,filename);\r\n          \r\n            \r\n       },*/\r\n\r\n\r\n       async uploadImage(binary,filename){\r\n          //FINNALY !! it works :)\r\n           //  alert(binary )\r\n          //   alert(filename);\r\n            this.isLoading = true; \r\n             \r\n            const sessionId=this.$store.getters.token;\r\n            const baseUrl =this._rootRestUrl;\r\n            const tripId =this.ClickedRowId;\r\n          \r\n\r\n\r\n\r\n         //   let formData = JSON.stringify({ Key: '', 'TripId':tripId, FileName:filename, SessionId: sessionId,File: binary });\r\n            let config = {\r\n              headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n              },\r\n\r\n            };\r\n\r\n                     \r\n            var formData = new FormData();\r\n            formData.append(\"Key\", \"\");\r\n            formData.append(\"Caption\", filename);\r\n            formData.append(\"SnagRef\", tripId);\r\n            formData.append(\"ProjectRef\",this.ProjectRef);\r\n            formData.append(\"SessionId\", sessionId);\r\n            formData.append(\"File\", binary);\r\n\r\n\r\n              \r\n     \r\n      try {  \r\n       await axios\r\n            .post(baseUrl + \"/api/Attachments/InsertPhoto\", formData, config)\r\n            .then(() => {\r\n              \r\n             \r\n              this.displayInfoDialog= true;\r\n              this.InfoModalHeader='Info';\r\n              this.InfoModalMessage='Photo is added';\r\n              this.isLoading = false; \r\n              this.displayUploadModal = false;\r\n              // console.table(response);\r\n              this.getSnags();\r\n         \r\n           })   ;        \r\n      \r\n          } catch (error) {\r\n         // alert(error)\r\n\r\n                  this.displayInfoDialog= true;\r\n                    this.InfoModalHeader='Alert!';\r\n                    this.InfoModalMessage='Error occured while uploading photo. Photo is not added!';\r\n                    this.isLoading = false; \r\n                    this.displayUploadModal = false;\r\n                    this.getSnags();\r\n\r\n          }    \r\n\r\n             \r\n           // after every request \r\n           // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n\r\n\r\n       },\r\n       setInvoiceDateToday(){\r\n         this.invoiceDate =  moment().format('DD/MM/YYYY HH:mm');\r\n         this.sendInvoiceDialog=true;\r\n       },\r\n\r\n       invoiceThisTrip(){\r\n\r\n        var AllOk = true;\r\n\r\n          if(this.invoiceDate == ''){\r\n            this.invoiceDateOK = false;\r\n            AllOk = false;\r\n          }else{this.invoiceDateOK = true;}\r\n\r\n          if(AllOk == true){\r\n              this.markAsInvoicedInDatabase();\r\n          }\r\n\r\n       },\r\n\r\n\r\n       invoiceMultipleTrips(){\r\n\r\n       \r\n\r\n        var AllOk = true;\r\n\r\n          if(this.invoiceDate == ''){\r\n            this.invoiceDateOK = false;\r\n            AllOk = false;\r\n          }else{this.invoiceDateOK = true;}\r\n\r\n          if(AllOk == true){\r\n              this.markAsInvoicedMultipleInDatabase();\r\n          }\r\n\r\n        },\r\n\r\n\r\n\r\n    async  markAsInvoicedInDatabase(){\r\n         // this.panelClass = 'closedPanel';   \r\n          this.isLoading = true;  \r\n         \r\n          var Date = this.format_date(moment(this.invoiceDate,'DD/MM/YYYY HH:mm'),'YYYY-MM-DD HH:mm:ss');\r\n\r\n          const sessionId=this.$store.getters.token;\r\n          const baseUrl = this._rootRestUrl;\r\n                  \r\n          let formData = JSON.stringify({tripKey:this.ClickedRowId,sessionId:sessionId,date:Date,isInvoiceSent:true});\r\n       \r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            }};\r\n         \r\n        try{\r\n         await  axios\r\n            .post(baseUrl + \"/api/v1/Trip/MarkInvoiceAsSent\",formData, config )\r\n            .then(() => {\r\n                                \r\n               this.getSnags();\r\n               this.getCompanies();\r\n               this.displayInfoDialog= true;\r\n               this.sendInvoiceDialog=false;\r\n               this.InfoModalHeader='Info';\r\n               this.InfoModalMessage='Trip is marked as invoiced';\r\n               this.isLoading = false; \r\n\r\n               this.checkedIDs = [];\r\n               this.AllPageMarked = false;\r\n           })\r\n            \r\n             \r\n          } catch (error) {\r\n          \r\n              if(error.response.status == 401){\r\n                alert(\"Your session is expired! Please login\");\r\n                localStorage.clear();\r\n                  // document.location = '/';\r\n              }\r\n                this.sendInvoiceDialog=false;  \r\n\r\n                this.displayInfoDialog=true;\r\n                this.InfoModalHeader='Error '+error.response.status;\r\n                this.InfoModalMessage=error.response.data.Message;\r\n                this.isLoading = false; \r\n\r\n          }\r\n\r\n\r\n\r\n            // after every request \r\n            // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n        \r\n       },\r\n\r\n\r\n    async   markAsInvoicedMultipleInDatabase(){\r\n\r\n         // this.panelClass = 'closedPanel';   \r\n         this.isLoading = true;  \r\n         \r\n         var Date = this.format_date(moment(this.invoiceDate,'DD/MM/YYYY HH:mm'),'YYYY-MM-DD HH:mm:ss');\r\n\r\n         const sessionId=this.$store.getters.token;\r\n         const baseUrl = this._rootRestUrl;\r\n                 \r\n        \r\n   \r\n              \r\n          var jsonString='{\"sessionId\": \"'+sessionId+'\",';\r\n             jsonString+='     \"invoices\": [ ';\r\n               \r\n             var a=0;\r\n             var collectIDsToRemoveChecked = [];\r\n             this.selectedIDsForInvoicing.forEach((aID) => {\r\n              collectIDsToRemoveChecked.push(aID);\r\n              a++\r\n              jsonString+='{';\r\n                jsonString+='\"tripKey\": \"'+aID+'\",';\r\n                jsonString+='\"isInvoiceSent\": true,';\r\n                jsonString+='\"invoiceDate\": \"'+Date+'\"';\r\n              jsonString+='}';\r\n              if(a<this.selectedIDsForInvoicing.length){\r\n                jsonString+=',';\r\n              }\r\n\r\n            });    \r\n              \r\n\r\n             jsonString+='  ]';\r\n           jsonString+='  }';\r\n\r\n       \r\n\r\n        let formData = jsonString;\r\n\r\n\r\n         let config = {\r\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n           }};\r\n        \r\n      try{\r\n          await  axios\r\n           .post(baseUrl + \"/api/v1/Trip/MarkInvoicesAsSent\",formData, config )\r\n           .then(() => {\r\n                               \r\n                this.getSnags();\r\n                this.getCompanies();\r\n                this.displayInfoDialog= true;\r\n                this.sendMultipleInvoiceDialog=false;\r\n                this.showInvoiceSelectedButton=false;\r\n                this.InfoModalHeader='Info';\r\n                this.InfoModalMessage='Trips are marked as invoiced';\r\n                this.isLoading = false; \r\n\r\n                //remove checkbox\r\n                collectIDsToRemoveChecked.forEach((aID) => { \r\n                this.checkedIDs[aID]=false;\r\n            \r\n                //remove ID from array\r\n                const index = this.selectedIDsForInvoicing.indexOf(aID);\r\n                this.selectedIDsForInvoicing.splice(index, 1);     \r\n                \r\n                });\r\n\r\n\r\n            })\r\n           \r\n        \r\n             \r\n            } catch (error) {\r\n          \r\n          if(error.response.status == 401){\r\n            alert(\"Your session is expired! Please login\");\r\n            localStorage.clear();\r\n              // document.location = '/';\r\n          }\r\n             this.sendInvoiceDialog=false;\r\n\r\n            this.displayInfoDialog=true;\r\n            this.InfoModalHeader='Error '+error.response.status;\r\n            this.InfoModalMessage=error.response.data.Message;\r\n            this.isLoading = false; \r\n\r\n      }\r\n\r\n\r\n\r\n            this.AllPageMarked=false;\r\n            this.AllMarked=false;\r\n\r\n          // after every request \r\n          // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n\r\n       },\r\n\r\n\r\n      async unInvoiceThisTrip(){\r\n          \r\n        //this.panelClass = 'closedPanel';   \r\n          this.isLoading = true;  \r\n                          \r\n          const sessionId=this.$store.getters.token;\r\n          const baseUrl = this._rootRestUrl;\r\n                  \r\n          let formData = JSON.stringify({tripKey:this.ClickedRowId,sessionId:sessionId,date:'',isInvoiceSent:false});\r\n       \r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            }};\r\n         \r\n      try{\r\n          await axios\r\n            .post(baseUrl + \"/api/v1/Trip/MarkInvoiceAsSent\",formData, config )\r\n            .then(() => {\r\n                                \r\n               this.getSnags();\r\n               this.getCompanies();\r\n               this.editSnagDialog=false;\r\n               this.displayInfoDialog= true;\r\n               this.displayUnInvoiceConfirm=false;\r\n               this.InfoModalHeader='Info';\r\n               this.InfoModalMessage='Trip is marked as invoiced';\r\n               this.isLoading = false; \r\n           })\r\n            \r\n            \r\n            } catch (error) {\r\n          \r\n              if(error.response.status == 401){\r\n                alert(\"Your session is expired! Please login\");\r\n                localStorage.clear();\r\n                  // document.location = '/';\r\n              }\r\n             this.displayUnInvoiceConfirm=false;\r\n\r\n            this.displayInfoDialog=true;\r\n            this.InfoModalHeader='Error '+error.response.status;\r\n            this.InfoModalMessage=error.response.data.Message;\r\n            this.isLoading = false; \r\n\r\n           }\r\n\r\n\r\n           // after every request \r\n           // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n\r\n       },\r\n        \r\n          \r\n      async getDocumentDetails(){\r\n         \r\n      \r\n        \r\n        const baseUrl = this._rootRestUrl;\r\n          \r\n          let formData = JSON.stringify({ key: this.ClickedRowId });\r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n\r\n          };\r\n\r\n            this.isLoading = true;\r\n\r\n         try{   \r\n           await axios\r\n            .get(baseUrl + \"/api/Snags/GetSnagDetails/?snagKey=\"+this.ClickedRowId , formData, config)\r\n            .then((response) => {\r\n             \r\n              this.snagDetails = response.data;\r\n              this.isLoading = false;  \r\n              this.fillPanelData();\r\n             \r\n           })\r\n            \r\n          } catch (error) {\r\n                \r\n              if(error.response.status == 401){\r\n                alert(\"Your session is expired! Please login\");\r\n                localStorage.clear();\r\n                  // document.location = '/';\r\n              }\r\n             \r\n\r\n              this.displayInfoDialog=true;\r\n              this.InfoModalHeader='Error '+error.response.status;\r\n              this.InfoModalMessage=error.response.data.Message;\r\n              this.isLoading = false; \r\n\r\n            }  \r\n\r\n            \r\n            // after every request \r\n            // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n\r\n            this.isLoading = false;\r\n\r\n       \r\n\r\n       \r\n         \r\n       },\r\n\r\n       fillPanelData(){\r\n\r\n        this.snagDetailsData  = this.snagDetails['snag'];\r\n       \r\n        //picturesTabShow\r\n       \r\n        var snagPictures = this.snagDetails['snagAttachments'];\r\n\r\n   \r\n        if (snagPictures.length >0){\r\n        this.snagNotes =  this.snagDetailsData['notes'];\r\n     \r\n\r\n         this.snagImages = snagPictures;\r\n          \r\n          this.picturesTabShow = true;\r\n        }else{\r\n          this.picturesTabShow = false;\r\n          this.snagImages = [];\r\n        }\r\n\r\n         \r\n       \r\n        this.openPanel();\r\n\r\n\r\n       },\r\n\r\n\r\n\r\n      openPanel(){\r\n        this.panelClass = 'openedPanel';\r\n      },\r\n\r\n      closePanel(){\r\n        this.panelClass = 'closedPanel';\r\n      },\r\n\r\n    \r\n      initFilters1() {\r\n            this.filters1 = {\r\n               'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n               'userFullName':{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n               'from': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n               'to': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n               'companyName': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n               'cargoName': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n               'distance': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'sumVAT': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]},\r\n               'comments': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}\r\n               \r\n            }\r\n        },\r\n\r\n        clearFilter1() {\r\n            this.initFilters1();\r\n        },\r\n\r\n      getFiles() {\r\n      /*  $(\"#datatable\").DataTable({\r\n              lengthMenu: [\r\n                [25, 50, 100, -1],\r\n                [25, 50, 100, \"All\"],\r\n              ],\r\n              pageLength: 25,\r\n            });*/\r\n    },\r\n    format_date(value, pattern) {\r\n      if (value) {\r\n        return moment(String(value)).format(pattern);\r\n      }\r\n    },\r\n    showloader(event){\r\n        this.isLoading = event;\r\n       \r\n    },\r\n   async downloadReport(){\r\n     \r\n         this.getSnags();\r\n         this.isLoading = true;  \r\n         \r\n\r\n        //get selected dates\r\n        if (this.fromDate.length!=10){\r\n            this.fromDate = this.format_date(this.fromDate,'DD/MM/YYYY');\r\n        }\r\n\r\n        if (this.toDate.length!=10){\r\n            this.toDate = this.format_date(this.toDate,'DD/MM/YYYY');\r\n        }\r\n\r\n         const fromDateFull = this.format_date_to_full(this.fromDate, '00:00:00');\r\n         const toDateFull = this.format_date_to_full(this.toDate,'23:59:59');\r\n\r\n         const sessionId=this.$store.getters.token;\r\n         const DateFrom=fromDateFull;\r\n         const DateTo= toDateFull;\r\n  \r\n         const baseUrl = this._rootRestUrl;\r\n        \r\n        \r\n        // const locale = this.userLocale;\r\n           const locale = 'EN'; //for now, locale set to EN so that CSV is comma separated\r\n     \r\n      \r\n\r\n        let formData = JSON.stringify({ sessionId: sessionId, DateFrom:DateFrom , DateTo:DateTo , locale:locale});\r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n\r\n          };\r\n\r\n        try{  \r\n         await  axios\r\n            .get(baseUrl + \"/api/v1/Trip/CSV/Trips/?sessionId=\"+sessionId+\"&DateFrom=\"+DateFrom+\"&DateTo=\"+DateTo+\"&locale=\"+locale, formData, config)\r\n            .then((response) => {\r\n               this.downloadedReport = response.data;\r\n               \r\n\r\n               var fileName = 'Report '+this.format_date(DateFrom, 'YYYY-MM-DD')+\" - \"+this.format_date(DateTo, 'YYYY-MM-DD');\r\n               this.downloadCSV(this.downloadedReport, fileName);\r\n              \r\n            })           \r\n           \r\n\r\n          } catch (error) {\r\n          \r\n                if(error.response.status == 401){\r\n                  alert(\"Your session is expired! Please login\");\r\n                  localStorage.clear();\r\n                    // document.location = '/';\r\n                }\r\n              this.displayUnInvoiceConfirm=false;\r\n\r\n              this.displayInfoDialog=true;\r\n              this.InfoModalHeader='Error '+error.response.status;\r\n              this.InfoModalMessage=error.response.data.Message;\r\n              this.isLoading = false; \r\n\r\n       }   \r\n\r\n          // after every request \r\n          // this.$store.dispatch('autoLogin');  // go to AUTOLOGIN to extend \"local\" token valication\r\n            this.extendTime(); // extend timeout to show expire session dialog\r\n            // ---------------------\r\n\r\n\r\n    },\r\n\r\n    \r\n\r\n    correctData(){\r\n\r\n        this.allSnags.forEach((value,index) => {\r\n\r\n\r\n\r\n        const entries = Object.entries(value);\r\n\r\n        entries.forEach((value2) => {\r\n              \r\n              if(value2[0]=='invSent'){\r\n                  var newType = '';\r\n                  if(value2[1]==true){\r\n                      newType=\"Yes\";\r\n                  }else{\r\n                      newType=\"No\";\r\n                  }\r\n                  this.allSnags[index]['invSent']=newType;\r\n              }\r\n            \r\n          \r\n\r\n\r\n\r\n              \r\n        });\r\n\r\n\r\n        });\r\n\r\n     },\r\n\r\n    downloadCSV(csvString,filename){\r\n          \r\n          const element = document.createElement(\"a\");\r\n\r\n          element.setAttribute(\"href\", `data:text/csv;charset=utf-8,${csvString}`);\r\n          element.setAttribute(\"download\", filename);\r\n          element.style.display = \"none\";\r\n\r\n          document.body.appendChild(element);\r\n          element.click();\r\n          document.body.removeChild(element);\r\n          this.isLoading = false; \r\n    },\r\n\r\n    downloadPDF(){\r\n      \r\n        $('#downloadPDFlink').remove(); \r\n          \r\n        /*\tconst element = document.createElement(\"a\");\r\n\r\n          element.setAttribute(\"href\", `data:application/pdf;base64,${base64PDF}`);\r\n          element.setAttribute(\"download\", filename);\r\n          element.style.display = \"none\";\r\n\r\n          document.body.appendChild(element);\r\n          element.click();\r\n          document.body.removeChild(element);\r\n          this.isLoading = false; */\r\n\r\n      /*  const aHref =  `data:application/pdf;base64,${base64PDF}`;\r\n\r\n\r\n          $('body').append('<a id=\"downloadPDFlink\" download=\"'+filename+'\" href=\"'+aHref+'\">LINK</a>');\r\n          $('#downloadPDFlink').click();*/\r\n\r\n\r\n          \r\n\r\n    },\r\n\r\n    formatMoney(number, decPlaces, decSep, thouSep, symbol) {\r\n        decPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces,\r\n        decSep = typeof decSep === \"undefined\" ? \".\" : decSep;\r\n        thouSep = typeof thouSep === \"undefined\" ? \",\" : thouSep;\r\n        var sign = number < 0 ? \"-\" : \"\";\r\n        var i = String(parseInt(number = Math.abs(Number(number) || 0).toFixed(decPlaces)));\r\n        var j = (j = i.length) > 3 ? j % 3 : 0;\r\n\r\n        return symbol + \" \" + sign +\r\n            (j ? i.substr(0, j) + thouSep : \"\") +\r\n            i.substr(j).replace(/(\\decSep{3})(?=\\decSep)/g, \"$1\" + thouSep) +\r\n            (decPlaces ? decSep + Math.abs(number - i).toFixed(decPlaces).slice(2) : \"\");\r\n    },\r\n\r\n\r\n    showContextMenu: function (e) {\r\n       \r\n          //show right click menu only for admin\r\n          if(this.userType.toUpperCase()=='ADMIN'){\r\n            \r\n              e.preventDefault();\r\n              var menu = document.getElementById(\"div-context-menu\");\r\n              menu.style.left = e.pageX + 'px'\r\n              menu.style.top = (e.pageY - 50) + 'px'\r\n              menu.style.display = 'block'\r\n              menu.cid = e.target.id.replace(/title-/,\"\")\r\n            \r\n          }  \r\n\r\n        }\r\n        , hideContextMenu: function () {\r\n           document.getElementById(\"div-context-menu\").style.display = \"none\"\r\n        },\r\n\r\n        onClick: function () {\r\n         this.hideContextMenu();\r\n        },\r\n\r\n        onPage(event){\r\n\r\n          this.snagsPage = ((event['originalEvent']['page'])*1) + 1;\r\n          this.getSnags();\r\n        \r\n        \r\n        },\r\n\r\n        onSearchInput(){\r\n        \r\n          if(this.searchQuery.length==0){\r\n            this.first=0;\r\n            this.snagsPage = 1;\r\n            this.getSnags();\r\n          }\r\n        },\r\n\r\n        onSearch(){\r\n\r\n          if(this.searchQuery.length > 2 || this.searchQuery.length==0){\r\n            this.first=0;\r\n            this.snagsPage = 1;\r\n            this.getSnags();\r\n          }\r\n        },\r\n\r\n        onFilter(event){\r\n \r\n          console.table(event.filters)\r\n              \r\n          this.captionFilter = event.filters.caption.constraints[0].value;\r\n          this.codeFilter = event.filters.code.constraints[0].value;\r\n          this.statusFilter = event.filters.status.constraints[0].value;\r\n          this.worksPackageFilter = event.filters.worksPackage.constraints[0].value;\r\n          this.areaFilter = event.filters.area.constraints[0].value;\r\n          this.createdByFilter = event.filters.createdBy.constraints[0].value;\r\n          this.actionByFilter = event.filters.assignedTo.constraints[0].value;\r\n          this.closedByFilter = event.filters.closedBy.constraints[0].value;\r\n\r\n          alert(event.filters.createdBy.constraints[0].value)\r\n                \r\n              //if clear filter\r\n           \r\n              this.filterCleared ++; \r\n              \r\n             \r\n                  if (this.filters.caption.value === null){\r\n                    \r\n                        this.filters.caption.constraints[0].value=null;\r\n                   //     event.filters.caption.constraints[0].value = null;\r\n                        this.filters.caption.value=null;\r\n                  }\r\n\r\n                  if (this.filters.code.value === null){\r\n                        this.filters.code.constraints[0].value=null;\r\n                      //  event.filters.code.constraints[0].value = null;\r\n                        this.filters.code.value=null;\r\n                  }\r\n\r\n                  if (this.filters.status.value === null){\r\n                        this.filters.status.constraints[0].value=null;\r\n                     //   event.filters.status.constraints[0].value = null;\r\n                        this.filters.status.value=null;\r\n                  }\r\n\r\n                  if (this.filters.worksPackage.value === null){\r\n                        this.filters.worksPackage.constraints[0].value=null;\r\n                  //      event.filters.worksPackage.constraints[0].value = null;\r\n                        this.filters.worksPackage.value=null;\r\n                  }\r\n\r\n                  if (this.filters.area.value === null){\r\n                        this.filters.area.constraints[0].value=null;\r\n                  //      event.filters.area.constraints[0].value = null;\r\n                        this.filters.area.value=null;\r\n                  }\r\n\r\n                  if (this.filters.createdBy.value === null){\r\n                        this.filters.createdBy.constraints[0].value=null;\r\n                     //   event.filters.createdBy.constraints[0].value = null;\r\n                        this.filters.createdBy.value=null;\r\n                  }\r\n\r\n                  if (this.filters.assignedTo.value === null){\r\n                        this.filters.assignedTo.constraints[0].value=null;\r\n                  //      event.filters.assignedTo.constraints[0].value = null;\r\n                        this.filters.assignedTo.value=null;\r\n                  }\r\n\r\n                  if (this.filters.closedBy.value === null){\r\n                        this.filters.closedBy.constraints[0].value=null;\r\n                   //     event.filters.closedBy.constraints[0].value = null;\r\n                        this.filters.closedBy.value=null;\r\n                  }\r\n      \r\n             \r\n\r\n       /*   if (event.filters.code.value === null){this.codeFilter=null;}\r\n          if (event.filters.status.value === null){this.statusFilter=null;}\r\n          if (event.filters.worksPackage.value === null){this.worksPackageFilter=null;}\r\n          if (event.filters.area.value === null){this.areaFilter=null;}\r\n          if (event.filters.createdBy.value === null){this.createdByFilter=null;}\r\n          if (event.filters.assignedTo.value === null){this.actionByFilter=null;}\r\n          if (event.filters.closedBy.value === null){this.closedByFilter=null;}*/\r\n        \r\n      \r\n          //\"how\" we filter\r\n          this.captionFilterMode = event.filters.caption.constraints[0].matchMode;\r\n          this.codeFilterMode = event.filters.code.constraints[0].matchMode;\r\n          this.statusFilterMode = event.filters.status.constraints[0].matchMode;\r\n          this.worksPackageFilterMode= event.filters.worksPackage.constraints[0].matchMode;\r\n          this.areaFilterMode = event.filters.area.constraints[0].matchMode;\r\n          this.createdByFilterMode = event.filters.createdBy.constraints[0].matchMode;\r\n          this.actionByFilterMode = event.filters.assignedTo.constraints[0].matchMode;\r\n          this.closedByFilterMode = event.filters.closedBy.constraints[0].matchMode;\r\n          \r\n          //if something filtered then filter icon should be yellow\r\n          if(this.captionFilter != null){$('.captionColumn .pi-filter-icon').addClass('yellowIcon')}else{$('.captionColumn .pi-filter-icon').removeClass('yellowIcon')}\r\n          if(this.codeFilter != null){$('.codeColumn .pi-filter-icon').addClass('yellowIcon')}else{$('.codeColumn .pi-filter-icon').removeClass('yellowIcon')}\r\n          if(this.statusFilter != null){$('.statusColumn .pi-filter-icon').addClass('yellowIcon')}else{$('.statusColumn .pi-filter-icon').removeClass('yellowIcon')}\r\n          if(this.worksPackageFilter != null){$('.workspackageColumn .pi-filter-icon').addClass('yellowIcon')}else{$('.workspackageColumn .pi-filter-icon').removeClass('yellowIcon')}\r\n          if(this.areaFilter != null){$('.areaColumn .pi-filter-icon').addClass('yellowIcon')}else{$('.areaColumn .pi-filter-icon').removeClass('yellowIcon')}\r\n          if(this.createdByFilter != null){$('.openedColumn .pi-filter-icon').addClass('yellowIcon')}else{$('.openedColumn .pi-filter-icon').removeClass('yellowIcon')}\r\n          if(this.actionByFilter != null){$('.assignedToColumn .pi-filter-icon').addClass('yellowIcon')}else{$('.assignedToColumn .pi-filter-icon').removeClass('yellowIcon')}\r\n          if(this.closedByFilter != null){$('.closedByColumn .pi-filter-icon').addClass('yellowIcon')}else{$('.closedByColumn .pi-filter-icon').removeClass('yellowIcon')}\r\n        \r\n       //   alert(this.captionFilter)\r\n         \r\n          this.getSnags();\r\n                  \r\n          \r\n         \r\n\r\n\r\n        },\r\n\r\n\r\n       async SelectAllPage(){\r\n          var whatToDo = '';\r\n         \r\n         /// collect all ID of all checkboxes:\r\n                var collectIDsToAdd = [];\r\n                this.selectedIDsForInvoicing = [];\r\n                $('.p-checkbox').each(function() {\r\n                  var id=$(this).parent().attr('data');\r\n                   collectIDsToAdd.push(id);\r\n                   \r\n                 });\r\n            //--------------\r\n\r\n          if(this.AllPageMarked == false){\r\n               whatToDo = 'mark';\r\n               this.showInvoiceSelectedButton=true;\r\n          }else{\r\n               whatToDo = 'unmark';\r\n               this.showInvoiceSelectedButton=false;\r\n          }\r\n\r\n\r\n           if(whatToDo=='mark'){ \r\n                collectIDsToAdd.forEach((aID) => { \r\n                this.selectedIDsForInvoicing.push(aID);\r\n                this.checkedIDs[aID]=true;\r\n                this.AllPageMarked = true;\r\n            });\r\n           }else{\r\n             this.checkedIDs = [];\r\n             this.AllPageMarked = false;\r\n           }\r\n\r\n          \r\n\r\n        },\r\n\r\n        SelectAll(whatToDo){\r\n       \r\n                  \r\n          if(whatToDo=='select'){\r\n            if(this.AllMarked == false){\r\n               this.showInvoiceSelectedButton=true;\r\n             \r\n            }else{\r\n                 this.showInvoiceSelectedButton=false;\r\n           }\r\n            }else{\r\n              //just unselect all\r\n              this.selectedIDsForInvoicing = [];\r\n              this.checkedIDs = [];\r\n              this.AllMarked = false;\r\n              this.AllPageMarked = false;\r\n              this.showInvoiceSelectedButton=false;\r\n            }\r\n\r\n            \r\n            this.selectedIDsForInvoicing = [];\r\n             \r\n            \r\n\r\n              if(whatToDo=='select'){ \r\n                  this.AllMarked = true;\r\n                  this.allSnags.forEach((value) => {\r\n\r\n                    const entries = Object.entries(value);\r\n\r\n                    var  rememberID= '';\r\n                    entries.forEach((value2) => {\r\n                        \r\n                        if(value2[0]=='id'){\r\n                          rememberID = value2[1];\r\n                        }\r\n                      \r\n                        if(value2[0]=='invSent'){\r\n                            // var newType = '';\r\n                           \r\n                            if(value2[1]=='No'){\r\n                                //\r\n                                  this.selectedIDsForInvoicing.push(rememberID);\r\n                                  this.checkedIDs[rememberID]=true;\r\n                              }\r\n                            \r\n                          }\r\n                        \r\n                          \r\n                      });\r\n\r\n\r\n                    });\r\n\r\n             }\r\n\r\n              if(this.selectedIDsForInvoicing.lenght>0){\r\n                this.showInvoiceSelectedButton=true;\r\n              }\r\n                        \r\n        },\r\n\r\n  },\r\n  \r\n  mounted() {\r\n   \r\n    //on load I must clear all filters !!\r\n   /* this.filters.caption.value = null;\r\n    this.filters.code.value = null;\r\n    this.filters.status.value = null;\r\n    this.filters.worksPackage.value = null;\r\n    this.filters.area.value = null;\r\n    this.filters.createdBy.value = null;\r\n    this.filters.assignedTo.value = null;\r\n    this.filters.closedBy.value = null;*/\r\n\r\n\r\n\r\n\r\n  \r\n    //on click anywhere close context menu \r\n    var el=document.getElementById('app');\r\n    el.addEventListener('click', this.onClick);\r\n\r\n\r\n    // get dates from localstorage if exists so it remembers when changing tabs:\r\n    // if not exists then means user just enters the application so give me this week dates\r\n\r\n        if(localStorage.getItem('fromDate')!=undefined){\r\n            this.fromDate = localStorage.getItem('fromDate');\r\n        }else{\r\n            this.fromDate = moment().startOf('isoWeek').format('DD/MM/YYYY');\r\n        }\r\n      \r\n        if(localStorage.getItem('toDate')!=undefined){\r\n            this.toDate = localStorage.getItem('toDate');\r\n        }else{\r\n            this.toDate  = moment().endOf('isoWeek').format('DD/MM/YYYY');\r\n        }\r\n    \r\n     //  ------ end default dates  -------- / \r\n       \r\n\r\n\r\n     this.$emit(\"showSearchbar\", true);\r\n\r\n   /* if (this.$store.getters.getUserType==null || this.$store.getters.getUserLocale == null){\r\n        //we don't have usertype so user is not properly login, logout him and try again\r\n        localStorage.clear();\r\n        // document.location = '/';\r\n    }*/\r\n    \r\n     this.getSnags();\r\n     this.getCompanies();\r\n     this.moveSearchBoxToTop();\r\n\r\n\r\n   /*   if(this.$store.getters.getUserType != null){\r\n        this.userType = (this.$store.getters.getUserType).toUpperCase();\r\n      }else{\r\n        this.userType = 'USER';\r\n      }*/\r\n\r\n  /*    if(this.$store.getters.getUserLocale != null){\r\n        this.userLocale = (this.$store.getters.getUserLocale).toUpperCase();\r\n      }else{\r\n        this.userLocale = 'EN';\r\n      }*/\r\n\r\n\r\n     \r\n     $(\"#editIconsPanel\").detach().appendTo('.p-tabview-nav-content');\r\n     \r\n  },\r\n\r\n   created() {\r\n    \r\n    this.aSystemDoc = localStorage.getItem(\"docType\");\r\n    this.initFilters1();\r\n    this.loading1 = false;\r\n   \r\n    },\r\n\r\n  \r\n\r\n\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n@import \"datatables.net-dt\";\r\n@import \"primevue/resources/themes/bootstrap4-light-blue/theme.css\"; /*theme*/\r\n@import \"primevue/resources/primevue.min.css   \"; /*core css*/\r\n@import \"primeicons/primeicons.css   \"; /*icons*/\r\n\r\n/* ---------------------- */\r\n\r\n.p-datatable {\r\n  font-size: 0.9rem;\r\n}\r\n/*.p-datatable tbody tr:nth-child(even) {\r\n  background: #f4f4f4;\r\n}\r\n.p-datatable tbody tr:nth-child(odd) {\r\n  background: #fff;\r\n}*/\r\n\r\n.p-datatable tbody tr:hover {\r\n  background: #f1f1ff !important;\r\n  cursor: pointer;\r\n}\r\n\r\n.p-datatable thead tr th {\r\n  border-bottom: 1px solid #ddd !important;\r\n  font-size: 14px;\r\n  padding: 6px !important;\r\n  padding-top: 6px !important;\r\n  padding-bottom: 6px !important;\r\n  /*background: #fca !important;*/\r\n}\r\n.p-datatable tbody tr td {\r\n  border-bottom: 1px solid #ddd !important;\r\n  font-size: 14px;\r\n  padding: 6px !important;\r\n}\r\n.p-sortable-column-icon {\r\n  font-size: 12px;\r\n}\r\n\r\n.p-datatable-footer {\r\n  padding: 2px !important;\r\n  padding-top: 6px !important;\r\n  padding-bottom: 6px !important;\r\n  background: #fca !important;\r\n}\r\n\r\n\r\n.pi-filter-icon, .pi-filter-slash {\r\n  font-size:12px\r\n  }\r\n  .p-column-filter-menu{margin-left:0}\r\n\r\n  .p-column-filter-menu-button{margin-left:0.1rem;}\r\n.p-column-filter-menu-button-active{width:24px;height:24px}\r\n\r\n/* ---------------------- */\r\n\r\n\r\n        .p-progressbar {\r\n            height: .5rem;\r\n            background-color: #D8DADC;\r\n        }\r\n        .p-progressbar .p-progressbar-value {\r\n            background-color: #607D8B;\r\n        }\r\n\r\n        .p-datepicker {\r\n            min-width: 25rem;\r\n        }\r\n\r\n        .p-datepicker td {\r\n            font-weight: 400;\r\n        }\r\n\r\n        .p-datatable.p-datatable-customers .p-datatable-header {\r\n            padding: 1rem;\r\n            text-align: left;\r\n            font-size: 1.5rem;\r\n        }\r\n\r\n        .p-datatable.p-datatable-customers .p-paginator {\r\n            padding: 1rem;\r\n        }\r\n\r\n        .p-datatable.p-datatable-customers .p-datatable-thead > tr > th {\r\n            text-align: left;\r\n        }\r\n\r\n        .p-datatable.p-datatable-customers .p-datatable-tbody > tr > td {\r\n            cursor: auto;\r\n            border-bottom:none !important;\r\n        }\r\n\r\n        .p-datatable.p-datatable-customers .p-dropdown-label:not(.p-placeholder) {\r\n            text-transform: uppercase;\r\n        }\r\n\r\n        .p-button{background:rgb(142, 53, 46)  !important;border-color: rgb(142, 53, 46)  !important;}\r\n        .p-button:hover{background:#263a4f !important;border-color: #263a4f !important;}\r\n        .p-button.p-button-outlined{color:white;}\r\n        .p-button.p-button-outlined:enabled:hover{color:white;background:#263a4f !important;border-color: #263a4f !important;}        \r\n       \r\n \r\n#searchBox{width:80%}\r\n#searchBox .p-inputtext{width:100%}\r\n\r\n.p-datatable-header #searchBox{display:none}\r\n.dateDisplayInput{height:34px;margin-left:6px}\r\n\r\n.p-datatable .p-sortable-column .p-sortable-column-icon{color:white}\r\n.p-datatable .p-sortable-column:not(.p-highlight):hover .p-sortable-column-icon{color:white}\r\n.p-datatable .p-sortable-column.p-highlight:hover .p-sortable-column-icon{color:white}\r\n.p-button.p-button-text, .p-button.p-button-text:enabled:hover{color:white}\r\n.p-datatable .p-sortable-column.p-highlight .p-sortable-column-icon{color:white}\r\n\r\n#refreshButton{margin-left:6px;height:34px;}\r\n#newSnagButton, #downloadReport, #invoiceSelected, .donwloadPDFbutton{margin-left:0;height:34px;}\r\n.p-datatable .p-datatable-header {background: none;border:none}\r\n\r\n.p-datatable .p-datatable-tbody > tr > td {\r\n  text-align: left;\r\n  border: 1px solid #dee2e6;\r\n  border-width: 0 0 0 0;\r\n  padding: 1rem 1rem;\r\n}\r\n.p-datatable-header{padding-left:0 !important;padding-right:0 !important;padding-top:7px !important}\r\n.p-paginator-current{border:0 !important;color:#333 !important;font-size: 0.9rem;}\r\n.p-paginator-bottom{padding-left:0 !important;padding-right:0 !important}\r\n\r\n.actionsColumns{display:table-cell !important;text-align: right !important ;width:50px !important}\r\nth.actionsColumns{display:flex !important}\r\n\r\n/*.p-column-header-content{display:block}*/\r\n\r\n.p-paginator .p-paginator-pages .p-paginator-page.p-highlight {\r\n  background: rgb(142, 53, 46) ;\r\n  border-color: rgb(142, 53, 46) ;\r\n  color: #ffffff;\r\n}\r\n\r\n.p-paginator .p-paginator-pages .p-paginator-page {\r\n  background-color: #ffffff;\r\n  border: 1px solid #dee2e6;\r\n  color: #333;\r\n  min-width: 2.357rem;\r\n  height: 2.357rem;\r\n  margin: 0 0 0 -1px;\r\n  transition: box-shadow 0.15s;\r\n  border-radius: 0;\r\n}\r\n\r\n.p-disabled{color:#ccc !important;}\r\n\r\n\r\n\r\n.RightSidepanel {\r\nheight:100%; \r\nwidth:0;\r\nmax-width:100%;\r\nposition: fixed; \r\nz-index: 1; \r\ntop: 0;\r\nright: 0px;\r\nbackground-color: #f5f5f5; \r\noverflow-x: hidden; \r\npadding-top: 15px; \r\npadding-right:0px;\r\npadding-left:0px;\r\ntransition: 0.5s;\r\nbox-shadow: 0px 20px 7px #cccccc;\r\nz-index:11;\r\nposition:absolute;\r\ndisplay:block;\r\n}\r\n.RightSidepanel .closebtn {\r\nz-index:1000;\r\nposition: absolute;\r\ntop: 0;\r\nright: 35px;\r\nfont-size: 36px;\r\nmargin-left: 50px;\r\ncolor:#343434;\r\ntext-decoration:none;\r\n}\r\n.closedPanel{width:0px}\r\n.openedPanel{width:750px;}\r\n\r\n.cursorHand {cursor:pointer}\r\n.closePanelButton{margin-right:20px}\r\n\r\n#detailsTable {font-size:0.9rem;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";}\r\n#detailsTable td {text-align: left;}\r\n\r\n.p-tabview .p-tabview-panels{\r\n  background-color: unset;\r\n  border-left:1px solid #ccc;\r\n  border-bottom:1px solid #ccc;\r\n  border-right:1px solid #ccc;\r\n  border-top:none !important;\r\n}\r\n\r\n.p-tabview .p-tabview-nav li.p-highlight .p-tabview-nav-link {border:1px solid #ccc;}\r\n\r\n.p-tabview .p-tabview-nav li{margin-right:3px}\r\n\r\n.p-tabview .p-tabview-nav li.p-highlight .p-tabview-nav-link {\r\n  border: 1px solid #ccc;\r\n  top: 1px;\r\n}\r\n.p-tabview .p-tabview-nav li.p-highlight .p-tabview-nav-link {\r\n  background: #f5f5f5;\r\n}\r\n\r\n.p-tabview .p-tabview-nav li .p-tabview-nav-link:not(.p-disabled):focus {box-shadow: none;}\r\n\r\n.p-datatable .p-datatable-tbody > tr:focus {\r\n  outline: none;\r\n \r\n}\r\n\r\n#editIconsPanel{\r\n  top: 0px;\r\n  position: absolute;\r\n  right: 0px;\r\n}\r\n.actionIcons{cursor: pointer;}\r\n.RightSidepanel .row {margin:0}\r\n\r\n.swiperSlideHolder img {cursor: zoom-in;}\r\n\r\n.highlight td {background:#ccf}\r\n\r\n\r\n.insertFormRow .p-inputtext{padding:3px}\r\n.insertFormRow {padding:6px;}\r\n.insertFormRow {background:#fff}\r\n.insertFormRow.even {background:#f3f3f3}\r\n\r\n.p-dialog-content{height:unset;overflow-y: auto;}\r\n.redButton{background-color:red !important; border:red !important}\r\n.redButton:hover{background-color:darkred !important}\r\n#formContainer{font-size:0.9rem !important;}\r\n\r\n.p-inline-message.p-inline-message-error {padding:4px;margin-left:4px;}\r\n\r\n.p-datepicker table td {\r\n  padding: 1px;\r\n}\r\n\r\n.p-datepicker table td > span {width:1.6rem;height:1.6rem}\r\n.p-datepicker {width:300px !important;box-shadow: 0px 6px 12px #ddd  !important}\r\n.p-dropdown-panel{max-width:400px !important;box-shadow: 0px 6px 12px #ddd  !important}\r\n.p-dropdown-panel .p-dropdown-header{padding:0.4rem;}\r\n.p-dropdown-panel .p-dropdown-items .p-dropdown-item{padding:0.1rem 0.7rem;}\r\n.p-dropdown-filter{padding:3px}\r\n.p-dropdown,.p-inputtext{width:230px}\r\n\r\n.addphotobutton{margin-left: 0;  height: 34px;}\r\n\r\n.p-fileupload-filename{width:100% !important}\r\n.p-paginator-rpp-options{width:100px}\r\n.p-button-label{text-align:left;}\r\n\r\n.invoiceButtonHolder{\r\n  display: inline-block;\r\n  margin-right: 140px;\r\n  position: relative;\r\n  \r\n}\r\n.invoiceButton{\r\n  padding: 3px;\r\n  margin-top: 4px;\r\n}\r\n\r\n.p-column-filter-menu-button:focus {\r\n  outline: 0 none;\r\n  outline-offset: 0;\r\n  box-shadow: 0 0 5px 0.01rem rgba(255, 255, 200, 0.9);\r\n}\r\n\r\n.p-datatable .p-sortable-column:focus {\r\n  box-shadow: unset;\r\n  outline: 0 none;\r\n}\r\n\r\n.p-column-filter-menu-button.p-column-filter-menu-button-active, .p-column-filter-menu-button.p-column-filter-menu-button-active:hover {\r\n  background: #d2d2d2;\r\n  color: #000 !important;\r\n}\r\n\r\n/*.p-column-filter-menu-button {\r\n  background: #eee;\r\n  color: #000 !important;\r\n}\r\n\r\n.p-column-filter-menu-button:hover {\r\n  background: #ddd !important;\r\n  color: #000 !important;\r\n}*/\r\n\r\n\r\n.p-button-label{padding-bottom:3px}\r\n\r\n.actionButtonsHolder{\r\n  display: inline-block;\r\n  top: -3px;\r\n  position: relative;\r\n  right: 0;\r\n  padding-bottom: 3px;\r\n}\r\n\r\n.cls-context-menu {\r\n           display:none;\r\n           position:absolute;\r\n        }\r\n        .cls-context-menu ul, #context-menu li {\r\n            list-style:none;\r\n            margin:0; padding:0;\r\n            background:white;\r\n        }       .cls-context-menu {z-index:900;background:white; border:solid 1px #CCC;box-shadow: 1px 3px 10px #CCC;  padding: 4px;}\r\n        .cls-context-menu li {\r\n           border-bottom:solid 1px #CCC;\r\n           display:block;\r\n           /*padding:5px 12px;*/\r\n           text-decoration:none;\r\n           color:#444;\r\n           cursor:pointer;\r\n        }\r\n\r\n        .cls-context-menu li a {padding:5px 12px;display:block;}\r\n\r\n        .cls-context-menu li:hover{\r\n            background: rgb(142, 53, 46)  !important;\r\n            color: #FFF;\r\n        }\r\n        .cls-context-menu li:last-child { border:none; }\r\n\r\n        .context-menu-icon {\r\n          top: 1px;\r\n          position: relative;\r\n          margin-right: 2px;\r\n        }\r\n        .cls-context-menu-item {\r\n          cursor: pointer;\r\n          display:block;\r\n          padding:20px;\r\n          background:#ECECEC;\r\n        }\r\n\r\n        .p-button.p-button-danger.p-button-text, .p-buttonset.p-button-danger > .p-button.p-button-text, .p-splitbutton.p-button-danger > .p-button.p-button-text  {color:white !important;}\r\n\r\n\r\n        .actionButtonsHolderTable{\r\n          display: flex;\r\n          justify-content: right;\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n       .actionButtonsHolderTable div {\r\n        align-self: center;\r\n          \r\n\r\n          \r\n        }\r\n      \r\n    /*    .p-datatable thead tr th.p-filter-column{background:#FFF !important}*/\r\n\r\n\r\n    .closedByName, .closedByDate{display:block;width:100%}\r\n    .closedByDate{font-size:80%;color:#999}\r\n\r\n\r\n    .historyStatus{font-size:90%;color:#000;font-weight:bold}\r\n    .historyDate{font-size:80%;color:#999}\r\n    .historyName{font-size:80%;color:#000;}\r\n    .border-circle {\r\n  border-radius: 50% !important;\r\n}\r\n\r\n.shadow-1 {\r\n  box-shadow: 0 3px 5px #00000005,0 0 2px #0000000d,0 1px 4px #00000014 !important;\r\n}\r\n.h-2rem {\r\n  height: 2rem !important;\r\n}\r\n.w-2rem {\r\n  width: 2rem !important;\r\n}\r\n.flex {\r\n  display: flex !important;\r\n}\r\n\r\n.statusOpen{background:lightblue}\r\n.statusClosed{background:green;}\r\n.statusActioned{background:blue}\r\n.statusReturned{background:orange}\r\n\r\n.statusBlock{\r\n  display:block;\r\n  width:100%;\r\n  padding:4px;\r\n  color:white;\r\n  border-radius:5px;\r\n  font-size:80%\r\n}\r\n\r\n.detailsHeadlineCode{color:#777 !important;font-size:90%;display:block}\r\n.detailsHeadline{color:#000;font-size:120%;display:block}\r\n\r\n.textAreaComments{width:250px;font-size:75%;border: 1px solid #DDD; background: #fafafa;}\r\n\r\n\r\n/*<ul id=\"pv_id_25_list\" class=\"p-dropdown-items\" role=\"listbox\">\r\n  <li id=\"pv_id_25_0\" class=\"p-dropdown-item\" role=\"option\" aria-label=\"Starts with\" aria-selected=\"false\" aria-disabled=\"false\" aria-setsize=\"6\" aria-posinset=\"1\">Starts with</li>\r\n  <li id=\"pv_id_25_1\" class=\"p-dropdown-item p-highlight\" role=\"option\" aria-label=\"Contains\" aria-selected=\"true\" aria-disabled=\"false\" aria-setsize=\"6\" aria-posinset=\"2\">Contains</li>\r\n  <li id=\"pv_id_25_2\" class=\"p-dropdown-item\" role=\"option\" aria-label=\"Not contains\" aria-selected=\"false\" aria-disabled=\"false\" aria-setsize=\"6\" aria-posinset=\"3\">Not contains</li>\r\n  <li id=\"pv_id_25_3\" class=\"p-dropdown-item\" role=\"option\" aria-label=\"Ends with\" aria-selected=\"false\" aria-disabled=\"false\" aria-setsize=\"6\" aria-posinset=\"4\">Ends with</li>\r\n  <li id=\"pv_id_25_4\" class=\"p-dropdown-item\" role=\"option\" aria-label=\"Equals\" aria-selected=\"false\" aria-disabled=\"false\" aria-setsize=\"6\" aria-posinset=\"5\">Equals</li>\r\n  <li id=\"pv_id_25_5\" class=\"p-dropdown-item\" role=\"option\" aria-label=\"Not equals\" aria-selected=\"false\" aria-disabled=\"false\" aria-setsize=\"6\" aria-posinset=\"6\">Not equals</li>\r\n  <!---->\r\n</ul>*/\r\n\r\n.p-dropdown-item[aria-label=\"Starts with\"]{display:none}\r\n/*.p-dropdown-item[aria-label=\"Contains\"]{display:none}*/\r\n.p-dropdown-item[aria-label=\"Not contains\"]{display:none}\r\n.p-dropdown-item[aria-label=\"Ends with\"]{display:none}\r\n.p-dropdown-item[aria-label=\"Not equals\"]{display:none}\r\n\r\n.dataTableHolder{overflow: hidden;}\r\n\r\n.projectNameHeadline{font-weight:bold;color:black}\r\n.documentTypeHeadline{font-size:80%;color:#888}\r\n\r\n.yellowIcon{color:yellow}\r\n.myClearButton{\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 20px;\r\n  width: 150px !important;\r\n  z-index: 9;\r\n  background:red !important;\r\n}\r\n\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}