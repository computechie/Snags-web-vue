{"ast":null,"code":"/*! Select for DataTables 1.4.0-dev\n * 2015-2021 SpryMedia Ltd - datatables.net/license/mit\n */\n\n/**\n * @summary     Select for DataTables\n * @description A collection of API methods, events and buttons for DataTables\n *   that provides selection options of the items in a DataTable\n * @version     1.4.0-dev\n * @file        dataTables.select.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     datatables.net/forums\n * @copyright   Copyright 2015-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net/extensions/select\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable; // Version information for debugger\n\n  DataTable.select = {};\n  DataTable.select.version = '1.4.0-dev';\n\n  DataTable.select.init = function (dt) {\n    var ctx = dt.settings()[0];\n\n    if (ctx._select) {\n      return;\n    }\n\n    var savedSelected = dt.state.loaded();\n\n    var selectAndSave = function (e, settings, data) {\n      if (data === null || data.select === undefined) {\n        return;\n      } // Clear any currently selected rows, before restoring state\n      // None will be selected on first initialisation\n\n\n      if (dt.rows({\n        selected: true\n      }).any()) {\n        dt.rows().deselect();\n      }\n\n      if (data.select.rows !== undefined) {\n        dt.rows(data.select.rows).select();\n      }\n\n      if (dt.columns({\n        selected: true\n      }).any()) {\n        dt.columns().deselect();\n      }\n\n      if (data.select.columns !== undefined) {\n        dt.columns(data.select.columns).select();\n      }\n\n      if (dt.cells({\n        selected: true\n      }).any()) {\n        dt.cells().deselect();\n      }\n\n      if (data.select.cells !== undefined) {\n        for (var i = 0; i < data.select.cells.length; i++) {\n          dt.cell(data.select.cells[i].row, data.select.cells[i].column).select();\n        }\n      }\n\n      dt.state.save();\n    };\n\n    dt.one('init', function () {\n      dt.on('stateSaveParams', function (e, settings, data) {\n        data.select = {};\n        data.select.rows = dt.rows({\n          selected: true\n        }).ids(true).toArray();\n        data.select.columns = dt.columns({\n          selected: true\n        })[0];\n        data.select.cells = dt.cells({\n          selected: true\n        })[0].map(function (coords) {\n          return {\n            row: dt.row(coords.row).id(true),\n            column: coords.column\n          };\n        });\n      });\n      selectAndSave(undefined, undefined, savedSelected);\n      dt.on('stateLoaded stateLoadParams', selectAndSave);\n    });\n    var init = ctx.oInit.select;\n    var defaults = DataTable.defaults.select;\n    var opts = init === undefined ? defaults : init; // Set defaults\n\n    var items = 'row';\n    var style = 'api';\n    var blurable = false;\n    var toggleable = true;\n    var info = true;\n    var selector = 'td, th';\n    var className = 'selected';\n    var setStyle = false;\n    ctx._select = {}; // Initialisation customisations\n\n    if (opts === true) {\n      style = 'os';\n      setStyle = true;\n    } else if (typeof opts === 'string') {\n      style = opts;\n      setStyle = true;\n    } else if ($.isPlainObject(opts)) {\n      if (opts.blurable !== undefined) {\n        blurable = opts.blurable;\n      }\n\n      if (opts.toggleable !== undefined) {\n        toggleable = opts.toggleable;\n      }\n\n      if (opts.info !== undefined) {\n        info = opts.info;\n      }\n\n      if (opts.items !== undefined) {\n        items = opts.items;\n      }\n\n      if (opts.style !== undefined) {\n        style = opts.style;\n        setStyle = true;\n      } else {\n        style = 'os';\n        setStyle = true;\n      }\n\n      if (opts.selector !== undefined) {\n        selector = opts.selector;\n      }\n\n      if (opts.className !== undefined) {\n        className = opts.className;\n      }\n    }\n\n    dt.select.selector(selector);\n    dt.select.items(items);\n    dt.select.style(style);\n    dt.select.blurable(blurable);\n    dt.select.toggleable(toggleable);\n    dt.select.info(info);\n    ctx._select.className = className; // Sort table based on selected rows. Requires Select Datatables extension\n\n    $.fn.dataTable.ext.order['select-checkbox'] = function (settings, col) {\n      return this.api().column(col, {\n        order: 'index'\n      }).nodes().map(function (td) {\n        if (settings._select.items === 'row') {\n          return $(td).parent().hasClass(settings._select.className);\n        } else if (settings._select.items === 'cell') {\n          return $(td).hasClass(settings._select.className);\n        }\n\n        return false;\n      });\n    }; // If the init options haven't enabled select, but there is a selectable\n    // class name, then enable\n\n\n    if (!setStyle && $(dt.table().node()).hasClass('selectable')) {\n      dt.select.style('os');\n    }\n  };\n  /*\n  \n  Select is a collection of API methods, event handlers, event emitters and\n  buttons (for the `Buttons` extension) for DataTables. It provides the following\n  features, with an overview of how they are implemented:\n  \n  ## Selection of rows, columns and cells. Whether an item is selected or not is\n     stored in:\n  \n  * rows: a `_select_selected` property which contains a boolean value of the\n    DataTables' `aoData` object for each row\n  * columns: a `_select_selected` property which contains a boolean value of the\n    DataTables' `aoColumns` object for each column\n  * cells: a `_selected_cells` property which contains an array of boolean values\n    of the `aoData` object for each row. The array is the same length as the\n    columns array, with each element of it representing a cell.\n  \n  This method of using boolean flags allows Select to operate when nodes have not\n  been created for rows / cells (DataTables' defer rendering feature).\n  \n  ## API methods\n  \n  A range of API methods are available for triggering selection and de-selection\n  of rows. Methods are also available to configure the selection events that can\n  be triggered by an end user (such as which items are to be selected). To a large\n  extent, these of API methods *is* Select. It is basically a collection of helper\n  functions that can be used to select items in a DataTable.\n  \n  Configuration of select is held in the object `_select` which is attached to the\n  DataTables settings object on initialisation. Select being available on a table\n  is not optional when Select is loaded, but its default is for selection only to\n  be available via the API - so the end user wouldn't be able to select rows\n  without additional configuration.\n  \n  The `_select` object contains the following properties:\n  \n  ```\n  {\n  \titems:string       - Can be `rows`, `columns` or `cells`. Defines what item \n  \t                     will be selected if the user is allowed to activate row\n  \t                     selection using the mouse.\n  \tstyle:string       - Can be `none`, `single`, `multi` or `os`. Defines the\n  \t                     interaction style when selecting items\n  \tblurable:boolean   - If row selection can be cleared by clicking outside of\n  \t                     the table\n  \ttoggleable:boolean - If row selection can be cancelled by repeated clicking\n  \t                     on the row\n  \tinfo:boolean       - If the selection summary should be shown in the table\n  \t                     information elements\n  }\n  ```\n  \n  In addition to the API methods, Select also extends the DataTables selector\n  options for rows, columns and cells adding a `selected` option to the selector\n  options object, allowing the developer to select only selected items or\n  unselected items.\n  \n  ## Mouse selection of items\n  \n  Clicking on items can be used to select items. This is done by a simple event\n  handler that will select the items using the API methods.\n  \n   */\n\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Local functions\n   */\n\n  /**\n   * Add one or more cells to the selection when shift clicking in OS selection\n   * style cell selection.\n   *\n   * Cell range is more complicated than row and column as we want to select\n   * in the visible grid rather than by index in sequence. For example, if you\n   * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\n   * should also be selected (and not 1-3, 1-4. etc)\n   * \n   * @param  {DataTable.Api} dt   DataTable\n   * @param  {object}        idx  Cell index to select to\n   * @param  {object}        last Cell index to select from\n   * @private\n   */\n\n\n  function cellRange(dt, idx, last) {\n    var indexes;\n    var columnIndexes;\n    var rowIndexes;\n\n    var selectColumns = function (start, end) {\n      if (start > end) {\n        var tmp = end;\n        end = start;\n        start = tmp;\n      }\n\n      var record = false;\n      return dt.columns(':visible').indexes().filter(function (i) {\n        if (i === start) {\n          record = true;\n        }\n\n        if (i === end) {\n          // not else if, as start might === end\n          record = false;\n          return true;\n        }\n\n        return record;\n      });\n    };\n\n    var selectRows = function (start, end) {\n      var indexes = dt.rows({\n        search: 'applied'\n      }).indexes(); // Which comes first - might need to swap\n\n      if (indexes.indexOf(start) > indexes.indexOf(end)) {\n        var tmp = end;\n        end = start;\n        start = tmp;\n      }\n\n      var record = false;\n      return indexes.filter(function (i) {\n        if (i === start) {\n          record = true;\n        }\n\n        if (i === end) {\n          record = false;\n          return true;\n        }\n\n        return record;\n      });\n    };\n\n    if (!dt.cells({\n      selected: true\n    }).any() && !last) {\n      // select from the top left cell to this one\n      columnIndexes = selectColumns(0, idx.column);\n      rowIndexes = selectRows(0, idx.row);\n    } else {\n      // Get column indexes between old and new\n      columnIndexes = selectColumns(last.column, idx.column);\n      rowIndexes = selectRows(last.row, idx.row);\n    }\n\n    indexes = dt.cells(rowIndexes, columnIndexes).flatten();\n\n    if (!dt.cells(idx, {\n      selected: true\n    }).any()) {\n      // Select range\n      dt.cells(indexes).select();\n    } else {\n      // Deselect range\n      dt.cells(indexes).deselect();\n    }\n  }\n  /**\n   * Disable mouse selection by removing the selectors\n   *\n   * @param {DataTable.Api} dt DataTable to remove events from\n   * @private\n   */\n\n\n  function disableMouseSelection(dt) {\n    var ctx = dt.settings()[0];\n    var selector = ctx._select.selector;\n    $(dt.table().container()).off('mousedown.dtSelect', selector).off('mouseup.dtSelect', selector).off('click.dtSelect', selector);\n    $('body').off('click.dtSelect' + _safeId(dt.table().node()));\n  }\n  /**\n   * Attach mouse listeners to the table to allow mouse selection of items\n   *\n   * @param {DataTable.Api} dt DataTable to remove events from\n   * @private\n   */\n\n\n  function enableMouseSelection(dt) {\n    var container = $(dt.table().container());\n    var ctx = dt.settings()[0];\n    var selector = ctx._select.selector;\n    var matchSelection;\n    container.on('mousedown.dtSelect', selector, function (e) {\n      // Disallow text selection for shift clicking on the table so multi\n      // element selection doesn't look terrible!\n      if (e.shiftKey || e.metaKey || e.ctrlKey) {\n        container.css('-moz-user-select', 'none').one('selectstart.dtSelect', selector, function () {\n          return false;\n        });\n      }\n\n      if (window.getSelection) {\n        matchSelection = window.getSelection();\n      }\n    }).on('mouseup.dtSelect', selector, function () {\n      // Allow text selection to occur again, Mozilla style (tested in FF\n      // 35.0.1 - still required)\n      container.css('-moz-user-select', '');\n    }).on('click.dtSelect', selector, function (e) {\n      var items = dt.select.items();\n      var idx; // If text was selected (click and drag), then we shouldn't change\n      // the row's selected state\n\n      if (matchSelection) {\n        var selection = window.getSelection(); // If the element that contains the selection is not in the table, we can ignore it\n        // This can happen if the developer selects text from the click event\n\n        if (!selection.anchorNode || $(selection.anchorNode).closest('table')[0] === dt.table().node()) {\n          if (selection !== matchSelection) {\n            return;\n          }\n        }\n      }\n\n      var ctx = dt.settings()[0];\n      var wrapperClass = dt.settings()[0].oClasses.sWrapper.trim().replace(/ +/g, '.'); // Ignore clicks inside a sub-table\n\n      if ($(e.target).closest('div.' + wrapperClass)[0] != dt.table().container()) {\n        return;\n      }\n\n      var cell = dt.cell($(e.target).closest('td, th')); // Check the cell actually belongs to the host DataTable (so child\n      // rows, etc, are ignored)\n\n      if (!cell.any()) {\n        return;\n      }\n\n      var event = $.Event('user-select.dt');\n      eventTrigger(dt, event, [items, cell, e]);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n\n      var cellIndex = cell.index();\n\n      if (items === 'row') {\n        idx = cellIndex.row;\n        typeSelect(e, dt, ctx, 'row', idx);\n      } else if (items === 'column') {\n        idx = cell.index().column;\n        typeSelect(e, dt, ctx, 'column', idx);\n      } else if (items === 'cell') {\n        idx = cell.index();\n        typeSelect(e, dt, ctx, 'cell', idx);\n      }\n\n      ctx._select_lastCell = cellIndex;\n    }); // Blurable\n\n    $('body').on('click.dtSelect' + _safeId(dt.table().node()), function (e) {\n      if (ctx._select.blurable) {\n        // If the click was inside the DataTables container, don't blur\n        if ($(e.target).parents().filter(dt.table().container()).length) {\n          return;\n        } // Ignore elements which have been removed from the DOM (i.e. paging\n        // buttons)\n\n\n        if ($(e.target).parents('html').length === 0) {\n          return;\n        } // Don't blur in Editor form\n\n\n        if ($(e.target).parents('div.DTE').length) {\n          return;\n        }\n\n        var event = $.Event('select-blur.dt');\n        eventTrigger(dt, event, [e.target, e]);\n\n        if (event.isDefaultPrevented()) {\n          return;\n        }\n\n        clear(ctx, true);\n      }\n    });\n  }\n  /**\n   * Trigger an event on a DataTable\n   *\n   * @param {DataTable.Api} api      DataTable to trigger events on\n   * @param  {boolean}      selected true if selected, false if deselected\n   * @param  {string}       type     Item type acting on\n   * @param  {boolean}      any      Require that there are values before\n   *     triggering\n   * @private\n   */\n\n\n  function eventTrigger(api, type, args, any) {\n    if (any && !api.flatten().length) {\n      return;\n    }\n\n    if (typeof type === 'string') {\n      type = type + '.dt';\n    }\n\n    args.unshift(api);\n    $(api.table().node()).trigger(type, args);\n  }\n  /**\n   * Update the information element of the DataTable showing information about the\n   * items selected. This is done by adding tags to the existing text\n   * \n   * @param {DataTable.Api} api DataTable to update\n   * @private\n   */\n\n\n  function info(api) {\n    var ctx = api.settings()[0];\n\n    if (!ctx._select.info || !ctx.aanFeatures.i) {\n      return;\n    }\n\n    if (api.select.style() === 'api') {\n      return;\n    }\n\n    var rows = api.rows({\n      selected: true\n    }).flatten().length;\n    var columns = api.columns({\n      selected: true\n    }).flatten().length;\n    var cells = api.cells({\n      selected: true\n    }).flatten().length;\n\n    var add = function (el, name, num) {\n      el.append($('<span class=\"select-item\"/>').append(api.i18n('select.' + name + 's', {\n        _: '%d ' + name + 's selected',\n        0: '',\n        1: '1 ' + name + ' selected'\n      }, num)));\n    }; // Internal knowledge of DataTables to loop over all information elements\n\n\n    $.each(ctx.aanFeatures.i, function (i, el) {\n      el = $(el);\n      var output = $('<span class=\"select-info\"/>');\n      add(output, 'row', rows);\n      add(output, 'column', columns);\n      add(output, 'cell', cells);\n      var exisiting = el.children('span.select-info');\n\n      if (exisiting.length) {\n        exisiting.remove();\n      }\n\n      if (output.text() !== '') {\n        el.append(output);\n      }\n    });\n  }\n  /**\n   * Initialisation of a new table. Attach event handlers and callbacks to allow\n   * Select to operate correctly.\n   *\n   * This will occur _after_ the initial DataTables initialisation, although\n   * before Ajax data is rendered, if there is ajax data\n   *\n   * @param  {DataTable.settings} ctx Settings object to operate on\n   * @private\n   */\n\n\n  function init(ctx) {\n    var api = new DataTable.Api(ctx);\n    ctx._select_init = true; // Row callback so that classes can be added to rows and cells if the item\n    // was selected before the element was created. This will happen with the\n    // `deferRender` option enabled.\n    // \n    // This method of attaching to `aoRowCreatedCallback` is a hack until\n    // DataTables has proper events for row manipulation If you are reviewing\n    // this code to create your own plug-ins, please do not do this!\n\n    ctx.aoRowCreatedCallback.push({\n      fn: function (row, data, index) {\n        var i, ien;\n        var d = ctx.aoData[index]; // Row\n\n        if (d._select_selected) {\n          $(row).addClass(ctx._select.className);\n        } // Cells and columns - if separated out, we would need to do two\n        // loops, so it makes sense to combine them into a single one\n\n\n        for (i = 0, ien = ctx.aoColumns.length; i < ien; i++) {\n          if (ctx.aoColumns[i]._select_selected || d._selected_cells && d._selected_cells[i]) {\n            $(d.anCells[i]).addClass(ctx._select.className);\n          }\n        }\n      },\n      sName: 'select-deferRender'\n    }); // On Ajax reload we want to reselect all rows which are currently selected,\n    // if there is an rowId (i.e. a unique value to identify each row with)\n\n    api.on('preXhr.dt.dtSelect', function (e, settings) {\n      if (settings !== api.settings()[0]) {\n        // Not triggered by our DataTable!\n        return;\n      } // note that column selection doesn't need to be cached and then\n      // reselected, as they are already selected\n\n\n      var rows = api.rows({\n        selected: true\n      }).ids(true).filter(function (d) {\n        return d !== undefined;\n      });\n      var cells = api.cells({\n        selected: true\n      }).eq(0).map(function (cellIdx) {\n        var id = api.row(cellIdx.row).id(true);\n        return id ? {\n          row: id,\n          column: cellIdx.column\n        } : undefined;\n      }).filter(function (d) {\n        return d !== undefined;\n      }); // On the next draw, reselect the currently selected items\n\n      api.one('draw.dt.dtSelect', function () {\n        api.rows(rows).select(); // `cells` is not a cell index selector, so it needs a loop\n\n        if (cells.any()) {\n          cells.each(function (id) {\n            api.cells(id.row, id.column).select();\n          });\n        }\n      });\n    }); // Update the table information element with selected item summary\n\n    api.on('draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt', function () {\n      info(api);\n      api.state.save();\n    }); // Clean up and release\n\n    api.on('destroy.dtSelect', function () {\n      api.rows({\n        selected: true\n      }).deselect();\n      disableMouseSelection(api);\n      api.off('.dtSelect');\n      $('body').off('.dtSelect' + _safeId(api.table().node()));\n    });\n  }\n  /**\n   * Add one or more items (rows or columns) to the selection when shift clicking\n   * in OS selection style\n   *\n   * @param  {DataTable.Api} dt   DataTable\n   * @param  {string}        type Row or column range selector\n   * @param  {object}        idx  Item index to select to\n   * @param  {object}        last Item index to select from\n   * @private\n   */\n\n\n  function rowColumnRange(dt, type, idx, last) {\n    // Add a range of rows from the last selected row to this one\n    var indexes = dt[type + 's']({\n      search: 'applied'\n    }).indexes();\n    var idx1 = $.inArray(last, indexes);\n    var idx2 = $.inArray(idx, indexes);\n\n    if (!dt[type + 's']({\n      selected: true\n    }).any() && idx1 === -1) {\n      // select from top to here - slightly odd, but both Windows and Mac OS\n      // do this\n      indexes.splice($.inArray(idx, indexes) + 1, indexes.length);\n    } else {\n      // reverse so we can shift click 'up' as well as down\n      if (idx1 > idx2) {\n        var tmp = idx2;\n        idx2 = idx1;\n        idx1 = tmp;\n      }\n\n      indexes.splice(idx2 + 1, indexes.length);\n      indexes.splice(0, idx1);\n    }\n\n    if (!dt[type](idx, {\n      selected: true\n    }).any()) {\n      // Select range\n      dt[type + 's'](indexes).select();\n    } else {\n      // Deselect range - need to keep the clicked on row selected\n      indexes.splice($.inArray(idx, indexes), 1);\n      dt[type + 's'](indexes).deselect();\n    }\n  }\n  /**\n   * Clear all selected items\n   *\n   * @param  {DataTable.settings} ctx Settings object of the host DataTable\n   * @param  {boolean} [force=false] Force the de-selection to happen, regardless\n   *     of selection style\n   * @private\n   */\n\n\n  function clear(ctx, force) {\n    if (force || ctx._select.style === 'single') {\n      var api = new DataTable.Api(ctx);\n      api.rows({\n        selected: true\n      }).deselect();\n      api.columns({\n        selected: true\n      }).deselect();\n      api.cells({\n        selected: true\n      }).deselect();\n    }\n  }\n  /**\n   * Select items based on the current configuration for style and items.\n   *\n   * @param  {object}             e    Mouse event object\n   * @param  {DataTables.Api}     dt   DataTable\n   * @param  {DataTable.settings} ctx  Settings object of the host DataTable\n   * @param  {string}             type Items to select\n   * @param  {int|object}         idx  Index of the item to select\n   * @private\n   */\n\n\n  function typeSelect(e, dt, ctx, type, idx) {\n    var style = dt.select.style();\n    var toggleable = dt.select.toggleable();\n    var isSelected = dt[type](idx, {\n      selected: true\n    }).any();\n\n    if (isSelected && !toggleable) {\n      return;\n    }\n\n    if (style === 'os') {\n      if (e.ctrlKey || e.metaKey) {\n        // Add or remove from the selection\n        dt[type](idx).select(!isSelected);\n      } else if (e.shiftKey) {\n        if (type === 'cell') {\n          cellRange(dt, idx, ctx._select_lastCell || null);\n        } else {\n          rowColumnRange(dt, type, idx, ctx._select_lastCell ? ctx._select_lastCell[type] : null);\n        }\n      } else {\n        // No cmd or shift click - deselect if selected, or select\n        // this row only\n        var selected = dt[type + 's']({\n          selected: true\n        });\n\n        if (isSelected && selected.flatten().length === 1) {\n          dt[type](idx).deselect();\n        } else {\n          selected.deselect();\n          dt[type](idx).select();\n        }\n      }\n    } else if (style == 'multi+shift') {\n      if (e.shiftKey) {\n        if (type === 'cell') {\n          cellRange(dt, idx, ctx._select_lastCell || null);\n        } else {\n          rowColumnRange(dt, type, idx, ctx._select_lastCell ? ctx._select_lastCell[type] : null);\n        }\n      } else {\n        dt[type](idx).select(!isSelected);\n      }\n    } else {\n      dt[type](idx).select(!isSelected);\n    }\n  }\n\n  function _safeId(node) {\n    return node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');\n  }\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables selectors\n   */\n  // row and column are basically identical just assigned to different properties\n  // and checking a different array, so we can dynamically create the functions to\n  // reduce the code size\n\n\n  $.each([{\n    type: 'row',\n    prop: 'aoData'\n  }, {\n    type: 'column',\n    prop: 'aoColumns'\n  }], function (i, o) {\n    DataTable.ext.selector[o.type].push(function (settings, opts, indexes) {\n      var selected = opts.selected;\n      var data;\n      var out = [];\n\n      if (selected !== true && selected !== false) {\n        return indexes;\n      }\n\n      for (var i = 0, ien = indexes.length; i < ien; i++) {\n        data = settings[o.prop][indexes[i]];\n\n        if (selected === true && data._select_selected === true || selected === false && !data._select_selected) {\n          out.push(indexes[i]);\n        }\n      }\n\n      return out;\n    });\n  });\n  DataTable.ext.selector.cell.push(function (settings, opts, cells) {\n    var selected = opts.selected;\n    var rowData;\n    var out = [];\n\n    if (selected === undefined) {\n      return cells;\n    }\n\n    for (var i = 0, ien = cells.length; i < ien; i++) {\n      rowData = settings.aoData[cells[i].row];\n\n      if (selected === true && rowData._selected_cells && rowData._selected_cells[cells[i].column] === true || selected === false && (!rowData._selected_cells || !rowData._selected_cells[cells[i].column])) {\n        out.push(cells[i]);\n      }\n    }\n\n    return out;\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables API\n   *\n   * For complete documentation, please refer to the docs/api directory or the\n   * DataTables site\n   */\n  // Local variables to improve compression\n\n  var apiRegister = DataTable.Api.register;\n  var apiRegisterPlural = DataTable.Api.registerPlural;\n  apiRegister('select()', function () {\n    return this.iterator('table', function (ctx) {\n      DataTable.select.init(new DataTable.Api(ctx));\n    });\n  });\n  apiRegister('select.blurable()', function (flag) {\n    if (flag === undefined) {\n      return this.context[0]._select.blurable;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.blurable = flag;\n    });\n  });\n  apiRegister('select.toggleable()', function (flag) {\n    if (flag === undefined) {\n      return this.context[0]._select.toggleable;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.toggleable = flag;\n    });\n  });\n  apiRegister('select.info()', function (flag) {\n    if (flag === undefined) {\n      return this.context[0]._select.info;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.info = flag;\n    });\n  });\n  apiRegister('select.items()', function (items) {\n    if (items === undefined) {\n      return this.context[0]._select.items;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.items = items;\n      eventTrigger(new DataTable.Api(ctx), 'selectItems', [items]);\n    });\n  }); // Takes effect from the _next_ selection. None disables future selection, but\n  // does not clear the current selection. Use the `deselect` methods for that\n\n  apiRegister('select.style()', function (style) {\n    if (style === undefined) {\n      return this.context[0]._select.style;\n    }\n\n    return this.iterator('table', function (ctx) {\n      if (!ctx._select) {\n        DataTable.select.init(new DataTable.Api(ctx));\n      }\n\n      if (!ctx._select_init) {\n        init(ctx);\n      }\n\n      ctx._select.style = style; // Add / remove mouse event handlers. They aren't required when only\n      // API selection is available\n\n      var dt = new DataTable.Api(ctx);\n      disableMouseSelection(dt);\n\n      if (style !== 'api') {\n        enableMouseSelection(dt);\n      }\n\n      eventTrigger(new DataTable.Api(ctx), 'selectStyle', [style]);\n    });\n  });\n  apiRegister('select.selector()', function (selector) {\n    if (selector === undefined) {\n      return this.context[0]._select.selector;\n    }\n\n    return this.iterator('table', function (ctx) {\n      disableMouseSelection(new DataTable.Api(ctx));\n      ctx._select.selector = selector;\n\n      if (ctx._select.style !== 'api') {\n        enableMouseSelection(new DataTable.Api(ctx));\n      }\n    });\n  });\n  apiRegisterPlural('rows().select()', 'row().select()', function (select) {\n    var api = this;\n\n    if (select === false) {\n      return this.deselect();\n    }\n\n    this.iterator('row', function (ctx, idx) {\n      clear(ctx);\n      ctx.aoData[idx]._select_selected = true;\n      $(ctx.aoData[idx].nTr).addClass(ctx._select.className);\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'select', ['row', api[i]], true);\n    });\n    return this;\n  });\n  apiRegister('row().selected()', function () {\n    var ctx = this.context[0];\n\n    if (ctx && this.length && ctx.aoData[this[0]] && ctx.aoData[this[0]]._select_selected) {\n      return true;\n    }\n\n    return false;\n  });\n  apiRegisterPlural('columns().select()', 'column().select()', function (select) {\n    var api = this;\n\n    if (select === false) {\n      return this.deselect();\n    }\n\n    this.iterator('column', function (ctx, idx) {\n      clear(ctx);\n      ctx.aoColumns[idx]._select_selected = true;\n      var column = new DataTable.Api(ctx).column(idx);\n      $(column.header()).addClass(ctx._select.className);\n      $(column.footer()).addClass(ctx._select.className);\n      column.nodes().to$().addClass(ctx._select.className);\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'select', ['column', api[i]], true);\n    });\n    return this;\n  });\n  apiRegister('column().selected()', function () {\n    var ctx = this.context[0];\n\n    if (ctx && this.length && ctx.aoColumns[this[0]] && ctx.aoColumns[this[0]]._select_selected) {\n      return true;\n    }\n\n    return false;\n  });\n  apiRegisterPlural('cells().select()', 'cell().select()', function (select) {\n    var api = this;\n\n    if (select === false) {\n      return this.deselect();\n    }\n\n    this.iterator('cell', function (ctx, rowIdx, colIdx) {\n      clear(ctx);\n      var data = ctx.aoData[rowIdx];\n\n      if (data._selected_cells === undefined) {\n        data._selected_cells = [];\n      }\n\n      data._selected_cells[colIdx] = true;\n\n      if (data.anCells) {\n        $(data.anCells[colIdx]).addClass(ctx._select.className);\n      }\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'select', ['cell', api.cells(api[i]).indexes().toArray()], true);\n    });\n    return this;\n  });\n  apiRegister('cell().selected()', function () {\n    var ctx = this.context[0];\n\n    if (ctx && this.length) {\n      var row = ctx.aoData[this[0][0].row];\n\n      if (row && row._selected_cells && row._selected_cells[this[0][0].column]) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n  apiRegisterPlural('rows().deselect()', 'row().deselect()', function () {\n    var api = this;\n    this.iterator('row', function (ctx, idx) {\n      ctx.aoData[idx]._select_selected = false;\n      ctx._select_lastCell = null;\n      $(ctx.aoData[idx].nTr).removeClass(ctx._select.className);\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'deselect', ['row', api[i]], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('columns().deselect()', 'column().deselect()', function () {\n    var api = this;\n    this.iterator('column', function (ctx, idx) {\n      ctx.aoColumns[idx]._select_selected = false;\n      var api = new DataTable.Api(ctx);\n      var column = api.column(idx);\n      $(column.header()).removeClass(ctx._select.className);\n      $(column.footer()).removeClass(ctx._select.className); // Need to loop over each cell, rather than just using\n      // `column().nodes()` as cells which are individually selected should\n      // not have the `selected` class removed from them\n\n      api.cells(null, idx).indexes().each(function (cellIdx) {\n        var data = ctx.aoData[cellIdx.row];\n        var cellSelected = data._selected_cells;\n\n        if (data.anCells && (!cellSelected || !cellSelected[cellIdx.column])) {\n          $(data.anCells[cellIdx.column]).removeClass(ctx._select.className);\n        }\n      });\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'deselect', ['column', api[i]], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('cells().deselect()', 'cell().deselect()', function () {\n    var api = this;\n    this.iterator('cell', function (ctx, rowIdx, colIdx) {\n      var data = ctx.aoData[rowIdx];\n\n      if (data._selected_cells !== undefined) {\n        data._selected_cells[colIdx] = false;\n      } // Remove class only if the cells exist, and the cell is not column\n      // selected, in which case the class should remain (since it is selected\n      // in the column)\n\n\n      if (data.anCells && !ctx.aoColumns[colIdx]._select_selected) {\n        $(data.anCells[colIdx]).removeClass(ctx._select.className);\n      }\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'deselect', ['cell', api[i]], true);\n    });\n    return this;\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Buttons\n   */\n\n  function i18n(label, def) {\n    return function (dt) {\n      return dt.i18n('buttons.' + label, def);\n    };\n  } // Common events with suitable namespaces\n\n\n  function namespacedEvents(config) {\n    var unique = config._eventNamespace;\n    return 'draw.dt.DT' + unique + ' select.dt.DT' + unique + ' deselect.dt.DT' + unique;\n  }\n\n  function enabled(dt, config) {\n    if ($.inArray('rows', config.limitTo) !== -1 && dt.rows({\n      selected: true\n    }).any()) {\n      return true;\n    }\n\n    if ($.inArray('columns', config.limitTo) !== -1 && dt.columns({\n      selected: true\n    }).any()) {\n      return true;\n    }\n\n    if ($.inArray('cells', config.limitTo) !== -1 && dt.cells({\n      selected: true\n    }).any()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  var _buttonNamespace = 0;\n  $.extend(DataTable.ext.buttons, {\n    selected: {\n      text: i18n('selected', 'Selected'),\n      className: 'buttons-selected',\n      limitTo: ['rows', 'columns', 'cells'],\n      init: function (dt, node, config) {\n        var that = this;\n        config._eventNamespace = '.select' + _buttonNamespace++; // .DT namespace listeners are removed by DataTables automatically\n        // on table destroy\n\n        dt.on(namespacedEvents(config), function () {\n          that.enable(enabled(dt, config));\n        });\n        this.disable();\n      },\n      destroy: function (dt, node, config) {\n        dt.off(config._eventNamespace);\n      }\n    },\n    selectedSingle: {\n      text: i18n('selectedSingle', 'Selected single'),\n      className: 'buttons-selected-single',\n      init: function (dt, node, config) {\n        var that = this;\n        config._eventNamespace = '.select' + _buttonNamespace++;\n        dt.on(namespacedEvents(config), function () {\n          var count = dt.rows({\n            selected: true\n          }).flatten().length + dt.columns({\n            selected: true\n          }).flatten().length + dt.cells({\n            selected: true\n          }).flatten().length;\n          that.enable(count === 1);\n        });\n        this.disable();\n      },\n      destroy: function (dt, node, config) {\n        dt.off(config._eventNamespace);\n      }\n    },\n    selectAll: {\n      text: i18n('selectAll', 'Select all'),\n      className: 'buttons-select-all',\n      action: function () {\n        var items = this.select.items();\n        this[items + 's']().select();\n      }\n    },\n    selectNone: {\n      text: i18n('selectNone', 'Deselect all'),\n      className: 'buttons-select-none',\n      action: function () {\n        clear(this.settings()[0], true);\n      },\n      init: function (dt, node, config) {\n        var that = this;\n        config._eventNamespace = '.select' + _buttonNamespace++;\n        dt.on(namespacedEvents(config), function () {\n          var count = dt.rows({\n            selected: true\n          }).flatten().length + dt.columns({\n            selected: true\n          }).flatten().length + dt.cells({\n            selected: true\n          }).flatten().length;\n          that.enable(count > 0);\n        });\n        this.disable();\n      },\n      destroy: function (dt, node, config) {\n        dt.off(config._eventNamespace);\n      }\n    }\n  });\n  $.each(['Row', 'Column', 'Cell'], function (i, item) {\n    var lc = item.toLowerCase();\n    DataTable.ext.buttons['select' + item + 's'] = {\n      text: i18n('select' + item + 's', 'Select ' + lc + 's'),\n      className: 'buttons-select-' + lc + 's',\n      action: function () {\n        this.select.items(lc);\n      },\n      init: function (dt) {\n        var that = this;\n        dt.on('selectItems.dt.DT', function (e, ctx, items) {\n          that.active(items === lc);\n        });\n      }\n    };\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Initialisation\n   */\n  // DataTables creation - check if select has been defined in the options. Note\n  // this required that the table be in the document! If it isn't then something\n  // needs to trigger this method unfortunately. The next major release of\n  // DataTables will rework the events and address this.\n\n  $(document).on('preInit.dt.dtSelect', function (e, ctx) {\n    if (e.namespace !== 'dt') {\n      return;\n    }\n\n    DataTable.select.init(new DataTable.Api(ctx));\n  });\n  return DataTable.select;\n});","map":{"version":3,"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","DataTable","select","version","init","dt","ctx","settings","_select","savedSelected","state","loaded","selectAndSave","e","data","rows","selected","any","deselect","columns","cells","i","length","cell","row","column","save","one","on","ids","toArray","map","coords","id","oInit","defaults","opts","items","style","blurable","toggleable","info","selector","className","setStyle","isPlainObject","ext","order","col","api","nodes","td","parent","hasClass","table","node","cellRange","idx","last","indexes","columnIndexes","rowIndexes","selectColumns","start","end","tmp","record","filter","selectRows","search","indexOf","flatten","disableMouseSelection","container","off","_safeId","enableMouseSelection","matchSelection","shiftKey","metaKey","ctrlKey","css","getSelection","selection","anchorNode","closest","wrapperClass","oClasses","sWrapper","trim","replace","target","event","Event","eventTrigger","isDefaultPrevented","cellIndex","index","typeSelect","_select_lastCell","parents","clear","type","args","unshift","trigger","aanFeatures","add","el","name","num","append","i18n","_","each","output","exisiting","children","remove","text","Api","_select_init","aoRowCreatedCallback","push","ien","d","aoData","_select_selected","addClass","aoColumns","_selected_cells","anCells","sName","eq","cellIdx","rowColumnRange","idx1","inArray","idx2","splice","force","isSelected","prop","o","out","rowData","apiRegister","register","apiRegisterPlural","registerPlural","iterator","flag","context","nTr","header","footer","to$","rowIdx","colIdx","removeClass","cellSelected","label","def","namespacedEvents","config","unique","_eventNamespace","enabled","limitTo","_buttonNamespace","extend","buttons","that","enable","disable","destroy","selectedSingle","count","selectAll","action","selectNone","item","lc","toLowerCase","active","namespace"],"sources":["Q:/Projects/DFM v2/node_modules/datatables.net-select/js/dataTables.select.js"],"sourcesContent":["/*! Select for DataTables 1.4.0-dev\n * 2015-2021 SpryMedia Ltd - datatables.net/license/mit\n */\n\n/**\n * @summary     Select for DataTables\n * @description A collection of API methods, events and buttons for DataTables\n *   that provides selection options of the items in a DataTable\n * @version     1.4.0-dev\n * @file        dataTables.select.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     datatables.net/forums\n * @copyright   Copyright 2015-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net/extensions/select\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n// Version information for debugger\nDataTable.select = {};\n\nDataTable.select.version = '1.4.0-dev';\n\nDataTable.select.init = function ( dt ) {\n\tvar ctx = dt.settings()[0];\n\n\tif (ctx._select) {\n\t\treturn;\n\t}\n\n\tvar savedSelected = dt.state.loaded();\n\n\tvar selectAndSave = function(e, settings, data) {\n\t\tif(data === null || data.select === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clear any currently selected rows, before restoring state\n\t\t// None will be selected on first initialisation\n\t\tif (dt.rows({selected: true}).any()) {\n\t\t\tdt.rows().deselect();\n\t\t}\n\t\tif (data.select.rows !== undefined) {\n\t\t\tdt.rows(data.select.rows).select();\n\t\t}\n\n\t\tif (dt.columns({selected: true}).any()) {\n\t\t\tdt.columns().deselect();\n\t\t}\n\t\tif (data.select.columns !== undefined) {\n\t\t\tdt.columns(data.select.columns).select();\n\t\t}\n\n\t\tif (dt.cells({selected: true}).any()) {\n\t\t\tdt.cells().deselect();\n\t\t}\n\t\tif (data.select.cells !== undefined) {\n\t\t\tfor(var i = 0; i < data.select.cells.length; i++) {\n\t\t\t\tdt.cell(data.select.cells[i].row, data.select.cells[i].column).select();\n\t\t\t}\n\t\t}\n\t\tdt.state.save();\n\t}\n\t\n\tdt.one('init', function() {\n\t\tdt.on('stateSaveParams', function(e, settings, data) {\n\t\t\tdata.select = {};\n\t\t\tdata.select.rows = dt.rows({selected:true}).ids(true).toArray();\n\t\t\tdata.select.columns = dt.columns({selected:true})[0];\n\t\t\tdata.select.cells = dt.cells({selected:true})[0].map(function(coords) {\n\t\t\t\treturn {row: dt.row(coords.row).id(true), column: coords.column}\n\t\t\t});\n\t\t})\n\t\t\n\t\tselectAndSave(undefined, undefined, savedSelected)\n\t\tdt.on('stateLoaded stateLoadParams', selectAndSave)\n\t})\n\n\tvar init = ctx.oInit.select;\n\tvar defaults = DataTable.defaults.select;\n\tvar opts = init === undefined ?\n\t\tdefaults :\n\t\tinit;\n\n\t// Set defaults\n\tvar items = 'row';\n\tvar style = 'api';\n\tvar blurable = false;\n\tvar toggleable = true;\n\tvar info = true;\n\tvar selector = 'td, th';\n\tvar className = 'selected';\n\tvar setStyle = false;\n\n\tctx._select = {};\n\n\t// Initialisation customisations\n\tif ( opts === true ) {\n\t\tstyle = 'os';\n\t\tsetStyle = true;\n\t}\n\telse if ( typeof opts === 'string' ) {\n\t\tstyle = opts;\n\t\tsetStyle = true;\n\t}\n\telse if ( $.isPlainObject( opts ) ) {\n\t\tif ( opts.blurable !== undefined ) {\n\t\t\tblurable = opts.blurable;\n\t\t}\n\t\t\n\t\tif ( opts.toggleable !== undefined ) {\n\t\t\ttoggleable = opts.toggleable;\n\t\t}\n\n\t\tif ( opts.info !== undefined ) {\n\t\t\tinfo = opts.info;\n\t\t}\n\n\t\tif ( opts.items !== undefined ) {\n\t\t\titems = opts.items;\n\t\t}\n\n\t\tif ( opts.style !== undefined ) {\n\t\t\tstyle = opts.style;\n\t\t\tsetStyle = true;\n\t\t}\n\t\telse {\n\t\t\tstyle = 'os';\n\t\t\tsetStyle = true;\n\t\t}\n\n\t\tif ( opts.selector !== undefined ) {\n\t\t\tselector = opts.selector;\n\t\t}\n\n\t\tif ( opts.className !== undefined ) {\n\t\t\tclassName = opts.className;\n\t\t}\n\t}\n\n\tdt.select.selector( selector );\n\tdt.select.items( items );\n\tdt.select.style( style );\n\tdt.select.blurable( blurable );\n\tdt.select.toggleable( toggleable );\n\tdt.select.info( info );\n\tctx._select.className = className;\n\n\n\t// Sort table based on selected rows. Requires Select Datatables extension\n\t$.fn.dataTable.ext.order['select-checkbox'] = function ( settings, col ) {\n\t\treturn this.api().column( col, {order: 'index'} ).nodes().map( function ( td ) {\n\t\t\tif ( settings._select.items === 'row' ) {\n\t\t\t\treturn $( td ).parent().hasClass( settings._select.className );\n\t\t\t} else if ( settings._select.items === 'cell' ) {\n\t\t\t\treturn $( td ).hasClass( settings._select.className );\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t};\n\n\t// If the init options haven't enabled select, but there is a selectable\n\t// class name, then enable\n\tif ( ! setStyle && $( dt.table().node() ).hasClass( 'selectable' ) ) {\n\t\tdt.select.style( 'os' );\n\t}\n};\n\n/*\n\nSelect is a collection of API methods, event handlers, event emitters and\nbuttons (for the `Buttons` extension) for DataTables. It provides the following\nfeatures, with an overview of how they are implemented:\n\n## Selection of rows, columns and cells. Whether an item is selected or not is\n   stored in:\n\n* rows: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoData` object for each row\n* columns: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoColumns` object for each column\n* cells: a `_selected_cells` property which contains an array of boolean values\n  of the `aoData` object for each row. The array is the same length as the\n  columns array, with each element of it representing a cell.\n\nThis method of using boolean flags allows Select to operate when nodes have not\nbeen created for rows / cells (DataTables' defer rendering feature).\n\n## API methods\n\nA range of API methods are available for triggering selection and de-selection\nof rows. Methods are also available to configure the selection events that can\nbe triggered by an end user (such as which items are to be selected). To a large\nextent, these of API methods *is* Select. It is basically a collection of helper\nfunctions that can be used to select items in a DataTable.\n\nConfiguration of select is held in the object `_select` which is attached to the\nDataTables settings object on initialisation. Select being available on a table\nis not optional when Select is loaded, but its default is for selection only to\nbe available via the API - so the end user wouldn't be able to select rows\nwithout additional configuration.\n\nThe `_select` object contains the following properties:\n\n```\n{\n\titems:string       - Can be `rows`, `columns` or `cells`. Defines what item \n\t                     will be selected if the user is allowed to activate row\n\t                     selection using the mouse.\n\tstyle:string       - Can be `none`, `single`, `multi` or `os`. Defines the\n\t                     interaction style when selecting items\n\tblurable:boolean   - If row selection can be cleared by clicking outside of\n\t                     the table\n\ttoggleable:boolean - If row selection can be cancelled by repeated clicking\n\t                     on the row\n\tinfo:boolean       - If the selection summary should be shown in the table\n\t                     information elements\n}\n```\n\nIn addition to the API methods, Select also extends the DataTables selector\noptions for rows, columns and cells adding a `selected` option to the selector\noptions object, allowing the developer to select only selected items or\nunselected items.\n\n## Mouse selection of items\n\nClicking on items can be used to select items. This is done by a simple event\nhandler that will select the items using the API methods.\n\n */\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Local functions\n */\n\n/**\n * Add one or more cells to the selection when shift clicking in OS selection\n * style cell selection.\n *\n * Cell range is more complicated than row and column as we want to select\n * in the visible grid rather than by index in sequence. For example, if you\n * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\n * should also be selected (and not 1-3, 1-4. etc)\n * \n * @param  {DataTable.Api} dt   DataTable\n * @param  {object}        idx  Cell index to select to\n * @param  {object}        last Cell index to select from\n * @private\n */\nfunction cellRange( dt, idx, last )\n{\n\tvar indexes;\n\tvar columnIndexes;\n\tvar rowIndexes;\n\tvar selectColumns = function ( start, end ) {\n\t\tif ( start > end ) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\t\t\n\t\tvar record = false;\n\t\treturn dt.columns( ':visible' ).indexes().filter( function (i) {\n\t\t\tif ( i === start ) {\n\t\t\t\trecord = true;\n\t\t\t}\n\t\t\t\n\t\t\tif ( i === end ) { // not else if, as start might === end\n\t\t\t\trecord = false;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn record;\n\t\t} );\n\t};\n\n\tvar selectRows = function ( start, end ) {\n\t\tvar indexes = dt.rows( { search: 'applied' } ).indexes();\n\n\t\t// Which comes first - might need to swap\n\t\tif ( indexes.indexOf( start ) > indexes.indexOf( end ) ) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\n\t\tvar record = false;\n\t\treturn indexes.filter( function (i) {\n\t\t\tif ( i === start ) {\n\t\t\t\trecord = true;\n\t\t\t}\n\t\t\t\n\t\t\tif ( i === end ) {\n\t\t\t\trecord = false;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn record;\n\t\t} );\n\t};\n\n\tif ( ! dt.cells( { selected: true } ).any() && ! last ) {\n\t\t// select from the top left cell to this one\n\t\tcolumnIndexes = selectColumns( 0, idx.column );\n\t\trowIndexes = selectRows( 0 , idx.row );\n\t}\n\telse {\n\t\t// Get column indexes between old and new\n\t\tcolumnIndexes = selectColumns( last.column, idx.column );\n\t\trowIndexes = selectRows( last.row , idx.row );\n\t}\n\n\tindexes = dt.cells( rowIndexes, columnIndexes ).flatten();\n\n\tif ( ! dt.cells( idx, { selected: true } ).any() ) {\n\t\t// Select range\n\t\tdt.cells( indexes ).select();\n\t}\n\telse {\n\t\t// Deselect range\n\t\tdt.cells( indexes ).deselect();\n\t}\n}\n\n/**\n * Disable mouse selection by removing the selectors\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction disableMouseSelection( dt )\n{\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\n\t$( dt.table().container() )\n\t\t.off( 'mousedown.dtSelect', selector )\n\t\t.off( 'mouseup.dtSelect', selector )\n\t\t.off( 'click.dtSelect', selector );\n\n\t$('body').off( 'click.dtSelect' + _safeId(dt.table().node()) );\n}\n\n/**\n * Attach mouse listeners to the table to allow mouse selection of items\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction enableMouseSelection ( dt )\n{\n\tvar container = $( dt.table().container() );\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\tvar matchSelection;\n\n\tcontainer\n\t\t.on( 'mousedown.dtSelect', selector, function(e) {\n\t\t\t// Disallow text selection for shift clicking on the table so multi\n\t\t\t// element selection doesn't look terrible!\n\t\t\tif ( e.shiftKey || e.metaKey || e.ctrlKey ) {\n\t\t\t\tcontainer\n\t\t\t\t\t.css( '-moz-user-select', 'none' )\n\t\t\t\t\t.one('selectstart.dtSelect', selector, function () {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( window.getSelection ) {\n\t\t\t\tmatchSelection = window.getSelection();\n\t\t\t}\n\t\t} )\n\t\t.on( 'mouseup.dtSelect', selector, function() {\n\t\t\t// Allow text selection to occur again, Mozilla style (tested in FF\n\t\t\t// 35.0.1 - still required)\n\t\t\tcontainer.css( '-moz-user-select', '' );\n\t\t} )\n\t\t.on( 'click.dtSelect', selector, function ( e ) {\n\t\t\tvar items = dt.select.items();\n\t\t\tvar idx;\n\n\t\t\t// If text was selected (click and drag), then we shouldn't change\n\t\t\t// the row's selected state\n\t\t\tif ( matchSelection ) {\n\t\t\t\tvar selection = window.getSelection();\n\n\t\t\t\t// If the element that contains the selection is not in the table, we can ignore it\n\t\t\t\t// This can happen if the developer selects text from the click event\n\t\t\t\tif ( ! selection.anchorNode || $(selection.anchorNode).closest('table')[0] === dt.table().node() ) {\n\t\t\t\t\tif ( selection !== matchSelection ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ctx = dt.settings()[0];\n\t\t\tvar wrapperClass = dt.settings()[0].oClasses.sWrapper.trim().replace(/ +/g, '.');\n\n\t\t\t// Ignore clicks inside a sub-table\n\t\t\tif ( $(e.target).closest('div.'+wrapperClass)[0] != dt.table().container() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cell = dt.cell( $(e.target).closest('td, th') );\n\n\t\t\t// Check the cell actually belongs to the host DataTable (so child\n\t\t\t// rows, etc, are ignored)\n\t\t\tif ( ! cell.any() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar event = $.Event('user-select.dt');\n\t\t\teventTrigger( dt, event, [ items, cell, e ] );\n\n\t\t\tif ( event.isDefaultPrevented() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cellIndex = cell.index();\n\t\t\tif ( items === 'row' ) {\n\t\t\t\tidx = cellIndex.row;\n\t\t\t\ttypeSelect( e, dt, ctx, 'row', idx );\n\t\t\t}\n\t\t\telse if ( items === 'column' ) {\n\t\t\t\tidx = cell.index().column;\n\t\t\t\ttypeSelect( e, dt, ctx, 'column', idx );\n\t\t\t}\n\t\t\telse if ( items === 'cell' ) {\n\t\t\t\tidx = cell.index();\n\t\t\t\ttypeSelect( e, dt, ctx, 'cell', idx );\n\t\t\t}\n\n\t\t\tctx._select_lastCell = cellIndex;\n\t\t} );\n\n\t// Blurable\n\t$('body').on( 'click.dtSelect' + _safeId(dt.table().node()), function ( e ) {\n\t\tif ( ctx._select.blurable ) {\n\t\t\t// If the click was inside the DataTables container, don't blur\n\t\t\tif ( $(e.target).parents().filter( dt.table().container() ).length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore elements which have been removed from the DOM (i.e. paging\n\t\t\t// buttons)\n\t\t\tif ( $(e.target).parents('html').length === 0 ) {\n\t\t\t \treturn;\n\t\t\t}\n\n\t\t\t// Don't blur in Editor form\n\t\t\tif ( $(e.target).parents('div.DTE').length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar event = $.Event('select-blur.dt');\n\t\t\teventTrigger( dt, event, [ e.target, e ] );\n\n\t\t\tif ( event.isDefaultPrevented() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclear( ctx, true );\n\t\t}\n\t} );\n}\n\n/**\n * Trigger an event on a DataTable\n *\n * @param {DataTable.Api} api      DataTable to trigger events on\n * @param  {boolean}      selected true if selected, false if deselected\n * @param  {string}       type     Item type acting on\n * @param  {boolean}      any      Require that there are values before\n *     triggering\n * @private\n */\nfunction eventTrigger ( api, type, args, any )\n{\n\tif ( any && ! api.flatten().length ) {\n\t\treturn;\n\t}\n\n\tif ( typeof type === 'string' ) {\n\t\ttype = type +'.dt';\n\t}\n\n\targs.unshift( api );\n\n\t$(api.table().node()).trigger( type, args );\n}\n\n/**\n * Update the information element of the DataTable showing information about the\n * items selected. This is done by adding tags to the existing text\n * \n * @param {DataTable.Api} api DataTable to update\n * @private\n */\nfunction info ( api )\n{\n\tvar ctx = api.settings()[0];\n\n\tif ( ! ctx._select.info || ! ctx.aanFeatures.i ) {\n\t\treturn;\n\t}\n\n\tif ( api.select.style() === 'api' ) {\n\t\treturn;\n\t}\n\n\tvar rows    = api.rows( { selected: true } ).flatten().length;\n\tvar columns = api.columns( { selected: true } ).flatten().length;\n\tvar cells   = api.cells( { selected: true } ).flatten().length;\n\n\tvar add = function ( el, name, num ) {\n\t\tel.append( $('<span class=\"select-item\"/>').append( api.i18n(\n\t\t\t'select.'+name+'s',\n\t\t\t{ _: '%d '+name+'s selected', 0: '', 1: '1 '+name+' selected' },\n\t\t\tnum\n\t\t) ) );\n\t};\n\n\t// Internal knowledge of DataTables to loop over all information elements\n\t$.each( ctx.aanFeatures.i, function ( i, el ) {\n\t\tel = $(el);\n\n\t\tvar output  = $('<span class=\"select-info\"/>');\n\t\tadd( output, 'row', rows );\n\t\tadd( output, 'column', columns );\n\t\tadd( output, 'cell', cells  );\n\n\t\tvar exisiting = el.children('span.select-info');\n\t\tif ( exisiting.length ) {\n\t\t\texisiting.remove();\n\t\t}\n\n\t\tif ( output.text() !== '' ) {\n\t\t\tel.append( output );\n\t\t}\n\t} );\n}\n\n/**\n * Initialisation of a new table. Attach event handlers and callbacks to allow\n * Select to operate correctly.\n *\n * This will occur _after_ the initial DataTables initialisation, although\n * before Ajax data is rendered, if there is ajax data\n *\n * @param  {DataTable.settings} ctx Settings object to operate on\n * @private\n */\nfunction init ( ctx ) {\n\tvar api = new DataTable.Api( ctx );\n\tctx._select_init = true;\n\n\t// Row callback so that classes can be added to rows and cells if the item\n\t// was selected before the element was created. This will happen with the\n\t// `deferRender` option enabled.\n\t// \n\t// This method of attaching to `aoRowCreatedCallback` is a hack until\n\t// DataTables has proper events for row manipulation If you are reviewing\n\t// this code to create your own plug-ins, please do not do this!\n\tctx.aoRowCreatedCallback.push( {\n\t\tfn: function ( row, data, index ) {\n\t\t\tvar i, ien;\n\t\t\tvar d = ctx.aoData[ index ];\n\n\t\t\t// Row\n\t\t\tif ( d._select_selected ) {\n\t\t\t\t$( row ).addClass( ctx._select.className );\n\t\t\t}\n\n\t\t\t// Cells and columns - if separated out, we would need to do two\n\t\t\t// loops, so it makes sense to combine them into a single one\n\t\t\tfor ( i=0, ien=ctx.aoColumns.length ; i<ien ; i++ ) {\n\t\t\t\tif ( ctx.aoColumns[i]._select_selected || (d._selected_cells && d._selected_cells[i]) ) {\n\t\t\t\t\t$(d.anCells[i]).addClass( ctx._select.className );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsName: 'select-deferRender'\n\t} );\n\n\t// On Ajax reload we want to reselect all rows which are currently selected,\n\t// if there is an rowId (i.e. a unique value to identify each row with)\n\tapi.on( 'preXhr.dt.dtSelect', function (e, settings) {\n\t\tif (settings !== api.settings()[0]) {\n\t\t\t// Not triggered by our DataTable!\n\t\t\treturn;\n\t\t}\n\n\t\t// note that column selection doesn't need to be cached and then\n\t\t// reselected, as they are already selected\n\t\tvar rows = api.rows( { selected: true } ).ids( true ).filter( function ( d ) {\n\t\t\treturn d !== undefined;\n\t\t} );\n\n\t\tvar cells = api.cells( { selected: true } ).eq(0).map( function ( cellIdx ) {\n\t\t\tvar id = api.row( cellIdx.row ).id( true );\n\t\t\treturn id ?\n\t\t\t\t{ row: id, column: cellIdx.column } :\n\t\t\t\tundefined;\n\t\t} ).filter( function ( d ) {\n\t\t\treturn d !== undefined;\n\t\t} );\n\n\t\t// On the next draw, reselect the currently selected items\n\t\tapi.one( 'draw.dt.dtSelect', function () {\n\t\t\tapi.rows( rows ).select();\n\n\t\t\t// `cells` is not a cell index selector, so it needs a loop\n\t\t\tif ( cells.any() ) {\n\t\t\t\tcells.each( function ( id ) {\n\t\t\t\t\tapi.cells( id.row, id.column ).select();\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t} );\n\n\t// Update the table information element with selected item summary\n\tapi.on( 'draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt', function () {\n\t\tinfo( api );\n\t\tapi.state.save();\n\t} );\n\n\t// Clean up and release\n\tapi.on( 'destroy.dtSelect', function () {\n\t\tapi.rows({selected: true}).deselect();\n\n\t\tdisableMouseSelection( api );\n\t\tapi.off( '.dtSelect' );\n\t\t$('body').off('.dtSelect' + _safeId(api.table().node()));\n\t} );\n}\n\n/**\n * Add one or more items (rows or columns) to the selection when shift clicking\n * in OS selection style\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {string}        type Row or column range selector\n * @param  {object}        idx  Item index to select to\n * @param  {object}        last Item index to select from\n * @private\n */\nfunction rowColumnRange( dt, type, idx, last )\n{\n\t// Add a range of rows from the last selected row to this one\n\tvar indexes = dt[type+'s']( { search: 'applied' } ).indexes();\n\tvar idx1 = $.inArray( last, indexes );\n\tvar idx2 = $.inArray( idx, indexes );\n\n\tif ( ! dt[type+'s']( { selected: true } ).any() && idx1 === -1 ) {\n\t\t// select from top to here - slightly odd, but both Windows and Mac OS\n\t\t// do this\n\t\tindexes.splice( $.inArray( idx, indexes )+1, indexes.length );\n\t}\n\telse {\n\t\t// reverse so we can shift click 'up' as well as down\n\t\tif ( idx1 > idx2 ) {\n\t\t\tvar tmp = idx2;\n\t\t\tidx2 = idx1;\n\t\t\tidx1 = tmp;\n\t\t}\n\n\t\tindexes.splice( idx2+1, indexes.length );\n\t\tindexes.splice( 0, idx1 );\n\t}\n\n\tif ( ! dt[type]( idx, { selected: true } ).any() ) {\n\t\t// Select range\n\t\tdt[type+'s']( indexes ).select();\n\t}\n\telse {\n\t\t// Deselect range - need to keep the clicked on row selected\n\t\tindexes.splice( $.inArray( idx, indexes ), 1 );\n\t\tdt[type+'s']( indexes ).deselect();\n\t}\n}\n\n/**\n * Clear all selected items\n *\n * @param  {DataTable.settings} ctx Settings object of the host DataTable\n * @param  {boolean} [force=false] Force the de-selection to happen, regardless\n *     of selection style\n * @private\n */\nfunction clear( ctx, force )\n{\n\tif ( force || ctx._select.style === 'single' ) {\n\t\tvar api = new DataTable.Api( ctx );\n\t\t\n\t\tapi.rows( { selected: true } ).deselect();\n\t\tapi.columns( { selected: true } ).deselect();\n\t\tapi.cells( { selected: true } ).deselect();\n\t}\n}\n\n/**\n * Select items based on the current configuration for style and items.\n *\n * @param  {object}             e    Mouse event object\n * @param  {DataTables.Api}     dt   DataTable\n * @param  {DataTable.settings} ctx  Settings object of the host DataTable\n * @param  {string}             type Items to select\n * @param  {int|object}         idx  Index of the item to select\n * @private\n */\nfunction typeSelect ( e, dt, ctx, type, idx )\n{\n\tvar style = dt.select.style();\n\tvar toggleable = dt.select.toggleable();\n\tvar isSelected = dt[type]( idx, { selected: true } ).any();\n\t\n\tif ( isSelected && ! toggleable ) {\n\t\treturn;\n\t}\n\n\tif ( style === 'os' ) {\n\t\tif ( e.ctrlKey || e.metaKey ) {\n\t\t\t// Add or remove from the selection\n\t\t\tdt[type]( idx ).select( ! isSelected );\n\t\t}\n\t\telse if ( e.shiftKey ) {\n\t\t\tif ( type === 'cell' ) {\n\t\t\t\tcellRange( dt, idx, ctx._select_lastCell || null );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trowColumnRange( dt, type, idx, ctx._select_lastCell ?\n\t\t\t\t\tctx._select_lastCell[type] :\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No cmd or shift click - deselect if selected, or select\n\t\t\t// this row only\n\t\t\tvar selected = dt[type+'s']( { selected: true } );\n\n\t\t\tif ( isSelected && selected.flatten().length === 1 ) {\n\t\t\t\tdt[type]( idx ).deselect();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tselected.deselect();\n\t\t\t\tdt[type]( idx ).select();\n\t\t\t}\n\t\t}\n\t} else if ( style == 'multi+shift' ) {\n\t\tif ( e.shiftKey ) {\n\t\t\tif ( type === 'cell' ) {\n\t\t\t\tcellRange( dt, idx, ctx._select_lastCell || null );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trowColumnRange( dt, type, idx, ctx._select_lastCell ?\n\t\t\t\t\tctx._select_lastCell[type] :\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdt[ type ]( idx ).select( ! isSelected );\n\t\t}\n\t}\n\telse {\n\t\tdt[ type ]( idx ).select( ! isSelected );\n\t}\n}\n\nfunction _safeId( node ) {\n\treturn node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');\n}\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables selectors\n */\n\n// row and column are basically identical just assigned to different properties\n// and checking a different array, so we can dynamically create the functions to\n// reduce the code size\n$.each( [\n\t{ type: 'row', prop: 'aoData' },\n\t{ type: 'column', prop: 'aoColumns' }\n], function ( i, o ) {\n\tDataTable.ext.selector[ o.type ].push( function ( settings, opts, indexes ) {\n\t\tvar selected = opts.selected;\n\t\tvar data;\n\t\tvar out = [];\n\n\t\tif ( selected !== true && selected !== false ) {\n\t\t\treturn indexes;\n\t\t}\n\n\t\tfor ( var i=0, ien=indexes.length ; i<ien ; i++ ) {\n\t\t\tdata = settings[ o.prop ][ indexes[i] ];\n\n\t\t\tif ( (selected === true && data._select_selected === true) ||\n\t\t\t     (selected === false && ! data._select_selected )\n\t\t\t) {\n\t\t\t\tout.push( indexes[i] );\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t} );\n} );\n\nDataTable.ext.selector.cell.push( function ( settings, opts, cells ) {\n\tvar selected = opts.selected;\n\tvar rowData;\n\tvar out = [];\n\n\tif ( selected === undefined ) {\n\t\treturn cells;\n\t}\n\n\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\trowData = settings.aoData[ cells[i].row ];\n\n\t\tif ( (selected === true && rowData._selected_cells && rowData._selected_cells[ cells[i].column ] === true) ||\n\t\t     (selected === false && ( ! rowData._selected_cells || ! rowData._selected_cells[ cells[i].column ] ) )\n\t\t) {\n\t\t\tout.push( cells[i] );\n\t\t}\n\t}\n\n\treturn out;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Local variables to improve compression\nvar apiRegister = DataTable.Api.register;\nvar apiRegisterPlural = DataTable.Api.registerPlural;\n\napiRegister( 'select()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tDataTable.select.init( new DataTable.Api( ctx ) );\n\t} );\n} );\n\napiRegister( 'select.blurable()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.context[0]._select.blurable;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.blurable = flag;\n\t} );\n} );\n\napiRegister( 'select.toggleable()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.context[0]._select.toggleable;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.toggleable = flag;\n\t} );\n} );\n\napiRegister( 'select.info()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.context[0]._select.info;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.info = flag;\n\t} );\n} );\n\napiRegister( 'select.items()', function ( items ) {\n\tif ( items === undefined ) {\n\t\treturn this.context[0]._select.items;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.items = items;\n\n\t\teventTrigger( new DataTable.Api( ctx ), 'selectItems', [ items ] );\n\t} );\n} );\n\n// Takes effect from the _next_ selection. None disables future selection, but\n// does not clear the current selection. Use the `deselect` methods for that\napiRegister( 'select.style()', function ( style ) {\n\tif ( style === undefined ) {\n\t\treturn this.context[0]._select.style;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ! ctx._select ) {\n\t\t\tDataTable.select.init( new DataTable.Api(ctx) );\n\t\t}\n\n\t\tif ( ! ctx._select_init ) {\n\t\t\tinit(ctx);\n\t\t}\n\n\t\tctx._select.style = style;\n\n\t\t// Add / remove mouse event handlers. They aren't required when only\n\t\t// API selection is available\n\t\tvar dt = new DataTable.Api( ctx );\n\t\tdisableMouseSelection( dt );\n\t\t\n\t\tif ( style !== 'api' ) {\n\t\t\tenableMouseSelection( dt );\n\t\t}\n\n\t\teventTrigger( new DataTable.Api( ctx ), 'selectStyle', [ style ] );\n\t} );\n} );\n\napiRegister( 'select.selector()', function ( selector ) {\n\tif ( selector === undefined ) {\n\t\treturn this.context[0]._select.selector;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tdisableMouseSelection( new DataTable.Api( ctx ) );\n\n\t\tctx._select.selector = selector;\n\n\t\tif ( ctx._select.style !== 'api' ) {\n\t\t\tenableMouseSelection( new DataTable.Api( ctx ) );\n\t\t}\n\t} );\n} );\n\n\n\napiRegisterPlural( 'rows().select()', 'row().select()', function ( select ) {\n\tvar api = this;\n\n\tif ( select === false ) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator( 'row', function ( ctx, idx ) {\n\t\tclear( ctx );\n\n\t\tctx.aoData[ idx ]._select_selected = true;\n\t\t$( ctx.aoData[ idx ].nTr ).addClass( ctx._select.className );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'select', [ 'row', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegister( 'row().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (\n\t\tctx &&\n\t\tthis.length &&\n\t\tctx.aoData[this[0]] &&\n\t\tctx.aoData[this[0]]._select_selected\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n} );\n\napiRegisterPlural( 'columns().select()', 'column().select()', function ( select ) {\n\tvar api = this;\n\n\tif ( select === false ) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator( 'column', function ( ctx, idx ) {\n\t\tclear( ctx );\n\n\t\tctx.aoColumns[ idx ]._select_selected = true;\n\n\t\tvar column = new DataTable.Api( ctx ).column( idx );\n\n\t\t$( column.header() ).addClass( ctx._select.className );\n\t\t$( column.footer() ).addClass( ctx._select.className );\n\n\t\tcolumn.nodes().to$().addClass( ctx._select.className );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'select', [ 'column', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegister( 'column().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (\n\t\tctx &&\n\t\tthis.length &&\n\t\tctx.aoColumns[this[0]] &&\n\t\tctx.aoColumns[this[0]]._select_selected\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n} );\n\napiRegisterPlural( 'cells().select()', 'cell().select()', function ( select ) {\n\tvar api = this;\n\n\tif ( select === false ) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {\n\t\tclear( ctx );\n\n\t\tvar data = ctx.aoData[ rowIdx ];\n\n\t\tif ( data._selected_cells === undefined ) {\n\t\t\tdata._selected_cells = [];\n\t\t}\n\n\t\tdata._selected_cells[ colIdx ] = true;\n\n\t\tif ( data.anCells ) {\n\t\t\t$( data.anCells[ colIdx ] ).addClass( ctx._select.className );\n\t\t}\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'select', [ 'cell', api.cells(api[i]).indexes().toArray() ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegister( 'cell().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length) {\n\t\tvar row = ctx.aoData[this[0][0].row];\n\n\t\tif (row && row._selected_cells && row._selected_cells[this[0][0].column]) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n} );\n\n\napiRegisterPlural( 'rows().deselect()', 'row().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator( 'row', function ( ctx, idx ) {\n\t\tctx.aoData[ idx ]._select_selected = false;\n\t\tctx._select_lastCell = null;\n\t\t$( ctx.aoData[ idx ].nTr ).removeClass( ctx._select.className );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'deselect', [ 'row', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegisterPlural( 'columns().deselect()', 'column().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator( 'column', function ( ctx, idx ) {\n\t\tctx.aoColumns[ idx ]._select_selected = false;\n\n\t\tvar api = new DataTable.Api( ctx );\n\t\tvar column = api.column( idx );\n\n\t\t$( column.header() ).removeClass( ctx._select.className );\n\t\t$( column.footer() ).removeClass( ctx._select.className );\n\n\t\t// Need to loop over each cell, rather than just using\n\t\t// `column().nodes()` as cells which are individually selected should\n\t\t// not have the `selected` class removed from them\n\t\tapi.cells( null, idx ).indexes().each( function (cellIdx) {\n\t\t\tvar data = ctx.aoData[ cellIdx.row ];\n\t\t\tvar cellSelected = data._selected_cells;\n\n\t\t\tif ( data.anCells && (! cellSelected || ! cellSelected[ cellIdx.column ]) ) {\n\t\t\t\t$( data.anCells[ cellIdx.column  ] ).removeClass( ctx._select.className );\n\t\t\t}\n\t\t} );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'deselect', [ 'column', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegisterPlural( 'cells().deselect()', 'cell().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {\n\t\tvar data = ctx.aoData[ rowIdx ];\n\n\t\tif(data._selected_cells !== undefined) {\n\t\t\tdata._selected_cells[ colIdx ] = false;\n\t\t}\n\n\t\t// Remove class only if the cells exist, and the cell is not column\n\t\t// selected, in which case the class should remain (since it is selected\n\t\t// in the column)\n\t\tif ( data.anCells && ! ctx.aoColumns[ colIdx ]._select_selected ) {\n\t\t\t$( data.anCells[ colIdx ] ).removeClass( ctx._select.className );\n\t\t}\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'deselect', [ 'cell', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Buttons\n */\nfunction i18n( label, def ) {\n\treturn function (dt) {\n\t\treturn dt.i18n( 'buttons.'+label, def );\n\t};\n}\n\n// Common events with suitable namespaces\nfunction namespacedEvents ( config ) {\n\tvar unique = config._eventNamespace;\n\n\treturn 'draw.dt.DT'+unique+' select.dt.DT'+unique+' deselect.dt.DT'+unique;\n}\n\nfunction enabled ( dt, config ) {\n\tif ( $.inArray( 'rows', config.limitTo ) !== -1 && dt.rows( { selected: true } ).any() ) {\n\t\treturn true;\n\t}\n\n\tif ( $.inArray( 'columns', config.limitTo ) !== -1 && dt.columns( { selected: true } ).any() ) {\n\t\treturn true;\n\t}\n\n\tif ( $.inArray( 'cells', config.limitTo ) !== -1 && dt.cells( { selected: true } ).any() ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nvar _buttonNamespace = 0;\n\n$.extend( DataTable.ext.buttons, {\n\tselected: {\n\t\ttext: i18n( 'selected', 'Selected' ),\n\t\tclassName: 'buttons-selected',\n\t\tlimitTo: [ 'rows', 'columns', 'cells' ],\n\t\tinit: function ( dt, node, config ) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);\n\n\t\t\t// .DT namespace listeners are removed by DataTables automatically\n\t\t\t// on table destroy\n\t\t\tdt.on( namespacedEvents(config), function () {\n\t\t\t\tthat.enable( enabled(dt, config) );\n\t\t\t} );\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function ( dt, node, config ) {\n\t\t\tdt.off( config._eventNamespace );\n\t\t}\n\t},\n\tselectedSingle: {\n\t\ttext: i18n( 'selectedSingle', 'Selected single' ),\n\t\tclassName: 'buttons-selected-single',\n\t\tinit: function ( dt, node, config ) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);\n\n\t\t\tdt.on( namespacedEvents(config), function () {\n\t\t\t\tvar count = dt.rows( { selected: true } ).flatten().length +\n\t\t\t\t            dt.columns( { selected: true } ).flatten().length +\n\t\t\t\t            dt.cells( { selected: true } ).flatten().length;\n\n\t\t\t\tthat.enable( count === 1 );\n\t\t\t} );\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function ( dt, node, config ) {\n\t\t\tdt.off( config._eventNamespace );\n\t\t}\n\t},\n\tselectAll: {\n\t\ttext: i18n( 'selectAll', 'Select all' ),\n\t\tclassName: 'buttons-select-all',\n\t\taction: function () {\n\t\t\tvar items = this.select.items();\n\t\t\tthis[ items+'s' ]().select();\n\t\t}\n\t},\n\tselectNone: {\n\t\ttext: i18n( 'selectNone', 'Deselect all' ),\n\t\tclassName: 'buttons-select-none',\n\t\taction: function () {\n\t\t\tclear( this.settings()[0], true );\n\t\t},\n\t\tinit: function ( dt, node, config ) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);\n\n\t\t\tdt.on( namespacedEvents(config), function () {\n\t\t\t\tvar count = dt.rows( { selected: true } ).flatten().length +\n\t\t\t\t            dt.columns( { selected: true } ).flatten().length +\n\t\t\t\t            dt.cells( { selected: true } ).flatten().length;\n\n\t\t\t\tthat.enable( count > 0 );\n\t\t\t} );\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function ( dt, node, config ) {\n\t\t\tdt.off( config._eventNamespace );\n\t\t}\n\t}\n} );\n\n$.each( [ 'Row', 'Column', 'Cell' ], function ( i, item ) {\n\tvar lc = item.toLowerCase();\n\n\tDataTable.ext.buttons[ 'select'+item+'s' ] = {\n\t\ttext: i18n( 'select'+item+'s', 'Select '+lc+'s' ),\n\t\tclassName: 'buttons-select-'+lc+'s',\n\t\taction: function () {\n\t\t\tthis.select.items( lc );\n\t\t},\n\t\tinit: function ( dt ) {\n\t\t\tvar that = this;\n\n\t\t\tdt.on( 'selectItems.dt.DT', function ( e, ctx, items ) {\n\t\t\t\tthat.active( items === lc );\n\t\t\t} );\n\t\t}\n\t};\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n */\n\n// DataTables creation - check if select has been defined in the options. Note\n// this required that the table be in the document! If it isn't then something\n// needs to trigger this method unfortunately. The next major release of\n// DataTables will rework the events and address this.\n$(document).on( 'preInit.dt.dtSelect', function (e, ctx) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tDataTable.select.init( new DataTable.Api( ctx ) );\n} );\n\n\nreturn DataTable.select;\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}