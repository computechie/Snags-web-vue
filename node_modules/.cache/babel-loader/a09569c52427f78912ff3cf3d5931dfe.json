{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nlet timer; // for holding timer function for auto logout if session expire\n\nexport default {\n  async login(context, payload) {\n    return context.dispatch('auth', { ...payload\n    });\n  },\n\n  async auth(context, payload) {\n    const token = context.rootGetters.token; //User token !!\n\n    const response = await fetch('https://www.it-b.hr/computech.php?auth=' + token, {\n      method: 'POST',\n      body: JSON.stringify({\n        username: payload.username,\n        password: payload.password,\n        userFullname: payload.userFullname,\n        returnSecureToken: true\n      })\n    });\n    const responseData = await response.json();\n\n    if (!response.ok) {\n      // console.log(responseData);\n      const error = new Error(responseData.message || 'Failed to authenticate.');\n      throw error;\n    } //expecting in json recive 'exipresIn' in minutes! how long will session exists\n    // const expiresIn = +responseData[0].expiresIn * 1000 * 60;\n\n\n    const expiresIn = 10001;\n    const expirationDate = new Date().getTime() + expiresIn; //auto logout if token expires\n\n    timer = setTimeout(function () {\n      context.dispatch('autoLogout');\n    }, expiresIn); //store login details in local storeage so that on refresh page app remember loged user!\n\n    localStorage.setItem('token', responseData[0].token);\n    localStorage.setItem('userId', responseData[0].userId);\n    localStorage.setItem('userFullname', responseData[0].userFullname);\n    localStorage.setItem('tokenExpiration', expirationDate);\n    localStorage.setItem('expiresIn', expiresIn);\n    context.commit('setUser', {\n      token: responseData[0].token,\n      userId: responseData[0].userId,\n      userFullname: responseData[0].userFullname\n    });\n  },\n\n  logout(context) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userFullname');\n    localStorage.removeItem('tokenExpiration');\n    clearTimeout(timer);\n    context.commit('setUser', {\n      token: null,\n      userId: null,\n      userFullname: null,\n      tokenExpiration: null\n    });\n  },\n\n  //try to login if local storage containt login details\n  autoLogin(context) {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    const userFullname = localStorage.getItem('userFullname');\n    const tokenExpiration = localStorage.getItem('tokenExpiration');\n    const willExpire = +tokenExpiration - new Date().getTime();\n    const expiresIn = localStorage.getItem('expiresIn');\n\n    if (willExpire < 0) {\n      //if is token ok then we must extend life of the token for the next expiration time\n      const expirationDate = new Date().getTime() + expiresIn;\n      localStorage.setItem('tokenExpiration', expirationDate);\n      return;\n    } //if token not ok then do logout:\n\n\n    timer = setTimeout(function () {\n      context.dispatch('autoLogout');\n    }, expiresIn);\n\n    if (token && userId && userFullname) {\n      context.commit('setUser', {\n        token: token,\n        userId: userId,\n        userFullname: userFullname\n      });\n    }\n  },\n\n  autoLogout(context) {\n    context.dispatch('logout');\n    context.commit('setAutoLogout');\n  }\n\n};","map":{"version":3,"names":["timer","login","context","payload","dispatch","auth","token","rootGetters","response","fetch","method","body","JSON","stringify","username","password","userFullname","returnSecureToken","responseData","json","ok","error","Error","message","expiresIn","expirationDate","Date","getTime","setTimeout","localStorage","setItem","userId","commit","logout","removeItem","clearTimeout","tokenExpiration","autoLogin","getItem","willExpire","autoLogout"],"sources":["H:/www/vue/vue-cli-01-a-new-vue-project/src/store/modules/auth/actions.js"],"sourcesContent":["let timer; // for holding timer function for auto logout if session expire\r\n\r\nexport default {\r\n    async login(context,payload) {\r\n          return  context.dispatch('auth',{\r\n                ...payload\r\n            });\r\n    }, \r\n    \r\n    async  auth(context,payload){\r\n\r\n        const token = context.rootGetters.token; //User token !!\r\n\r\n   \r\n        const response = await fetch('https://www.it-b.hr/computech.php?auth='+token,{\r\n               method: 'POST',\r\n               body: JSON.stringify({\r\n                   username: payload.username,\r\n                   password: payload.password,\r\n                   userFullname: payload.userFullname,\r\n                   returnSecureToken : true\r\n               })\r\n              \r\n   \r\n          });\r\n                 \r\n          const responseData = await response.json();\r\n   \r\n          if(!response.ok){\r\n              // console.log(responseData);\r\n               const error = new Error(responseData.message || 'Failed to authenticate.');\r\n               throw error;\r\n          }\r\n\r\n          //expecting in json recive 'exipresIn' in minutes! how long will session exists\r\n         // const expiresIn = +responseData[0].expiresIn * 1000 * 60;\r\n\r\n          const expiresIn= 10001;\r\n          const expirationDate = new Date().getTime() +  expiresIn;\r\n   \r\n          //auto logout if token expires\r\n          timer = setTimeout(function(){\r\n            context.dispatch('autoLogout');\r\n          },expiresIn)\r\n\r\n          //store login details in local storeage so that on refresh page app remember loged user!\r\n          localStorage.setItem('token',responseData[0].token);\r\n          localStorage.setItem('userId',responseData[0].userId);\r\n          localStorage.setItem('userFullname',responseData[0].userFullname);\r\n          localStorage.setItem('tokenExpiration',expirationDate);\r\n          localStorage.setItem('expiresIn',expiresIn);\r\n\r\n          context.commit('setUser',{\r\n                  token: responseData[0].token,\r\n                  userId : responseData[0].userId,\r\n                  userFullname: responseData[0].userFullname\r\n                 \r\n   \r\n           });\r\n   \r\n    },\r\n    \r\n    logout(context){\r\n\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('userFullname');\r\n        localStorage.removeItem('tokenExpiration'); \r\n\r\n        clearTimeout(timer);\r\n\r\n        context.commit('setUser', {\r\n            token : null,\r\n            userId : null,\r\n            userFullname : null,\r\n            tokenExpiration : null\r\n        })\r\n\r\n    },\r\n\r\n    //try to login if local storage containt login details\r\n    autoLogin(context){\r\n       \r\n        const token = localStorage.getItem('token');\r\n        const userId = localStorage.getItem('userId');\r\n        const userFullname = localStorage.getItem('userFullname');\r\n        const tokenExpiration = localStorage.getItem('tokenExpiration');\r\n        const willExpire = +tokenExpiration - new Date().getTime();\r\n        const expiresIn =localStorage.getItem('expiresIn');\r\n\r\n        if(willExpire < 0){\r\n            //if is token ok then we must extend life of the token for the next expiration time\r\n            \r\n            const expirationDate = new Date().getTime() + expiresIn ;\r\n            localStorage.setItem('tokenExpiration',expirationDate);\r\n\r\n            return;\r\n        }\r\n\r\n        //if token not ok then do logout:\r\n\r\n        timer = setTimeout(function(){\r\n            context.dispatch('autoLogout');\r\n        }, expiresIn)\r\n\r\n        if (token && userId && userFullname){\r\n            context.commit('setUser',{\r\n                  token: token,\r\n                  userId : userId,\r\n                  userFullname: userFullname\r\n                  \r\n            });\r\n        }\r\n\r\n    },\r\n    autoLogout(context){\r\n        context.dispatch('logout');\r\n        context.commit('setAutoLogout');\r\n            \r\n   \r\n    }\r\n\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}