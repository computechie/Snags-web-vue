{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      systemTreeJson: [],\n      systemTreeJsonChild: []\n    };\n  },\n\n  created() {\n    axios.get(\"https://www.it-b.hr/vue/tree.php\").then(resp => {\n      var obj = resp.data;\n      var systemTreeJson2 = [];\n      var systemTreeJson3 = [];\n      obj.forEach(function (item) {\n        //  console.table(obj[key].KEY);\n        //adding root elements - parent=0\n        if (item.parent == 0) {\n          systemTreeJson2.push({\n            TEXT: item.text,\n            KEY: item.KEY\n          });\n        }\n      }); ///--------------\n\n      obj.forEach(function (item, key) {\n        //  console.table(obj[key].KEY);\n        //adding root elements - parent=0\n        if (systemTreeJson2.find(child => child.KEY == item.parent) && item.parent == 1) {\n          /* systemTreeJson2.concat(key,[\"CHILDREN\",{\r\n             TEXT: item.text,\r\n             KEY: item.KEY\r\n             \r\n           }]);*/\n          //systemTreeJson2.splice(0,key,'CHILDREN')\n          var result = systemTreeJson2.map(function (el) {\n            var o = Object.assign({}, el);\n            o.CHILDREN = '[{TEXT: item.text, KEY: item.KEY}]';\n            return o;\n          });\n        }\n      });\n      console.table(result);\n      this.systemTreeJson = systemTreeJson2;\n      this.systemTreeJsonChild = systemTreeJson3; //  console.table(  this.systemTreeJson)\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,cAAc,EAAE,EADX;MAELC,mBAAmB,EAAE;IAFhB,CAAP;EAID,CANY;;EAObC,OAAO,GAAG;IACRJ,KAAK,CAACK,GAAN,CAAU,kCAAV,EAA8CC,IAA9C,CAAoDC,IAAD,IAAU;MAC3D,IAAIC,GAAE,GAAID,IAAI,CAACN,IAAf;MACA,IAAIQ,eAAc,GAAI,EAAtB;MACA,IAAIC,eAAc,GAAI,EAAtB;MAEAF,GAAG,CAACG,OAAJ,CAAY,UAAUC,IAAV,EAAgB;QAC1B;QAEA;QACA,IAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;UACpBJ,eAAe,CAACK,IAAhB,CAAqB;YACnBC,IAAI,EAAEH,IAAI,CAACI,IADQ;YAEnBC,GAAG,EAAEL,IAAI,CAACK;UAFS,CAArB;QAKF;MACD,CAXD,EAL2D,CAkB3D;;MAEAT,GAAG,CAACG,OAAJ,CAAY,UAAUC,IAAV,EAAeM,GAAf,EAAoB;QAC9B;QAEA;QAGA,IAAIT,eAAe,CAACU,IAAhB,CAAqBC,KAAI,IAAKA,KAAK,CAACH,GAAN,IAAaL,IAAI,CAACC,MAAhD,KAA2DD,IAAI,CAACC,MAAL,IAAa,CAA5E,EAA+E;UAG9E;;;;;UAMC;UAEA,IAAIQ,MAAK,GAAIZ,eAAe,CAACa,GAAhB,CAAoB,UAASC,EAAT,EAAa;YAC5C,IAAIC,IAAIC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,EAAlB,CAAR;YACAC,CAAC,CAACG,QAAF,GAAa,oCAAb;YACA,OAAOH,CAAP;UACC,CAJU,CAAb;QAOF;MACD,CAzBD;MA2BAI,OAAO,CAACC,KAAR,CAAcR,MAAd;MAEA,KAAKnB,cAAL,GAAsBO,eAAtB;MACA,KAAKN,mBAAL,GAA2BO,eAA3B,CAlD2D,CAmD3D;IACD,CApDD;EAqDD;;AA7DY,CAAf","names":["axios","data","systemTreeJson","systemTreeJsonChild","created","get","then","resp","obj","systemTreeJson2","systemTreeJson3","forEach","item","parent","push","TEXT","text","KEY","key","find","child","result","map","el","o","Object","assign","CHILDREN","console","table"],"sourceRoot":"","sources":["Q:\\Projects\\DFM v2\\src\\components\\pages\\CDE\\SystemTree.vue"],"sourcesContent":["<template>\r\n  <h5>System list</h5>\r\n  <ul>\r\n    <li v-for=\"item in systemTreeJson\" v-bind:key=\"item.KEY\">\r\n      {{ item.KEY }} {{ item.TEXT }}\r\n      <ul>\r\n        <li\r\n          v-for=\"item in systemTreeJsonChild\"\r\n          v-bind:key=\"item.KEY\"\r\n        >\r\n          {{ item.KEY }} {{ item.TEXT }}\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      systemTreeJson: [],\r\n      systemTreeJsonChild: [],\r\n    };\r\n  },\r\n  created() {\r\n    axios.get(\"https://www.it-b.hr/vue/tree.php\").then((resp) => {\r\n      var obj = resp.data;\r\n      var systemTreeJson2 = [];\r\n      var systemTreeJson3 = [];\r\n\r\n      obj.forEach(function (item) {\r\n        //  console.table(obj[key].KEY);\r\n\r\n        //adding root elements - parent=0\r\n        if (item.parent == 0) {\r\n          systemTreeJson2.push({\r\n            TEXT: item.text,\r\n            KEY: item.KEY,\r\n           \r\n          });\r\n        }\r\n      });\r\n\r\n      ///--------------\r\n\r\n      obj.forEach(function (item,key) {\r\n        //  console.table(obj[key].KEY);\r\n\r\n        //adding root elements - parent=0\r\n      \r\n        \r\n        if (systemTreeJson2.find(child => child.KEY == item.parent) && item.parent==1) {\r\n          \r\n          \r\n         /* systemTreeJson2.concat(key,[\"CHILDREN\",{\r\n            TEXT: item.text,\r\n            KEY: item.KEY\r\n            \r\n          }]);*/\r\n\r\n          //systemTreeJson2.splice(0,key,'CHILDREN')\r\n          \r\n          var result = systemTreeJson2.map(function(el) {\r\n            var o = Object.assign({}, el);\r\n            o.CHILDREN = '[{TEXT: item.text, KEY: item.KEY}]';\r\n            return o;\r\n            })\r\n\r\n         \r\n        }\r\n      });\r\n\r\n      console.table(result);\r\n\r\n      this.systemTreeJson = systemTreeJson2;\r\n      this.systemTreeJsonChild = systemTreeJson3;\r\n      //  console.table(  this.systemTreeJson)\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module"}