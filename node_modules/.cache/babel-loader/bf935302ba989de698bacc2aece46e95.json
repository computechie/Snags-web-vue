{"ast":null,"code":"const SLIDE_WIDTH_THRESH = 50; // in px\n\nexport default {\n  props: {\n    value: {\n      type: Number,\n      required: true\n    },\n    list: {\n      type: Array,\n      required: true\n    },\n    backgroundColor: {\n      type: String,\n      default: '#333'\n    },\n    pivot: {\n      type: String,\n      default: 'cursor'\n    },\n    zoomingElastic: {\n      type: Boolean,\n      default: true\n    },\n    limitTranslation: {\n      type: Boolean,\n      default: true\n    },\n    doubleClickToZoom: {\n      type: Boolean,\n      default: true\n    },\n    mouseWheelToZoom: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data() {\n    return {\n      // env states\n      containerWidth: 1,\n      containerHeight: 1,\n      // main states\n      selIndex: this.value,\n      animSelIndex: this.value,\n      currentZoomed: false,\n      autoSliding: false,\n      imageAspectRatios: [],\n      // aspect ratio (width / height) of images\n      // interaction states\n      isPointerDown: false,\n      lastPointerX: 0,\n      slideOffsetX: 0\n    };\n  },\n\n  computed: {\n    middleStyle() {\n      return {\n        left: `${0 + this.slideOffsetX}px`\n      };\n    },\n\n    leftStyle() {\n      return {\n        left: `${-this.containerWidth + this.slideOffsetX}px`\n      };\n    },\n\n    rightStyle() {\n      return {\n        left: `${this.containerWidth + this.slideOffsetX}px`\n      };\n    },\n\n    slideThresh() {\n      return Math.max(SLIDE_WIDTH_THRESH, this.containerWidth * 0.1);\n    }\n\n  },\n  watch: {\n    value(val) {\n      if (val !== this.animSelIndex) {\n        this.selIndex = val;\n        this.animSelIndex = val;\n      }\n    },\n\n    selIndex() {\n      this.$nextTick(() => {\n        this.$refs.zoomers.forEach(zoomer => {\n          zoomer.refreshContainerPos();\n        });\n      });\n    }\n\n  },\n\n  mounted() {\n    window.addEventListener('resize', this.onWindowResize);\n    this.onWindowResize();\n  },\n\n  destroyed() {\n    window.removeEventListener('resize', this.onWindowResize);\n  },\n\n  methods: {\n    // api ---------------------------------------------------------------------\n    reset() {\n      this.$refs.zoomers.forEach(zoomer => {\n        zoomer.reset();\n      });\n    },\n\n    zoomIn(scale) {\n      if (this.$refs.zoomers[1]) this.$refs.zoomers[1].zoomIn(scale);\n    },\n\n    zoomOut(scale) {\n      if (this.$refs.zoomers[1]) this.$refs.zoomers[1].zoomOut(scale);\n    },\n\n    // events ------------------------------------------------------------------\n    onWindowResize() {\n      let styles = window.getComputedStyle(this.$el);\n      this.containerWidth = parseFloat(styles.width);\n      this.containerHeight = parseFloat(styles.height);\n    },\n\n    onPointerMove(deltaX) {\n      if (this.isPointerDown && !this.currentZoomed) {\n        let factor = this.selIndex === 0 && deltaX > 0 && this.slideOffsetX + deltaX > 0 || this.selIndex === this.list.length - 1 && deltaX < 0 && this.slideOffsetX + deltaX < 0 ? 0.3 : 1;\n        this.slideOffsetX += deltaX * factor;\n      }\n    },\n\n    onPointerUp() {\n      if (this.slideOffsetX < -this.slideThresh) {\n        // next page\n        this.paginate(1);\n      } else if (this.slideOffsetX > this.slideThresh) {\n        // prev page\n        this.paginate(-1);\n      } else {\n        // only apply the animation\n        this.paginate(0);\n      }\n    },\n\n    // Stop Firefox dragging the image\n    onImageDragStart(ev) {\n      ev.preventDefault();\n      return false;\n    },\n\n    paginate(deltaIndex) {\n      let targetIndex = this.selIndex + deltaIndex;\n\n      if (targetIndex < 0 || targetIndex >= this.list.length) {\n        this.slideOffsetX = 0;\n        return;\n      }\n\n      this.slideOffsetX = this.containerWidth * -deltaIndex;\n      this.autoSliding = true; // update the selIndex before the animation to remove the delay feeling\n\n      this.$emit('input', targetIndex);\n      this.animSelIndex = targetIndex;\n      setTimeout(() => {\n        this.selIndex = targetIndex;\n        this.slideOffsetX = 0;\n        this.autoSliding = false;\n      }, 400);\n    },\n\n    onMouseDown(ev) {\n      this.isPointerDown = true;\n      this.lastPointerX = ev.clientX;\n    },\n\n    onMouseUp(ev) {\n      this.isPointerDown = false;\n      this.onPointerUp();\n    },\n\n    onMouseMove(ev) {\n      if (this.isPointerDown) {\n        this.onPointerMove(ev.clientX - this.lastPointerX);\n        this.lastPointerX = ev.clientX;\n      }\n    },\n\n    onTouchStart(ev) {\n      if (ev.touches.length === 1) {\n        this.isPointerDown = true;\n        this.lastPointerX = ev.touches[0].clientX;\n      }\n    },\n\n    onTouchEnd(ev) {\n      if (ev.touches.length === 0) {\n        this.isPointerDown = false;\n        this.onPointerUp();\n      }\n    },\n\n    onTouchMove(ev) {\n      if (ev.touches.length === 1) {\n        this.onPointerMove(ev.touches[0].clientX - this.lastPointerX);\n        this.lastPointerX = ev.touches[0].clientX;\n      }\n    },\n\n    onImageLoad(index, ev) {\n      let aspectRatio = ev.target.naturalWidth / ev.target.naturalHeight;\n      this.$set(this.imageAspectRatios, index, aspectRatio);\n    },\n\n    onImageSwipe(direction) {\n      this.paginate(direction == 'right' ? -1 : 1);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["SLIDE_WIDTH_THRESH","props","value","type","Number","required","list","Array","backgroundColor","String","default","pivot","zoomingElastic","Boolean","limitTranslation","doubleClickToZoom","mouseWheelToZoom","data","containerWidth","containerHeight","selIndex","animSelIndex","currentZoomed","autoSliding","imageAspectRatios","isPointerDown","lastPointerX","slideOffsetX","computed","middleStyle","left","leftStyle","rightStyle","slideThresh","Math","max","watch","val","$nextTick","$refs","zoomers","forEach","zoomer","refreshContainerPos","mounted","window","addEventListener","onWindowResize","destroyed","removeEventListener","methods","reset","zoomIn","scale","zoomOut","styles","getComputedStyle","$el","parseFloat","width","height","onPointerMove","deltaX","factor","length","onPointerUp","paginate","onImageDragStart","ev","preventDefault","deltaIndex","targetIndex","$emit","setTimeout","onMouseDown","clientX","onMouseUp","onMouseMove","onTouchStart","touches","onTouchEnd","onTouchMove","onImageLoad","index","aspectRatio","target","naturalWidth","naturalHeight","$set","onImageSwipe","direction"],"sourceRoot":"","sources":["Q:\\Projects\\Transport-web\\node_modules\\vue-zoomer\\src\\vue-zoomer-gallery.vue"],"sourcesContent":["<template>\n  <!-- touchmove.prevent is used to stop the page scroll elastic effects -->\n  <div\n    :class=\"{\n      'anim': autoSliding && !isPointerDown,\n    }\"\n    :style=\"{\n      'background-color': backgroundColor,\n    }\"\n    class=\"vue-zoomer-gallery\"\n    @mousemove=\"onMouseMove\"\n    @mousedown=\"onMouseDown\"\n    @mouseout=\"onMouseUp\"\n    @mouseup=\"onMouseUp\"\n    @touchstart=\"onTouchStart\"\n    @touchend=\"onTouchEnd\"\n    @touchmove.prevent=\"onTouchMove\"\n  >\n    <v-zoomer\n      v-for=\"(n, i) in 3\"\n      ref=\"zoomers\"\n      :key=\"i + '-' + selIndex\"\n      :class=\"['left', 'middle', 'right'][i]\"\n      class=\"slide\"\n      :style=\"[leftStyle, middleStyle, rightStyle][i]\"\n      :max-scale=\"10\"\n      :zoomed.sync=\"currentZoomed\"\n      :reset-trigger=\"i\"\n      :aspect-ratio=\"imageAspectRatios[selIndex + i - 1] || 1\"\n      :pivot=\"pivot\"\n      :zooming-elastic=\"zoomingElastic\"\n      :limit-translation=\"limitTranslation\"\n      :double-click-to-zoom=\"doubleClickToZoom\"\n      :mouse-wheel-to-zoom=\"mouseWheelToZoom\"\n      @swipe=\"onImageSwipe\"\n    >\n      <img\n        v-if=\"selIndex + i - 1 > -1 && selIndex + i - 1 < list.length\"\n        :src=\"list[selIndex + i - 1]\"\n        draggable=\"false\"\n        style=\"object-fit: contain; width: 100%; height: 100%;\"\n        @load=\"onImageLoad(selIndex + i - 1, $event)\"\n        @dragstart=\"onImageDragStart\"\n      >\n    </v-zoomer>\n  </div>\n</template>\n\n<script>\n\nconst SLIDE_WIDTH_THRESH = 50 // in px\n\nexport default {\n  props: {\n    value: { type: Number, required: true },\n    list: { type: Array, required: true },\n    backgroundColor: { type: String, default: '#333' },\n    pivot: { type: String, default: 'cursor' },\n    zoomingElastic: { type: Boolean, default: true },\n    limitTranslation: { type: Boolean, default: true },\n    doubleClickToZoom: { type: Boolean, default: true },\n    mouseWheelToZoom: { type: Boolean, default: true },\n  },\n  data () {\n    return {\n      // env states\n      containerWidth: 1,\n      containerHeight: 1,\n      // main states\n      selIndex: this.value,\n      animSelIndex: this.value,\n      currentZoomed: false,\n      autoSliding: false,\n      imageAspectRatios: [], // aspect ratio (width / height) of images\n      // interaction states\n      isPointerDown: false,\n      lastPointerX: 0,\n      slideOffsetX: 0,\n    }\n  },\n  computed: {\n    middleStyle () {\n      return {\n        left: `${ 0 + this.slideOffsetX }px`,\n      }\n    },\n    leftStyle () {\n      return {\n        left: `${ -this.containerWidth + this.slideOffsetX }px`,\n      }\n    },\n    rightStyle () {\n      return {\n        left: `${ this.containerWidth + this.slideOffsetX }px`,\n      }\n    },\n    slideThresh () {\n      return Math.max(SLIDE_WIDTH_THRESH, this.containerWidth * 0.1)\n    },\n  },\n  watch: {\n    value (val) {\n      if (val !== this.animSelIndex) {\n        this.selIndex = val\n        this.animSelIndex = val\n      }\n    },\n    selIndex() {\n      this.$nextTick(() => {\n        this.$refs.zoomers.forEach(zoomer => {\n          zoomer.refreshContainerPos()\n        })\n      })\n    },\n  },\n  mounted () {\n    window.addEventListener('resize', this.onWindowResize)\n    this.onWindowResize()\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.onWindowResize)\n  },\n  methods: {\n    // api ---------------------------------------------------------------------\n    reset () {\n      this.$refs.zoomers.forEach(zoomer => {\n        zoomer.reset()\n      })\n    },\n    zoomIn (scale) {\n      if (this.$refs.zoomers[1]) this.$refs.zoomers[1].zoomIn(scale)\n    },\n    zoomOut (scale) {\n      if (this.$refs.zoomers[1]) this.$refs.zoomers[1].zoomOut(scale)\n    },\n    // events ------------------------------------------------------------------\n    onWindowResize () {\n      let styles = window.getComputedStyle(this.$el)\n      this.containerWidth = parseFloat(styles.width)\n      this.containerHeight = parseFloat(styles.height)\n    },\n    onPointerMove (deltaX) {\n      if (this.isPointerDown && !this.currentZoomed) {\n        let factor = (\n          (this.selIndex === 0 && deltaX > 0 && this.slideOffsetX + deltaX > 0) ||\n          (this.selIndex === this.list.length - 1 && deltaX < 0 && this.slideOffsetX + deltaX < 0)\n        ) ? 0.3 : 1\n        this.slideOffsetX += deltaX * factor\n      }\n    },\n    onPointerUp () {\n      if (this.slideOffsetX < -this.slideThresh) {\n        // next page\n        this.paginate(1)\n      } else if (this.slideOffsetX > this.slideThresh) {\n        // prev page\n        this.paginate(-1)\n      } else {\n        // only apply the animation\n        this.paginate(0)\n      }\n    },\n    // Stop Firefox dragging the image\n    onImageDragStart(ev) {\n      ev.preventDefault();\n      return false\n    },\n    paginate (deltaIndex) {\n      let targetIndex = this.selIndex + deltaIndex\n      if (targetIndex < 0 || targetIndex >= this.list.length) {\n        this.slideOffsetX = 0\n        return\n      }\n\n      this.slideOffsetX = this.containerWidth * -deltaIndex\n      this.autoSliding = true\n      // update the selIndex before the animation to remove the delay feeling\n      this.$emit('input', targetIndex)\n      this.animSelIndex = targetIndex\n      setTimeout(() => {\n        this.selIndex = targetIndex\n        this.slideOffsetX = 0\n        this.autoSliding = false\n      }, 400)\n    },\n    onMouseDown (ev) {\n      this.isPointerDown = true\n      this.lastPointerX = ev.clientX\n    },\n    onMouseUp (ev) {\n      this.isPointerDown = false\n      this.onPointerUp()\n    },\n    onMouseMove (ev) {\n      if (this.isPointerDown) {\n        this.onPointerMove(ev.clientX - this.lastPointerX)\n        this.lastPointerX = ev.clientX\n      }\n    },\n    onTouchStart (ev) {\n      if (ev.touches.length === 1) {\n        this.isPointerDown = true\n        this.lastPointerX = ev.touches[0].clientX\n      }\n    },\n    onTouchEnd (ev) {\n      if (ev.touches.length === 0) {\n        this.isPointerDown = false\n        this.onPointerUp()\n      }\n    },\n    onTouchMove (ev) {\n      if (ev.touches.length === 1) {\n        this.onPointerMove(ev.touches[0].clientX - this.lastPointerX)\n        this.lastPointerX = ev.touches[0].clientX\n      }\n    },\n    onImageLoad (index, ev) {\n      let aspectRatio = ev.target.naturalWidth / ev.target.naturalHeight\n      this.$set(this.imageAspectRatios, index, aspectRatio)\n    },\n    onImageSwipe (direction) {\n      this.paginate(direction == 'right' ? -1 : 1)\n    },\n  },\n}\n</script>\n\n<style scoped>\n.vue-zoomer-gallery {\n  position: relative;\n  overflow: hidden;\n  user-select: none;\n  min-width: 100px;\n  min-height: 100px;\n}\n.vue-zoomer-gallery > * {\n  display: inline-block;\n}\n.vue-zoomer-gallery.anim .slide {\n  transition: left 0.4s;\n}\n\n.slide {\n  position: absolute;\n  top: 0;\n  object-fit: contain;\n  width: 100%;\n  height: 100%;\n  -webkit-user-drag: none;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}