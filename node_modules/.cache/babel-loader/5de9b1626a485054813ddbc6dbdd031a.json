{"ast":null,"code":"/*\r\n//visual settings:\r\nvar onLoadSidebarWidth = 200;\r\nvar breakPointForSmallScreen = 750;\r\nvar minWSidebarWidth = 38;\r\n\r\nvar breakPointHideSidebarDescriptions = 150;\r\nvar maxPercentageSidebarWidth = 30;\r\nvar onLoadContentWidth = window.innerWidth - onLoadSidebarWidth;\r\n*/\nexport default {\n  data() {\n    return {\n      showMenu: true,\n      // for visual settings:\n      padding0: '12px',\n      dividerPosition: 200,\n      //px default width of the left sidebar!\n      contentWidth: window.innerWidth - 200,\n      //px width of the main content\n      isActive: true,\n      //in start visible sidebar icon descriptions\n      isCentered: false,\n      //sidebar icons on left at page load\n      iconCloseOpen: '&times;'\n    };\n  },\n\n  methods: {\n    /// ------------------------------\n    /// resizable left sidebar!\n    handleDragging(e) {\n      const percentage = e.pageX / window.innerWidth * 100;\n\n      if (e.pageX + 1 > 38 && percentage <= 30) {\n        //only resizable if width of the left sidebar is in this percentage range\n        this.dividerPosition = percentage / 100 * window.innerWidth;\n        this.contentWidth = window.innerWidth - this.dividerPosition;\n      } // on small screens hide sidebar menu descriptions\n\n\n      if (e.pageX < 150) {\n        this.isActive = false;\n        this.iconCloseOpen = '&#9776;';\n        this.isCentered = true;\n      } else {\n        this.isActive = true;\n        this.iconCloseOpen = '&times;';\n        this.isCentered = false;\n      } // -------------------\n\n    },\n\n    startDragging() {\n      document.addEventListener(\"mousemove\", this.handleDragging);\n    },\n\n    endDragging() {\n      document.removeEventListener(\"mousemove\", this.handleDragging);\n    },\n\n    displayMenuToggle() {\n      this.showMenu = true; //this.getDimensions() ;\n\n      this.padding0 = '12px';\n      this.dividerPosition = 200; //px default width of the left sidebar!\n\n      this.contentWidth = window.innerWidth - 200; //px width of the main content\n    },\n\n    setToFullScreenWidth() {\n      this.contentWidth = window.innerWidth; // login page has full screen width without sidebar\n\n      this.padding0 = '0px';\n    },\n\n    getDimensions() {\n      //on window resize\n      if (window.innerWidth > 750) {\n        this.dividerPosition = 200;\n        this.contentWidth = window.innerWidth - this.dividerPosition;\n        this.isActive = true;\n        this.iconCloseOpen = '&times;';\n        this.isCentered = false;\n      } else {\n        this.dividerPosition = 38;\n        this.isActive = false;\n        this.iconCloseOpen = '&#9776;';\n        this.isCentered = true;\n      }\n    },\n\n    sidebarColapse() {\n      this.isActive = !this.isActive;\n      this.isCentered = !this.isActive;\n\n      if (this.dividerPosition > 38) {\n        this.dividerPosition = 38;\n        this.contentWidth = window.innerWidth - this.dividerPosition;\n        this.iconCloseOpen = '&#9776;';\n      } else {\n        this.dividerPosition = 200;\n        this.contentWidth = window.innerWidth - this.dividerPosition;\n        this.iconCloseOpen = '&times;';\n      }\n    },\n\n    manualLogout() {\n      this.$store.dispatch('logout');\n      this.showMenu = false;\n      this.$router.replace('/');\n    } // ----------- end resizable left menu -------\n\n\n  },\n\n  mounted() {\n    window.addEventListener(\"resize\", this.getDimensions);\n  },\n\n  unmounted() {\n    window.removeEventListener(\"resize\", this.getDimensions);\n  },\n\n  created() {\n    //check if user is loggen in\n    this.$store.dispatch('autoLogin'); //on create (on load)\n    // this.projects = projectsObject; // parsed json\n    //hidden sidebar on load if small screen\n\n    if (window.innerWidth < 750) {\n      this.dividerPosition = 38;\n    }\n\n    if (window.innerWidth < 750) {\n      this.isActive = false;\n      this.iconCloseOpen = '&#9776;';\n      this.isCentered = true;\n    } else {\n      this.isActive = true;\n      this.iconCloseOpen = '&times;';\n      this.isCentered = false;\n    }\n  }\n\n};","map":{"version":3,"mappings":"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","names":["data","showMenu","padding0","dividerPosition","contentWidth","window","innerWidth","isActive","isCentered","iconCloseOpen","methods","handleDragging","e","percentage","pageX","startDragging","document","addEventListener","endDragging","removeEventListener","displayMenuToggle","setToFullScreenWidth","getDimensions","sidebarColapse","manualLogout","$store","dispatch","$router","replace","mounted","unmounted","created"],"sourceRoot":"","sources":["H:\\www\\vue\\vue-cli-01-a-new-vue-project\\src\\components\\PagesHolder.vue"],"sourcesContent":["<template>\r\n\r\n<top-bar></top-bar>\r\n\r\n<div class=\"wrapper\" @mouseup=\"endDragging()\" style=\"position:relative\">\r\n\r\n    <div id=\"sidebar\" v-if=\"showMenu\"  class=\"sidebar table-dark position-relative\" :style=\"{width: `${dividerPosition}px`}\">\r\n\r\n        \r\n            <div class=\"text-end sidebarBtnHolder\" v-bind:class=\"{ textcenter: isCentered }\">\r\n              <button type=\"button\" class=\"sidebarCollapseBtn\" v-on:click=\"sidebarColapse()\" v-html=\"iconCloseOpen\"></button>\r\n            </div> \r\n\r\n            \r\n            <div class=\"sidebarTopMenu\">\r\n              <div class=\"sidebarMenuRow\" title=\"Manage users\" v-bind:class=\"{ textcenter: isCentered }\"><a href=\"javascript:;\"><i  class=\"fa-solid fa-users sideBarIcon\"></i> <span class=\"menuDesc\" v-bind:class=\"{ active: isActive}\" >Manage users</span></a></div>\r\n            </div>\r\n         \r\n      \r\n    </div>\r\n        \r\n   <div id=\"divider\" v-if=\"showMenu\" class=\"divider\" :style=\"{left: `${dividerPosition}px`}\" @mousedown=\"startDragging()\"></div>\r\n        \r\n    \r\n    \r\n    <div id=\"content\" class=\"content\" :style=\"{width: `${contentWidth}px`}\" >\r\n            \r\n            <section>\r\n                       <div class=\"container-fluid\"  :style=\"{padding: `${this.padding0}`}\">\r\n                        <router-view  @set-fullscreenwidth=\"setToFullScreenWidth\" @display-menu=\"displayMenuToggle\" ></router-view>\r\n                       </div>\r\n\r\n              </section>\r\n\r\n    </div>\r\n\r\n</div> \r\n  \r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\n/*\r\n//visual settings:\r\nvar onLoadSidebarWidth = 200;\r\nvar breakPointForSmallScreen = 750;\r\nvar minWSidebarWidth = 38;\r\n\r\nvar breakPointHideSidebarDescriptions = 150;\r\nvar maxPercentageSidebarWidth = 30;\r\nvar onLoadContentWidth = window.innerWidth - onLoadSidebarWidth;\r\n*/\r\n\r\n\r\nexport default {\r\n  \r\n  data() {\r\n    return {\r\n\r\n     \r\n       showMenu : true,\r\n    \r\n\r\n      // for visual settings:\r\n      \r\n      padding0:'12px',\r\n      dividerPosition: 200, //px default width of the left sidebar!\r\n      contentWidth: (window.innerWidth - 200), //px width of the main content\r\n      isActive: true,       //in start visible sidebar icon descriptions\r\n      isCentered: false,     //sidebar icons on left at page load\r\n      iconCloseOpen: '&times;',\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    /// ------------------------------\r\n    /// resizable left sidebar!\r\n    handleDragging(e) {\r\n      \r\n      const percentage = (e.pageX / window.innerWidth) * 100;\r\n\r\n      if ( (e.pageX+1) > 38 && percentage <= 30) {\r\n        //only resizable if width of the left sidebar is in this percentage range\r\n        this.dividerPosition = (percentage / 100) * window.innerWidth;\r\n        this.contentWidth = window.innerWidth - this.dividerPosition;\r\n      }\r\n      \r\n      // on small screens hide sidebar menu descriptions\r\n      if (e.pageX < 150) {\r\n        this.isActive = false;\r\n        this.iconCloseOpen='&#9776;'\r\n        this.isCentered=true;\r\n      } else {\r\n        this.isActive = true;\r\n        this.iconCloseOpen='&times;'\r\n        this.isCentered=false;\r\n      }\r\n      // -------------------\r\n    },\r\n    startDragging() {\r\n        document.addEventListener(\"mousemove\", this.handleDragging);\r\n    },\r\n    endDragging() {\r\n      document.removeEventListener(\"mousemove\", this.handleDragging);\r\n    },\r\n\r\n   \r\n    displayMenuToggle(){\r\n     \r\n       this.showMenu = true;\r\n       //this.getDimensions() ;\r\n\r\n       this.padding0='12px';\r\n       this.dividerPosition= 200; //px default width of the left sidebar!\r\n       this.contentWidth= (window.innerWidth - 200); //px width of the main content\r\n    },\r\n    setToFullScreenWidth(){\r\n     \r\n      this.contentWidth = window.innerWidth // login page has full screen width without sidebar\r\n      this.padding0 = '0px';\r\n    },\r\n\r\n    getDimensions() {\r\n      //on window resize\r\n    \r\n      if (window.innerWidth > 750) {\r\n        this.dividerPosition = 200;\r\n        this.contentWidth = window.innerWidth - this.dividerPosition;\r\n        this.isActive = true;\r\n        this.iconCloseOpen= '&times;'\r\n        this.isCentered=false;\r\n       \r\n      } else {\r\n       \r\n        this.dividerPosition = 38;\r\n        this.isActive = false;\r\n        this.iconCloseOpen='&#9776;'\r\n        this.isCentered=true;\r\n      }\r\n     \r\n    },\r\n    sidebarColapse() {\r\n      \r\n      this.isActive = !this.isActive;\r\n      this.isCentered= !this.isActive;\r\n      \r\n      if (this.dividerPosition > 38) {\r\n        this.dividerPosition = 38;\r\n        this.contentWidth = window.innerWidth - this.dividerPosition;\r\n        this.iconCloseOpen='&#9776;'\r\n      } else {\r\n        this.dividerPosition = 200;\r\n        this.contentWidth = window.innerWidth - this.dividerPosition;\r\n        this.iconCloseOpen= '&times;'\r\n    \r\n      }\r\n    },\r\n\r\n    manualLogout(){\r\n       this.$store.dispatch('logout');\r\n       this.showMenu = false;\r\n       this.$router.replace('/');\r\n    }\r\n    \r\n    // ----------- end resizable left menu -------\r\n  },\r\n\r\n  mounted() {\r\n    \r\n    window.addEventListener(\"resize\", this.getDimensions);\r\n  },\r\n  unmounted() {\r\n    window.removeEventListener(\"resize\", this.getDimensions);\r\n  },\r\n\r\n  created() {\r\n  \r\n    //check if user is loggen in\r\n    this.$store.dispatch('autoLogin');\r\n\r\n    \r\n    \r\n    //on create (on load)\r\n    // this.projects = projectsObject; // parsed json\r\n\r\n    //hidden sidebar on load if small screen\r\n    if (window.innerWidth < 750) {\r\n      this.dividerPosition = 38;\r\n    }\r\n\r\n    if (window.innerWidth < 750) {\r\n      this.isActive = false;\r\n      this.iconCloseOpen='&#9776;';\r\n      this.isCentered=true;\r\n    }else{\r\n      this.isActive = true;\r\n      this.iconCloseOpen='&times;';\r\n      this.isCentered=false;\r\n    }\r\n  },\r\n\r\n\r\n \r\n\r\n\r\n\r\n};\r\n</script>\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}