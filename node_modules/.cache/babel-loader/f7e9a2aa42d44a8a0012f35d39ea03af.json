{"ast":null,"code":"// Primevue datatable help: https://www.primefaces.org/primevue/datatable //\n//import DataTable from \"primevue/datatable\";\n//import Column from \"primevue/column\";\n//import InputText from 'primevue/inputtext';\n//import Button from 'primevue/button';\n//import Dialog from 'primevue/dialog';\n//import InlineMessage from 'primevue/inlinemessage';\n//import InputNumber from 'primevue/inputnumber';\n//import TabView from 'primevue/tabview';\n//import TabPanel from 'primevue/tabpanel';\n//import Dropdown from 'primevue/dropdown';\nimport axios from \"axios\"; //import $ from \"jquery\";\n\nimport { FilterMatchMode, FilterOperator } from 'primevue/api'; // for filtering\n\nexport default {\n  props: [\"systemId\"],\n  components: {//DataTable,\n    //Column,\n    //InputText,\n    //Button,\n    //Dialog,\n    //InlineMessage,\n    //InputNumber,\n    //TabView,\n    //TabPanel,\n    //Dropdown,\n  },\n\n  data() {\n    return {\n      allUsers: [],\n      filters: {\n        'global': {\n          value: null,\n          matchMode: FilterMatchMode.CONTAINS\n        },\n        'name': {\n          operator: FilterOperator.AND,\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'surname': {\n          operator: FilterOperator.AND,\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        },\n        'email': {\n          operator: FilterOperator.AND,\n          constraints: [{\n            value: null,\n            matchMode: FilterMatchMode.CONTAINS\n          }]\n        }\n      },\n      matchModes: [{\n        label: 'Starts With',\n        value: FilterMatchMode.STARTS_WITH\n      }, {\n        label: 'Contains',\n        value: FilterMatchMode.CONTAINS\n      }]\n    };\n  },\n\n  mounted() {\n    this.getAllUsers();\n  },\n\n  methods: {\n    getAllUsers() {\n      const sessionId = localStorage.getItem(\"token\");\n      const baseUrl = localStorage.getItem(\"_rootRestUrl\");\n      let formData = JSON.stringify({\n        sessionId: sessionId\n      });\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      axios.get(baseUrl + \"/api/v1/User/Users/?sessionId=\" + sessionId + \"\", formData, config).then(response => {\n        this.allUsers = response.data;\n      }).catch(function (error) {\n        // handle error\n        console.table(error);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4FA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAAQC,eAAR,EAAwBC,cAAxB,QAA6C,cAA7C,C,CAAqE;;AAIrE,eAAe;EACXC,KAAK,EAAE,CAAC,UAAD,CADI;EAEXC,UAAU,EAAE,CACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAVQ,CAFD;;EAgBbC,IAAI,GAAG;IACD,OAAO;MACHC,QAAQ,EAAC,EADN;MAGHC,OAAO,EAAE;QACN,UAAU;UAACC,KAAK,EAAE,IAAR;UAAcC,SAAS,EAAER,eAAe,CAACS;QAAzC,CADJ;QAEN,QAAO;UAACC,QAAQ,EAAET,cAAc,CAACU,GAA1B;UAA+BC,WAAW,EAAE,CAAC;YAACL,KAAK,EAAE,IAAR;YAAcC,SAAS,EAAER,eAAe,CAACS;UAAzC,CAAD;QAA5C,CAFD;QAGN,WAAW;UAACC,QAAQ,EAAET,cAAc,CAACU,GAA1B;UAA+BC,WAAW,EAAE,CAAC;YAACL,KAAK,EAAE,IAAR;YAAcC,SAAS,EAAER,eAAe,CAACS;UAAzC,CAAD;QAA5C,CAHL;QAIN,SAAS;UAACC,QAAQ,EAAET,cAAc,CAACU,GAA1B;UAA+BC,WAAW,EAAE,CAAC;YAACL,KAAK,EAAE,IAAR;YAAcC,SAAS,EAAER,eAAe,CAACS;UAAzC,CAAD;QAA5C;MAJH,CAHN;MAUHI,UAAU,EAAE,CACJ;QAACC,KAAK,EAAE,aAAR;QAAuBP,KAAK,EAAEP,eAAe,CAACe;MAA9C,CADI,EAEJ;QAACD,KAAK,EAAE,UAAR;QAAoBP,KAAK,EAAEP,eAAe,CAACS;MAA3C,CAFI;IAVT,CAAP;EAeH,CAhCU;;EAiCXO,OAAO,GAAG;IACN,KAAKC,WAAL;EAEH,CApCU;;EAqCXC,OAAO,EAAE;IACLD,WAAW,GAAE;MAEX,MAAME,SAAS,GAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhB;MACA,MAAMC,OAAM,GAAIF,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAhB;MAEA,IAAIE,QAAO,GAAIC,IAAI,CAACC,SAAL,CAAe;QAAEN,SAAS,EAAEA;MAAb,CAAf,CAAf;MACA,IAAIO,MAAK,GAAI;QACXC,OAAO,EAAE;UACP,gBAAgB;QADT;MADE,CAAb;MAOC5B,KAAI,CACF6B,GADF,CACMN,OAAM,GAAI,gCAAV,GAA2CH,SAA3C,GAAqD,EAD3D,EAC+DI,QAD/D,EACyEG,MADzE,EAEEG,IAFF,CAEQC,QAAD,IAAc;QACjB,KAAKzB,QAAL,GAAgByB,QAAQ,CAAC1B,IAAzB;MAEF,CALF,EAMG2B,KANH,CAMS,UAAUC,KAAV,EAAiB;QACrB;QACAC,OAAO,CAACC,KAAR,CAAcF,KAAd;MACF,CATH;IAYH;;EA1BK;AArCE,CAAf","names":["axios","FilterMatchMode","FilterOperator","props","components","data","allUsers","filters","value","matchMode","CONTAINS","operator","AND","constraints","matchModes","label","STARTS_WITH","mounted","getAllUsers","methods","sessionId","localStorage","getItem","baseUrl","formData","JSON","stringify","config","headers","get","then","response","catch","error","console","table"],"sourceRoot":"","sources":["Q:\\Projects\\Transport-web-\\src\\components\\pages\\transport\\ManageUsers.vue"],"sourcesContent":["<template>\r\n\r\n  <base-dialog :show=\"isLoading\"  title=\"Authenticating...\" fixed>\r\n    <base-spinner></base-spinner>\r\n  </base-dialog>\r\n\r\n  <div style=\"width:100%;\">\r\n  <DataTable :id=\"dataTable\" :value=\"allUsers\" :paginator=\"true\" :rows=\"25\"   dataKey=\"id\"  stripedRows v-model:filters=\"filters\" filterDisplay=\"menu\" key=\"key\" \r\n            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n            paginatorStart=\"CurrentPageReport\"\r\n            :rowsPerPageOptions=\"[25,50,100]\" responsiveLayout=\"scroll\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of total {totalRecords} trips\"\r\n            :globalFilterFields=\"['name','surname','email']\"\r\n            selectionMode=\"single\"\r\n            @rowSelect=\"onRowSelect\"\r\n            @rowClick=\"onRowClick\"\r\n            \r\n                        :loading=\"loading1\"\r\n            scrollable \r\n            :scrollHeight=\"tableHeight\"\r\n            >\r\n   \r\n\r\n\r\n              <template #header >\r\n                    \r\n                    <div style=\"display:none\" class=\"flex justify-content-between\">\r\n                        <!-- <Button type=\"button\" icon=\"pi pi-filter-slash\" label=\"Clear\" class=\"p-button-outlined\" @click=\"clearFilter1()\"/>  -->\r\n                        <span class=\"p-input-icon-left\" id=\"searchBox\">\r\n                            <i class=\"pi pi-search\" />\r\n                            <InputText v-model=\"filters['global'].value\" placeholder=\"Keyword Search\" />\r\n                        </span>\r\n                    </div>\r\n\r\n\r\n\r\n                   \r\n\r\n            </template>\r\n           \r\n           <template #empty>\r\n                    \r\n           </template>\r\n           <template #loading>\r\n                    Loading data. Please wait...\r\n           </template>\r\n\r\n\r\n    <Column field=\"name\" header=\"Name\" :sortable=\"true\" bodyStyle=\"text-align: left\">\r\n        <template #filter=\"{filterModel}\">\r\n            <InputText  type=\"text\" v-model=\"filterModel.value\" class=\"p-column-filter\" :placeholder=\"`Name`\"/>\r\n        </template>\r\n    </Column>\r\n\r\n    <Column field=\"surname\" header=\"Surname\" :sortable=\"true\" bodyStyle=\"text-align: left\">\r\n        <template #filter=\"{filterModel}\">\r\n            <InputText  type=\"text\" v-model=\"filterModel.value\" class=\"p-column-filter\" :placeholder=\"`Surname`\"/>\r\n        </template>\r\n    </Column>\r\n\r\n    <Column field=\"email\" header=\"Email\" :sortable=\"true\" bodyStyle=\"text-align: left\">\r\n        <template #filter=\"{filterModel}\">\r\n            <InputText  type=\"text\" v-model=\"filterModel.value\" class=\"p-column-filter\" :placeholder=\"`Email`\"/>\r\n        </template>\r\n    </Column>\r\n\r\n\r\n    \r\n   \r\n    \r\n   \r\n\r\n\r\n    <template #paginatorstart>\r\n    \r\n    </template>         \r\n    <template #paginatorend>\r\n      \r\n    </template>  \r\n    \r\n\r\n   \r\n\r\n\r\n</DataTable>\r\n</div>\r\n\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n// Primevue datatable help: https://www.primefaces.org/primevue/datatable //\r\n\r\n//import DataTable from \"primevue/datatable\";\r\n//import Column from \"primevue/column\";\r\n//import InputText from 'primevue/inputtext';\r\n//import Button from 'primevue/button';\r\n//import Dialog from 'primevue/dialog';\r\n//import InlineMessage from 'primevue/inlinemessage';\r\n//import InputNumber from 'primevue/inputnumber';\r\n//import TabView from 'primevue/tabview';\r\n//import TabPanel from 'primevue/tabpanel';\r\n//import Dropdown from 'primevue/dropdown';\r\n\r\nimport axios from \"axios\";\r\n//import $ from \"jquery\";\r\n\r\nimport {FilterMatchMode,FilterOperator} from 'primevue/api';         // for filtering\r\n\r\n\r\n\r\nexport default {\r\n    props: [\"systemId\"],\r\n    components: {\r\n        //DataTable,\r\n        //Column,\r\n        //InputText,\r\n        //Button,\r\n        //Dialog,\r\n        //InlineMessage,\r\n        //InputNumber,\r\n        //TabView,\r\n        //TabPanel,\r\n        //Dropdown,\r\n    \r\n  },\r\n  \r\n  data() {\r\n        return {\r\n            allUsers:[],\r\n           \r\n            filters: {\r\n               'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n               'name':{operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n               'surname': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n               'email': {operator: FilterOperator.AND, constraints: [{value: null, matchMode: FilterMatchMode.CONTAINS}]}, \r\n              \r\n            },\r\n            matchModes: [\r\n                    {label: 'Starts With', value: FilterMatchMode.STARTS_WITH},\r\n                    {label: 'Contains', value: FilterMatchMode.CONTAINS},\r\n             ],\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getAllUsers();\r\n\r\n    },\r\n    methods: {\r\n        getAllUsers(){\r\n            \r\n          const sessionId=localStorage.getItem(\"token\");\r\n          const baseUrl = localStorage.getItem(\"_rootRestUrl\");\r\n          \r\n          let formData = JSON.stringify({ sessionId: sessionId });\r\n          let config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n\r\n          };\r\n\r\n           axios\r\n            .get(baseUrl + \"/api/v1/User/Users/?sessionId=\"+sessionId+\"\", formData, config)\r\n            .then((response) => {\r\n               this.allUsers = response.data;\r\n           \r\n            })           \r\n             .catch(function (error) {\r\n                // handle error\r\n                console.table(error);\r\n             });\r\n\r\n\r\n        }\r\n\r\n    },\r\n\r\n\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}